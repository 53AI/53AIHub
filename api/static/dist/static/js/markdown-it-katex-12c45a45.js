import { g as Be } from "./cssfilter-476ae7ee.js";
import { m as _e } from "./match-at-ccd587f4.js";
function G0(r, e, t) {
  var n = "KaTeX parse error: " + r;
  if (e !== void 0 && t !== void 0) {
    n += " at position " + t + ": ";
    var a = e._input;
    a = a.slice(0, t) + "\u0332" + a.slice(t);
    var i = Math.max(0, t - 15), o = t + 15;
    n += a.slice(i, o);
  }
  var l = new Error(n);
  return l.name = "ParseError", l.__proto__ = G0.prototype, l.position = t, l;
}
G0.prototype.__proto__ = Error.prototype;
var W = G0;
function O0(r, e) {
  return r === void 0 ? e : r;
}
function He(r) {
  r = r || {}, this.displayMode = O0(r.displayMode, false), this.throwOnError = O0(r.throwOnError, true), this.errorColor = O0(r.errorColor, "#cc0000");
}
var fe = He;
function L(r, e, t, n) {
  this.id = r, this.size = e, this.cramped = n, this.sizeMultiplier = t;
}
L.prototype.sup = function() {
  return G[Xe[this.id]];
};
L.prototype.sub = function() {
  return G[Ue[this.id]];
};
L.prototype.fracNum = function() {
  return G[We[this.id]];
};
L.prototype.fracDen = function() {
  return G[je[this.id]];
};
L.prototype.cramp = function() {
  return G[Ye[this.id]];
};
L.prototype.cls = function() {
  return Ve[this.size] + (this.cramped ? " cramped" : " uncramped");
};
L.prototype.reset = function() {
  return Ge[this.size];
};
var pe = 0, H0 = 1, X0 = 2, u0 = 3, b0 = 4, I = 5, o0 = 6, F = 7, Ve = ["displaystyle textstyle", "textstyle", "scriptstyle", "scriptscriptstyle"], Ge = ["reset-textstyle", "reset-textstyle", "reset-scriptstyle", "reset-scriptscriptstyle"], G = [new L(pe, 0, 1, false), new L(H0, 0, 1, true), new L(X0, 1, 1, false), new L(u0, 1, 1, true), new L(b0, 2, 0.7, false), new L(I, 2, 0.7, true), new L(o0, 3, 0.5, false), new L(F, 3, 0.5, true)], Xe = [b0, I, b0, I, o0, F, o0, F], Ue = [I, I, I, I, F, F, F, F], We = [X0, u0, b0, I, o0, F, o0, F], je = [u0, u0, I, I, F, F, F, F], Ye = [H0, H0, u0, u0, I, I, F, F], C0 = { DISPLAY: G[pe], TEXT: G[X0], SCRIPT: G[b0], SCRIPTSCRIPT: G[o0] }, te = Array.prototype.indexOf, de = function(r, e) {
  if (r == null)
    return -1;
  if (te && r.indexOf === te)
    return r.indexOf(e);
  for (var t = 0, n = r.length; t < n; t++)
    if (r[t] === e)
      return t;
  return -1;
}, Je = function(r, e) {
  return de(r, e) !== -1;
}, Ke = function(r, e) {
  return r === void 0 ? e : r;
}, Ze = /([A-Z])/g, Qe = function(r) {
  return r.replace(Ze, "-$1").toLowerCase();
}, et = { "&": "&amp;", ">": "&gt;", "<": "&lt;", '"': "&quot;", "'": "&#x27;" }, tt = /[&><"']/g;
function rt(r) {
  return et[r];
}
function at(r) {
  return ("" + r).replace(tt, rt);
}
var T0;
if (typeof document < "u") {
  var it = document.createElement("span");
  "textContent" in it ? T0 = function(r, e) {
    r.textContent = e;
  } : T0 = function(r, e) {
    r.innerText = e;
  };
}
function nt(r) {
  T0(r, "");
}
var X = { contains: Je, deflt: Ke, escape: at, hyphenate: Qe, indexOf: de, setTextContent: T0, clearNode: nt }, U = X, E0 = function(r) {
  r = r.slice();
  for (var e = r.length - 1; e >= 0; e--)
    r[e] || r.splice(e, 1);
  return r.join(" ");
};
function R0(r, e, t, n, a, i) {
  this.classes = r || [], this.children = e || [], this.height = t || 0, this.depth = n || 0, this.maxFontSize = a || 0, this.style = i || {}, this.attributes = {};
}
R0.prototype.setAttribute = function(r, e) {
  this.attributes[r] = e;
};
R0.prototype.toNode = function() {
  var r = document.createElement("span");
  r.className = E0(this.classes);
  for (var e in this.style)
    Object.prototype.hasOwnProperty.call(this.style, e) && (r.style[e] = this.style[e]);
  for (var t in this.attributes)
    Object.prototype.hasOwnProperty.call(this.attributes, t) && r.setAttribute(t, this.attributes[t]);
  for (var n = 0; n < this.children.length; n++)
    r.appendChild(this.children[n].toNode());
  return r;
};
R0.prototype.toMarkup = function() {
  var r = "<span";
  this.classes.length && (r += ' class="', r += U.escape(E0(this.classes)), r += '"');
  var e = "";
  for (var t in this.style)
    this.style.hasOwnProperty(t) && (e += U.hyphenate(t) + ":" + this.style[t] + ";");
  e && (r += ' style="' + U.escape(e) + '"');
  for (var n in this.attributes)
    Object.prototype.hasOwnProperty.call(this.attributes, n) && (r += " " + n + '="', r += U.escape(this.attributes[n]), r += '"');
  r += ">";
  for (var a = 0; a < this.children.length; a++)
    r += this.children[a].toMarkup();
  return r += "</span>", r;
};
function U0(r, e, t, n) {
  this.children = r || [], this.height = e || 0, this.depth = t || 0, this.maxFontSize = n || 0;
}
U0.prototype.toNode = function() {
  for (var r = document.createDocumentFragment(), e = 0; e < this.children.length; e++)
    r.appendChild(this.children[e].toNode());
  return r;
};
U0.prototype.toMarkup = function() {
  for (var r = "", e = 0; e < this.children.length; e++)
    r += this.children[e].toMarkup();
  return r;
};
function W0(r, e, t, n, a, i, o) {
  this.value = r || "", this.height = e || 0, this.depth = t || 0, this.italic = n || 0, this.skew = a || 0, this.classes = i || [], this.style = o || {}, this.maxFontSize = 0;
}
W0.prototype.toNode = function() {
  var r = document.createTextNode(this.value), e = null;
  this.italic > 0 && (e = document.createElement("span"), e.style.marginRight = this.italic + "em"), this.classes.length > 0 && (e = e || document.createElement("span"), e.className = E0(this.classes));
  for (var t in this.style)
    this.style.hasOwnProperty(t) && (e = e || document.createElement("span"), e.style[t] = this.style[t]);
  return e ? (e.appendChild(r), e) : r;
};
W0.prototype.toMarkup = function() {
  var r = false, e = "<span";
  this.classes.length && (r = true, e += ' class="', e += U.escape(E0(this.classes)), e += '"');
  var t = "";
  this.italic > 0 && (t += "margin-right:" + this.italic + "em;");
  for (var n in this.style)
    this.style.hasOwnProperty(n) && (t += U.hyphenate(n) + ":" + this.style[n] + ";");
  t && (r = true, e += ' style="' + U.escape(t) + '"');
  var a = U.escape(this.value);
  return r ? (e += ">", e += a, e += "</span>", e) : a;
};
var ge = { span: R0, documentFragment: U0, symbolNode: W0 }, st = { "AMS-Regular": { 65: [0, 0.68889, 0, 0], 66: [0, 0.68889, 0, 0], 67: [0, 0.68889, 0, 0], 68: [0, 0.68889, 0, 0], 69: [0, 0.68889, 0, 0], 70: [0, 0.68889, 0, 0], 71: [0, 0.68889, 0, 0], 72: [0, 0.68889, 0, 0], 73: [0, 0.68889, 0, 0], 74: [0.16667, 0.68889, 0, 0], 75: [0, 0.68889, 0, 0], 76: [0, 0.68889, 0, 0], 77: [0, 0.68889, 0, 0], 78: [0, 0.68889, 0, 0], 79: [0.16667, 0.68889, 0, 0], 80: [0, 0.68889, 0, 0], 81: [0.16667, 0.68889, 0, 0], 82: [0, 0.68889, 0, 0], 83: [0, 0.68889, 0, 0], 84: [0, 0.68889, 0, 0], 85: [0, 0.68889, 0, 0], 86: [0, 0.68889, 0, 0], 87: [0, 0.68889, 0, 0], 88: [0, 0.68889, 0, 0], 89: [0, 0.68889, 0, 0], 90: [0, 0.68889, 0, 0], 107: [0, 0.68889, 0, 0], 165: [0, 0.675, 0.025, 0], 174: [0.15559, 0.69224, 0, 0], 240: [0, 0.68889, 0, 0], 295: [0, 0.68889, 0, 0], 710: [0, 0.825, 0, 0], 732: [0, 0.9, 0, 0], 770: [0, 0.825, 0, 0], 771: [0, 0.9, 0, 0], 989: [0.08167, 0.58167, 0, 0], 1008: [0, 0.43056, 0.04028, 0], 8245: [0, 0.54986, 0, 0], 8463: [0, 0.68889, 0, 0], 8487: [0, 0.68889, 0, 0], 8498: [0, 0.68889, 0, 0], 8502: [0, 0.68889, 0, 0], 8503: [0, 0.68889, 0, 0], 8504: [0, 0.68889, 0, 0], 8513: [0, 0.68889, 0, 0], 8592: [-0.03598, 0.46402, 0, 0], 8594: [-0.03598, 0.46402, 0, 0], 8602: [-0.13313, 0.36687, 0, 0], 8603: [-0.13313, 0.36687, 0, 0], 8606: [0.01354, 0.52239, 0, 0], 8608: [0.01354, 0.52239, 0, 0], 8610: [0.01354, 0.52239, 0, 0], 8611: [0.01354, 0.52239, 0, 0], 8619: [0, 0.54986, 0, 0], 8620: [0, 0.54986, 0, 0], 8621: [-0.13313, 0.37788, 0, 0], 8622: [-0.13313, 0.36687, 0, 0], 8624: [0, 0.69224, 0, 0], 8625: [0, 0.69224, 0, 0], 8630: [0, 0.43056, 0, 0], 8631: [0, 0.43056, 0, 0], 8634: [0.08198, 0.58198, 0, 0], 8635: [0.08198, 0.58198, 0, 0], 8638: [0.19444, 0.69224, 0, 0], 8639: [0.19444, 0.69224, 0, 0], 8642: [0.19444, 0.69224, 0, 0], 8643: [0.19444, 0.69224, 0, 0], 8644: [0.1808, 0.675, 0, 0], 8646: [0.1808, 0.675, 0, 0], 8647: [0.1808, 0.675, 0, 0], 8648: [0.19444, 0.69224, 0, 0], 8649: [0.1808, 0.675, 0, 0], 8650: [0.19444, 0.69224, 0, 0], 8651: [0.01354, 0.52239, 0, 0], 8652: [0.01354, 0.52239, 0, 0], 8653: [-0.13313, 0.36687, 0, 0], 8654: [-0.13313, 0.36687, 0, 0], 8655: [-0.13313, 0.36687, 0, 0], 8666: [0.13667, 0.63667, 0, 0], 8667: [0.13667, 0.63667, 0, 0], 8669: [-0.13313, 0.37788, 0, 0], 8672: [-0.064, 0.437, 0, 0], 8674: [-0.064, 0.437, 0, 0], 8705: [0, 0.825, 0, 0], 8708: [0, 0.68889, 0, 0], 8709: [0.08167, 0.58167, 0, 0], 8717: [0, 0.43056, 0, 0], 8722: [-0.03598, 0.46402, 0, 0], 8724: [0.08198, 0.69224, 0, 0], 8726: [0.08167, 0.58167, 0, 0], 8733: [0, 0.69224, 0, 0], 8736: [0, 0.69224, 0, 0], 8737: [0, 0.69224, 0, 0], 8738: [0.03517, 0.52239, 0, 0], 8739: [0.08167, 0.58167, 0, 0], 8740: [0.25142, 0.74111, 0, 0], 8741: [0.08167, 0.58167, 0, 0], 8742: [0.25142, 0.74111, 0, 0], 8756: [0, 0.69224, 0, 0], 8757: [0, 0.69224, 0, 0], 8764: [-0.13313, 0.36687, 0, 0], 8765: [-0.13313, 0.37788, 0, 0], 8769: [-0.13313, 0.36687, 0, 0], 8770: [-0.03625, 0.46375, 0, 0], 8774: [0.30274, 0.79383, 0, 0], 8776: [-0.01688, 0.48312, 0, 0], 8778: [0.08167, 0.58167, 0, 0], 8782: [0.06062, 0.54986, 0, 0], 8783: [0.06062, 0.54986, 0, 0], 8785: [0.08198, 0.58198, 0, 0], 8786: [0.08198, 0.58198, 0, 0], 8787: [0.08198, 0.58198, 0, 0], 8790: [0, 0.69224, 0, 0], 8791: [0.22958, 0.72958, 0, 0], 8796: [0.08198, 0.91667, 0, 0], 8806: [0.25583, 0.75583, 0, 0], 8807: [0.25583, 0.75583, 0, 0], 8808: [0.25142, 0.75726, 0, 0], 8809: [0.25142, 0.75726, 0, 0], 8812: [0.25583, 0.75583, 0, 0], 8814: [0.20576, 0.70576, 0, 0], 8815: [0.20576, 0.70576, 0, 0], 8816: [0.30274, 0.79383, 0, 0], 8817: [0.30274, 0.79383, 0, 0], 8818: [0.22958, 0.72958, 0, 0], 8819: [0.22958, 0.72958, 0, 0], 8822: [0.1808, 0.675, 0, 0], 8823: [0.1808, 0.675, 0, 0], 8828: [0.13667, 0.63667, 0, 0], 8829: [0.13667, 0.63667, 0, 0], 8830: [0.22958, 0.72958, 0, 0], 8831: [0.22958, 0.72958, 0, 0], 8832: [0.20576, 0.70576, 0, 0], 8833: [0.20576, 0.70576, 0, 0], 8840: [0.30274, 0.79383, 0, 0], 8841: [0.30274, 0.79383, 0, 0], 8842: [0.13597, 0.63597, 0, 0], 8843: [0.13597, 0.63597, 0, 0], 8847: [0.03517, 0.54986, 0, 0], 8848: [0.03517, 0.54986, 0, 0], 8858: [0.08198, 0.58198, 0, 0], 8859: [0.08198, 0.58198, 0, 0], 8861: [0.08198, 0.58198, 0, 0], 8862: [0, 0.675, 0, 0], 8863: [0, 0.675, 0, 0], 8864: [0, 0.675, 0, 0], 8865: [0, 0.675, 0, 0], 8872: [0, 0.69224, 0, 0], 8873: [0, 0.69224, 0, 0], 8874: [0, 0.69224, 0, 0], 8876: [0, 0.68889, 0, 0], 8877: [0, 0.68889, 0, 0], 8878: [0, 0.68889, 0, 0], 8879: [0, 0.68889, 0, 0], 8882: [0.03517, 0.54986, 0, 0], 8883: [0.03517, 0.54986, 0, 0], 8884: [0.13667, 0.63667, 0, 0], 8885: [0.13667, 0.63667, 0, 0], 8888: [0, 0.54986, 0, 0], 8890: [0.19444, 0.43056, 0, 0], 8891: [0.19444, 0.69224, 0, 0], 8892: [0.19444, 0.69224, 0, 0], 8901: [0, 0.54986, 0, 0], 8903: [0.08167, 0.58167, 0, 0], 8905: [0.08167, 0.58167, 0, 0], 8906: [0.08167, 0.58167, 0, 0], 8907: [0, 0.69224, 0, 0], 8908: [0, 0.69224, 0, 0], 8909: [-0.03598, 0.46402, 0, 0], 8910: [0, 0.54986, 0, 0], 8911: [0, 0.54986, 0, 0], 8912: [0.03517, 0.54986, 0, 0], 8913: [0.03517, 0.54986, 0, 0], 8914: [0, 0.54986, 0, 0], 8915: [0, 0.54986, 0, 0], 8916: [0, 0.69224, 0, 0], 8918: [0.0391, 0.5391, 0, 0], 8919: [0.0391, 0.5391, 0, 0], 8920: [0.03517, 0.54986, 0, 0], 8921: [0.03517, 0.54986, 0, 0], 8922: [0.38569, 0.88569, 0, 0], 8923: [0.38569, 0.88569, 0, 0], 8926: [0.13667, 0.63667, 0, 0], 8927: [0.13667, 0.63667, 0, 0], 8928: [0.30274, 0.79383, 0, 0], 8929: [0.30274, 0.79383, 0, 0], 8934: [0.23222, 0.74111, 0, 0], 8935: [0.23222, 0.74111, 0, 0], 8936: [0.23222, 0.74111, 0, 0], 8937: [0.23222, 0.74111, 0, 0], 8938: [0.20576, 0.70576, 0, 0], 8939: [0.20576, 0.70576, 0, 0], 8940: [0.30274, 0.79383, 0, 0], 8941: [0.30274, 0.79383, 0, 0], 8994: [0.19444, 0.69224, 0, 0], 8995: [0.19444, 0.69224, 0, 0], 9416: [0.15559, 0.69224, 0, 0], 9484: [0, 0.69224, 0, 0], 9488: [0, 0.69224, 0, 0], 9492: [0, 0.37788, 0, 0], 9496: [0, 0.37788, 0, 0], 9585: [0.19444, 0.68889, 0, 0], 9586: [0.19444, 0.74111, 0, 0], 9632: [0, 0.675, 0, 0], 9633: [0, 0.675, 0, 0], 9650: [0, 0.54986, 0, 0], 9651: [0, 0.54986, 0, 0], 9654: [0.03517, 0.54986, 0, 0], 9660: [0, 0.54986, 0, 0], 9661: [0, 0.54986, 0, 0], 9664: [0.03517, 0.54986, 0, 0], 9674: [0.11111, 0.69224, 0, 0], 9733: [0.19444, 0.69224, 0, 0], 10003: [0, 0.69224, 0, 0], 10016: [0, 0.69224, 0, 0], 10731: [0.11111, 0.69224, 0, 0], 10846: [0.19444, 0.75583, 0, 0], 10877: [0.13667, 0.63667, 0, 0], 10878: [0.13667, 0.63667, 0, 0], 10885: [0.25583, 0.75583, 0, 0], 10886: [0.25583, 0.75583, 0, 0], 10887: [0.13597, 0.63597, 0, 0], 10888: [0.13597, 0.63597, 0, 0], 10889: [0.26167, 0.75726, 0, 0], 10890: [0.26167, 0.75726, 0, 0], 10891: [0.48256, 0.98256, 0, 0], 10892: [0.48256, 0.98256, 0, 0], 10901: [0.13667, 0.63667, 0, 0], 10902: [0.13667, 0.63667, 0, 0], 10933: [0.25142, 0.75726, 0, 0], 10934: [0.25142, 0.75726, 0, 0], 10935: [0.26167, 0.75726, 0, 0], 10936: [0.26167, 0.75726, 0, 0], 10937: [0.26167, 0.75726, 0, 0], 10938: [0.26167, 0.75726, 0, 0], 10949: [0.25583, 0.75583, 0, 0], 10950: [0.25583, 0.75583, 0, 0], 10955: [0.28481, 0.79383, 0, 0], 10956: [0.28481, 0.79383, 0, 0], 57350: [0.08167, 0.58167, 0, 0], 57351: [0.08167, 0.58167, 0, 0], 57352: [0.08167, 0.58167, 0, 0], 57353: [0, 0.43056, 0.04028, 0], 57356: [0.25142, 0.75726, 0, 0], 57357: [0.25142, 0.75726, 0, 0], 57358: [0.41951, 0.91951, 0, 0], 57359: [0.30274, 0.79383, 0, 0], 57360: [0.30274, 0.79383, 0, 0], 57361: [0.41951, 0.91951, 0, 0], 57366: [0.25142, 0.75726, 0, 0], 57367: [0.25142, 0.75726, 0, 0], 57368: [0.25142, 0.75726, 0, 0], 57369: [0.25142, 0.75726, 0, 0], 57370: [0.13597, 0.63597, 0, 0], 57371: [0.13597, 0.63597, 0, 0] }, "Caligraphic-Regular": { 48: [0, 0.43056, 0, 0], 49: [0, 0.43056, 0, 0], 50: [0, 0.43056, 0, 0], 51: [0.19444, 0.43056, 0, 0], 52: [0.19444, 0.43056, 0, 0], 53: [0.19444, 0.43056, 0, 0], 54: [0, 0.64444, 0, 0], 55: [0.19444, 0.43056, 0, 0], 56: [0, 0.64444, 0, 0], 57: [0.19444, 0.43056, 0, 0], 65: [0, 0.68333, 0, 0.19445], 66: [0, 0.68333, 0.03041, 0.13889], 67: [0, 0.68333, 0.05834, 0.13889], 68: [0, 0.68333, 0.02778, 0.08334], 69: [0, 0.68333, 0.08944, 0.11111], 70: [0, 0.68333, 0.09931, 0.11111], 71: [0.09722, 0.68333, 0.0593, 0.11111], 72: [0, 0.68333, 965e-5, 0.11111], 73: [0, 0.68333, 0.07382, 0], 74: [0.09722, 0.68333, 0.18472, 0.16667], 75: [0, 0.68333, 0.01445, 0.05556], 76: [0, 0.68333, 0, 0.13889], 77: [0, 0.68333, 0, 0.13889], 78: [0, 0.68333, 0.14736, 0.08334], 79: [0, 0.68333, 0.02778, 0.11111], 80: [0, 0.68333, 0.08222, 0.08334], 81: [0.09722, 0.68333, 0, 0.11111], 82: [0, 0.68333, 0, 0.08334], 83: [0, 0.68333, 0.075, 0.13889], 84: [0, 0.68333, 0.25417, 0], 85: [0, 0.68333, 0.09931, 0.08334], 86: [0, 0.68333, 0.08222, 0], 87: [0, 0.68333, 0.08222, 0.08334], 88: [0, 0.68333, 0.14643, 0.13889], 89: [0.09722, 0.68333, 0.08222, 0.08334], 90: [0, 0.68333, 0.07944, 0.13889] }, "Fraktur-Regular": { 33: [0, 0.69141, 0, 0], 34: [0, 0.69141, 0, 0], 38: [0, 0.69141, 0, 0], 39: [0, 0.69141, 0, 0], 40: [0.24982, 0.74947, 0, 0], 41: [0.24982, 0.74947, 0, 0], 42: [0, 0.62119, 0, 0], 43: [0.08319, 0.58283, 0, 0], 44: [0, 0.10803, 0, 0], 45: [0.08319, 0.58283, 0, 0], 46: [0, 0.10803, 0, 0], 47: [0.24982, 0.74947, 0, 0], 48: [0, 0.47534, 0, 0], 49: [0, 0.47534, 0, 0], 50: [0, 0.47534, 0, 0], 51: [0.18906, 0.47534, 0, 0], 52: [0.18906, 0.47534, 0, 0], 53: [0.18906, 0.47534, 0, 0], 54: [0, 0.69141, 0, 0], 55: [0.18906, 0.47534, 0, 0], 56: [0, 0.69141, 0, 0], 57: [0.18906, 0.47534, 0, 0], 58: [0, 0.47534, 0, 0], 59: [0.12604, 0.47534, 0, 0], 61: [-0.13099, 0.36866, 0, 0], 63: [0, 0.69141, 0, 0], 65: [0, 0.69141, 0, 0], 66: [0, 0.69141, 0, 0], 67: [0, 0.69141, 0, 0], 68: [0, 0.69141, 0, 0], 69: [0, 0.69141, 0, 0], 70: [0.12604, 0.69141, 0, 0], 71: [0, 0.69141, 0, 0], 72: [0.06302, 0.69141, 0, 0], 73: [0, 0.69141, 0, 0], 74: [0.12604, 0.69141, 0, 0], 75: [0, 0.69141, 0, 0], 76: [0, 0.69141, 0, 0], 77: [0, 0.69141, 0, 0], 78: [0, 0.69141, 0, 0], 79: [0, 0.69141, 0, 0], 80: [0.18906, 0.69141, 0, 0], 81: [0.03781, 0.69141, 0, 0], 82: [0, 0.69141, 0, 0], 83: [0, 0.69141, 0, 0], 84: [0, 0.69141, 0, 0], 85: [0, 0.69141, 0, 0], 86: [0, 0.69141, 0, 0], 87: [0, 0.69141, 0, 0], 88: [0, 0.69141, 0, 0], 89: [0.18906, 0.69141, 0, 0], 90: [0.12604, 0.69141, 0, 0], 91: [0.24982, 0.74947, 0, 0], 93: [0.24982, 0.74947, 0, 0], 94: [0, 0.69141, 0, 0], 97: [0, 0.47534, 0, 0], 98: [0, 0.69141, 0, 0], 99: [0, 0.47534, 0, 0], 100: [0, 0.62119, 0, 0], 101: [0, 0.47534, 0, 0], 102: [0.18906, 0.69141, 0, 0], 103: [0.18906, 0.47534, 0, 0], 104: [0.18906, 0.69141, 0, 0], 105: [0, 0.69141, 0, 0], 106: [0, 0.69141, 0, 0], 107: [0, 0.69141, 0, 0], 108: [0, 0.69141, 0, 0], 109: [0, 0.47534, 0, 0], 110: [0, 0.47534, 0, 0], 111: [0, 0.47534, 0, 0], 112: [0.18906, 0.52396, 0, 0], 113: [0.18906, 0.47534, 0, 0], 114: [0, 0.47534, 0, 0], 115: [0, 0.47534, 0, 0], 116: [0, 0.62119, 0, 0], 117: [0, 0.47534, 0, 0], 118: [0, 0.52396, 0, 0], 119: [0, 0.52396, 0, 0], 120: [0.18906, 0.47534, 0, 0], 121: [0.18906, 0.47534, 0, 0], 122: [0.18906, 0.47534, 0, 0], 8216: [0, 0.69141, 0, 0], 8217: [0, 0.69141, 0, 0], 58112: [0, 0.62119, 0, 0], 58113: [0, 0.62119, 0, 0], 58114: [0.18906, 0.69141, 0, 0], 58115: [0.18906, 0.69141, 0, 0], 58116: [0.18906, 0.47534, 0, 0], 58117: [0, 0.69141, 0, 0], 58118: [0, 0.62119, 0, 0], 58119: [0, 0.47534, 0, 0] }, "Main-Bold": { 33: [0, 0.69444, 0, 0], 34: [0, 0.69444, 0, 0], 35: [0.19444, 0.69444, 0, 0], 36: [0.05556, 0.75, 0, 0], 37: [0.05556, 0.75, 0, 0], 38: [0, 0.69444, 0, 0], 39: [0, 0.69444, 0, 0], 40: [0.25, 0.75, 0, 0], 41: [0.25, 0.75, 0, 0], 42: [0, 0.75, 0, 0], 43: [0.13333, 0.63333, 0, 0], 44: [0.19444, 0.15556, 0, 0], 45: [0, 0.44444, 0, 0], 46: [0, 0.15556, 0, 0], 47: [0.25, 0.75, 0, 0], 48: [0, 0.64444, 0, 0], 49: [0, 0.64444, 0, 0], 50: [0, 0.64444, 0, 0], 51: [0, 0.64444, 0, 0], 52: [0, 0.64444, 0, 0], 53: [0, 0.64444, 0, 0], 54: [0, 0.64444, 0, 0], 55: [0, 0.64444, 0, 0], 56: [0, 0.64444, 0, 0], 57: [0, 0.64444, 0, 0], 58: [0, 0.44444, 0, 0], 59: [0.19444, 0.44444, 0, 0], 60: [0.08556, 0.58556, 0, 0], 61: [-0.10889, 0.39111, 0, 0], 62: [0.08556, 0.58556, 0, 0], 63: [0, 0.69444, 0, 0], 64: [0, 0.69444, 0, 0], 65: [0, 0.68611, 0, 0], 66: [0, 0.68611, 0, 0], 67: [0, 0.68611, 0, 0], 68: [0, 0.68611, 0, 0], 69: [0, 0.68611, 0, 0], 70: [0, 0.68611, 0, 0], 71: [0, 0.68611, 0, 0], 72: [0, 0.68611, 0, 0], 73: [0, 0.68611, 0, 0], 74: [0, 0.68611, 0, 0], 75: [0, 0.68611, 0, 0], 76: [0, 0.68611, 0, 0], 77: [0, 0.68611, 0, 0], 78: [0, 0.68611, 0, 0], 79: [0, 0.68611, 0, 0], 80: [0, 0.68611, 0, 0], 81: [0.19444, 0.68611, 0, 0], 82: [0, 0.68611, 0, 0], 83: [0, 0.68611, 0, 0], 84: [0, 0.68611, 0, 0], 85: [0, 0.68611, 0, 0], 86: [0, 0.68611, 0.01597, 0], 87: [0, 0.68611, 0.01597, 0], 88: [0, 0.68611, 0, 0], 89: [0, 0.68611, 0.02875, 0], 90: [0, 0.68611, 0, 0], 91: [0.25, 0.75, 0, 0], 92: [0.25, 0.75, 0, 0], 93: [0.25, 0.75, 0, 0], 94: [0, 0.69444, 0, 0], 95: [0.31, 0.13444, 0.03194, 0], 96: [0, 0.69444, 0, 0], 97: [0, 0.44444, 0, 0], 98: [0, 0.69444, 0, 0], 99: [0, 0.44444, 0, 0], 100: [0, 0.69444, 0, 0], 101: [0, 0.44444, 0, 0], 102: [0, 0.69444, 0.10903, 0], 103: [0.19444, 0.44444, 0.01597, 0], 104: [0, 0.69444, 0, 0], 105: [0, 0.69444, 0, 0], 106: [0.19444, 0.69444, 0, 0], 107: [0, 0.69444, 0, 0], 108: [0, 0.69444, 0, 0], 109: [0, 0.44444, 0, 0], 110: [0, 0.44444, 0, 0], 111: [0, 0.44444, 0, 0], 112: [0.19444, 0.44444, 0, 0], 113: [0.19444, 0.44444, 0, 0], 114: [0, 0.44444, 0, 0], 115: [0, 0.44444, 0, 0], 116: [0, 0.63492, 0, 0], 117: [0, 0.44444, 0, 0], 118: [0, 0.44444, 0.01597, 0], 119: [0, 0.44444, 0.01597, 0], 120: [0, 0.44444, 0, 0], 121: [0.19444, 0.44444, 0.01597, 0], 122: [0, 0.44444, 0, 0], 123: [0.25, 0.75, 0, 0], 124: [0.25, 0.75, 0, 0], 125: [0.25, 0.75, 0, 0], 126: [0.35, 0.34444, 0, 0], 168: [0, 0.69444, 0, 0], 172: [0, 0.44444, 0, 0], 175: [0, 0.59611, 0, 0], 176: [0, 0.69444, 0, 0], 177: [0.13333, 0.63333, 0, 0], 180: [0, 0.69444, 0, 0], 215: [0.13333, 0.63333, 0, 0], 247: [0.13333, 0.63333, 0, 0], 305: [0, 0.44444, 0, 0], 567: [0.19444, 0.44444, 0, 0], 710: [0, 0.69444, 0, 0], 711: [0, 0.63194, 0, 0], 713: [0, 0.59611, 0, 0], 714: [0, 0.69444, 0, 0], 715: [0, 0.69444, 0, 0], 728: [0, 0.69444, 0, 0], 729: [0, 0.69444, 0, 0], 730: [0, 0.69444, 0, 0], 732: [0, 0.69444, 0, 0], 768: [0, 0.69444, 0, 0], 769: [0, 0.69444, 0, 0], 770: [0, 0.69444, 0, 0], 771: [0, 0.69444, 0, 0], 772: [0, 0.59611, 0, 0], 774: [0, 0.69444, 0, 0], 775: [0, 0.69444, 0, 0], 776: [0, 0.69444, 0, 0], 778: [0, 0.69444, 0, 0], 779: [0, 0.69444, 0, 0], 780: [0, 0.63194, 0, 0], 824: [0.19444, 0.69444, 0, 0], 915: [0, 0.68611, 0, 0], 916: [0, 0.68611, 0, 0], 920: [0, 0.68611, 0, 0], 923: [0, 0.68611, 0, 0], 926: [0, 0.68611, 0, 0], 928: [0, 0.68611, 0, 0], 931: [0, 0.68611, 0, 0], 933: [0, 0.68611, 0, 0], 934: [0, 0.68611, 0, 0], 936: [0, 0.68611, 0, 0], 937: [0, 0.68611, 0, 0], 8211: [0, 0.44444, 0.03194, 0], 8212: [0, 0.44444, 0.03194, 0], 8216: [0, 0.69444, 0, 0], 8217: [0, 0.69444, 0, 0], 8220: [0, 0.69444, 0, 0], 8221: [0, 0.69444, 0, 0], 8224: [0.19444, 0.69444, 0, 0], 8225: [0.19444, 0.69444, 0, 0], 8242: [0, 0.55556, 0, 0], 8407: [0, 0.72444, 0.15486, 0], 8463: [0, 0.69444, 0, 0], 8465: [0, 0.69444, 0, 0], 8467: [0, 0.69444, 0, 0], 8472: [0.19444, 0.44444, 0, 0], 8476: [0, 0.69444, 0, 0], 8501: [0, 0.69444, 0, 0], 8592: [-0.10889, 0.39111, 0, 0], 8593: [0.19444, 0.69444, 0, 0], 8594: [-0.10889, 0.39111, 0, 0], 8595: [0.19444, 0.69444, 0, 0], 8596: [-0.10889, 0.39111, 0, 0], 8597: [0.25, 0.75, 0, 0], 8598: [0.19444, 0.69444, 0, 0], 8599: [0.19444, 0.69444, 0, 0], 8600: [0.19444, 0.69444, 0, 0], 8601: [0.19444, 0.69444, 0, 0], 8636: [-0.10889, 0.39111, 0, 0], 8637: [-0.10889, 0.39111, 0, 0], 8640: [-0.10889, 0.39111, 0, 0], 8641: [-0.10889, 0.39111, 0, 0], 8656: [-0.10889, 0.39111, 0, 0], 8657: [0.19444, 0.69444, 0, 0], 8658: [-0.10889, 0.39111, 0, 0], 8659: [0.19444, 0.69444, 0, 0], 8660: [-0.10889, 0.39111, 0, 0], 8661: [0.25, 0.75, 0, 0], 8704: [0, 0.69444, 0, 0], 8706: [0, 0.69444, 0.06389, 0], 8707: [0, 0.69444, 0, 0], 8709: [0.05556, 0.75, 0, 0], 8711: [0, 0.68611, 0, 0], 8712: [0.08556, 0.58556, 0, 0], 8715: [0.08556, 0.58556, 0, 0], 8722: [0.13333, 0.63333, 0, 0], 8723: [0.13333, 0.63333, 0, 0], 8725: [0.25, 0.75, 0, 0], 8726: [0.25, 0.75, 0, 0], 8727: [-0.02778, 0.47222, 0, 0], 8728: [-0.02639, 0.47361, 0, 0], 8729: [-0.02639, 0.47361, 0, 0], 8730: [0.18, 0.82, 0, 0], 8733: [0, 0.44444, 0, 0], 8734: [0, 0.44444, 0, 0], 8736: [0, 0.69224, 0, 0], 8739: [0.25, 0.75, 0, 0], 8741: [0.25, 0.75, 0, 0], 8743: [0, 0.55556, 0, 0], 8744: [0, 0.55556, 0, 0], 8745: [0, 0.55556, 0, 0], 8746: [0, 0.55556, 0, 0], 8747: [0.19444, 0.69444, 0.12778, 0], 8764: [-0.10889, 0.39111, 0, 0], 8768: [0.19444, 0.69444, 0, 0], 8771: [222e-5, 0.50222, 0, 0], 8776: [0.02444, 0.52444, 0, 0], 8781: [222e-5, 0.50222, 0, 0], 8801: [222e-5, 0.50222, 0, 0], 8804: [0.19667, 0.69667, 0, 0], 8805: [0.19667, 0.69667, 0, 0], 8810: [0.08556, 0.58556, 0, 0], 8811: [0.08556, 0.58556, 0, 0], 8826: [0.08556, 0.58556, 0, 0], 8827: [0.08556, 0.58556, 0, 0], 8834: [0.08556, 0.58556, 0, 0], 8835: [0.08556, 0.58556, 0, 0], 8838: [0.19667, 0.69667, 0, 0], 8839: [0.19667, 0.69667, 0, 0], 8846: [0, 0.55556, 0, 0], 8849: [0.19667, 0.69667, 0, 0], 8850: [0.19667, 0.69667, 0, 0], 8851: [0, 0.55556, 0, 0], 8852: [0, 0.55556, 0, 0], 8853: [0.13333, 0.63333, 0, 0], 8854: [0.13333, 0.63333, 0, 0], 8855: [0.13333, 0.63333, 0, 0], 8856: [0.13333, 0.63333, 0, 0], 8857: [0.13333, 0.63333, 0, 0], 8866: [0, 0.69444, 0, 0], 8867: [0, 0.69444, 0, 0], 8868: [0, 0.69444, 0, 0], 8869: [0, 0.69444, 0, 0], 8900: [-0.02639, 0.47361, 0, 0], 8901: [-0.02639, 0.47361, 0, 0], 8902: [-0.02778, 0.47222, 0, 0], 8968: [0.25, 0.75, 0, 0], 8969: [0.25, 0.75, 0, 0], 8970: [0.25, 0.75, 0, 0], 8971: [0.25, 0.75, 0, 0], 8994: [-0.13889, 0.36111, 0, 0], 8995: [-0.13889, 0.36111, 0, 0], 9651: [0.19444, 0.69444, 0, 0], 9657: [-0.02778, 0.47222, 0, 0], 9661: [0.19444, 0.69444, 0, 0], 9667: [-0.02778, 0.47222, 0, 0], 9711: [0.19444, 0.69444, 0, 0], 9824: [0.12963, 0.69444, 0, 0], 9825: [0.12963, 0.69444, 0, 0], 9826: [0.12963, 0.69444, 0, 0], 9827: [0.12963, 0.69444, 0, 0], 9837: [0, 0.75, 0, 0], 9838: [0.19444, 0.69444, 0, 0], 9839: [0.19444, 0.69444, 0, 0], 10216: [0.25, 0.75, 0, 0], 10217: [0.25, 0.75, 0, 0], 10815: [0, 0.68611, 0, 0], 10927: [0.19667, 0.69667, 0, 0], 10928: [0.19667, 0.69667, 0, 0] }, "Main-Italic": { 33: [0, 0.69444, 0.12417, 0], 34: [0, 0.69444, 0.06961, 0], 35: [0.19444, 0.69444, 0.06616, 0], 37: [0.05556, 0.75, 0.13639, 0], 38: [0, 0.69444, 0.09694, 0], 39: [0, 0.69444, 0.12417, 0], 40: [0.25, 0.75, 0.16194, 0], 41: [0.25, 0.75, 0.03694, 0], 42: [0, 0.75, 0.14917, 0], 43: [0.05667, 0.56167, 0.03694, 0], 44: [0.19444, 0.10556, 0, 0], 45: [0, 0.43056, 0.02826, 0], 46: [0, 0.10556, 0, 0], 47: [0.25, 0.75, 0.16194, 0], 48: [0, 0.64444, 0.13556, 0], 49: [0, 0.64444, 0.13556, 0], 50: [0, 0.64444, 0.13556, 0], 51: [0, 0.64444, 0.13556, 0], 52: [0.19444, 0.64444, 0.13556, 0], 53: [0, 0.64444, 0.13556, 0], 54: [0, 0.64444, 0.13556, 0], 55: [0.19444, 0.64444, 0.13556, 0], 56: [0, 0.64444, 0.13556, 0], 57: [0, 0.64444, 0.13556, 0], 58: [0, 0.43056, 0.0582, 0], 59: [0.19444, 0.43056, 0.0582, 0], 61: [-0.13313, 0.36687, 0.06616, 0], 63: [0, 0.69444, 0.1225, 0], 64: [0, 0.69444, 0.09597, 0], 65: [0, 0.68333, 0, 0], 66: [0, 0.68333, 0.10257, 0], 67: [0, 0.68333, 0.14528, 0], 68: [0, 0.68333, 0.09403, 0], 69: [0, 0.68333, 0.12028, 0], 70: [0, 0.68333, 0.13305, 0], 71: [0, 0.68333, 0.08722, 0], 72: [0, 0.68333, 0.16389, 0], 73: [0, 0.68333, 0.15806, 0], 74: [0, 0.68333, 0.14028, 0], 75: [0, 0.68333, 0.14528, 0], 76: [0, 0.68333, 0, 0], 77: [0, 0.68333, 0.16389, 0], 78: [0, 0.68333, 0.16389, 0], 79: [0, 0.68333, 0.09403, 0], 80: [0, 0.68333, 0.10257, 0], 81: [0.19444, 0.68333, 0.09403, 0], 82: [0, 0.68333, 0.03868, 0], 83: [0, 0.68333, 0.11972, 0], 84: [0, 0.68333, 0.13305, 0], 85: [0, 0.68333, 0.16389, 0], 86: [0, 0.68333, 0.18361, 0], 87: [0, 0.68333, 0.18361, 0], 88: [0, 0.68333, 0.15806, 0], 89: [0, 0.68333, 0.19383, 0], 90: [0, 0.68333, 0.14528, 0], 91: [0.25, 0.75, 0.1875, 0], 93: [0.25, 0.75, 0.10528, 0], 94: [0, 0.69444, 0.06646, 0], 95: [0.31, 0.12056, 0.09208, 0], 97: [0, 0.43056, 0.07671, 0], 98: [0, 0.69444, 0.06312, 0], 99: [0, 0.43056, 0.05653, 0], 100: [0, 0.69444, 0.10333, 0], 101: [0, 0.43056, 0.07514, 0], 102: [0.19444, 0.69444, 0.21194, 0], 103: [0.19444, 0.43056, 0.08847, 0], 104: [0, 0.69444, 0.07671, 0], 105: [0, 0.65536, 0.1019, 0], 106: [0.19444, 0.65536, 0.14467, 0], 107: [0, 0.69444, 0.10764, 0], 108: [0, 0.69444, 0.10333, 0], 109: [0, 0.43056, 0.07671, 0], 110: [0, 0.43056, 0.07671, 0], 111: [0, 0.43056, 0.06312, 0], 112: [0.19444, 0.43056, 0.06312, 0], 113: [0.19444, 0.43056, 0.08847, 0], 114: [0, 0.43056, 0.10764, 0], 115: [0, 0.43056, 0.08208, 0], 116: [0, 0.61508, 0.09486, 0], 117: [0, 0.43056, 0.07671, 0], 118: [0, 0.43056, 0.10764, 0], 119: [0, 0.43056, 0.10764, 0], 120: [0, 0.43056, 0.12042, 0], 121: [0.19444, 0.43056, 0.08847, 0], 122: [0, 0.43056, 0.12292, 0], 126: [0.35, 0.31786, 0.11585, 0], 163: [0, 0.69444, 0, 0], 305: [0, 0.43056, 0, 0.02778], 567: [0.19444, 0.43056, 0, 0.08334], 768: [0, 0.69444, 0, 0], 769: [0, 0.69444, 0.09694, 0], 770: [0, 0.69444, 0.06646, 0], 771: [0, 0.66786, 0.11585, 0], 772: [0, 0.56167, 0.10333, 0], 774: [0, 0.69444, 0.10806, 0], 775: [0, 0.66786, 0.11752, 0], 776: [0, 0.66786, 0.10474, 0], 778: [0, 0.69444, 0, 0], 779: [0, 0.69444, 0.1225, 0], 780: [0, 0.62847, 0.08295, 0], 915: [0, 0.68333, 0.13305, 0], 916: [0, 0.68333, 0, 0], 920: [0, 0.68333, 0.09403, 0], 923: [0, 0.68333, 0, 0], 926: [0, 0.68333, 0.15294, 0], 928: [0, 0.68333, 0.16389, 0], 931: [0, 0.68333, 0.12028, 0], 933: [0, 0.68333, 0.11111, 0], 934: [0, 0.68333, 0.05986, 0], 936: [0, 0.68333, 0.11111, 0], 937: [0, 0.68333, 0.10257, 0], 8211: [0, 0.43056, 0.09208, 0], 8212: [0, 0.43056, 0.09208, 0], 8216: [0, 0.69444, 0.12417, 0], 8217: [0, 0.69444, 0.12417, 0], 8220: [0, 0.69444, 0.1685, 0], 8221: [0, 0.69444, 0.06961, 0], 8463: [0, 0.68889, 0, 0] }, "Main-Regular": { 32: [0, 0, 0, 0], 33: [0, 0.69444, 0, 0], 34: [0, 0.69444, 0, 0], 35: [0.19444, 0.69444, 0, 0], 36: [0.05556, 0.75, 0, 0], 37: [0.05556, 0.75, 0, 0], 38: [0, 0.69444, 0, 0], 39: [0, 0.69444, 0, 0], 40: [0.25, 0.75, 0, 0], 41: [0.25, 0.75, 0, 0], 42: [0, 0.75, 0, 0], 43: [0.08333, 0.58333, 0, 0], 44: [0.19444, 0.10556, 0, 0], 45: [0, 0.43056, 0, 0], 46: [0, 0.10556, 0, 0], 47: [0.25, 0.75, 0, 0], 48: [0, 0.64444, 0, 0], 49: [0, 0.64444, 0, 0], 50: [0, 0.64444, 0, 0], 51: [0, 0.64444, 0, 0], 52: [0, 0.64444, 0, 0], 53: [0, 0.64444, 0, 0], 54: [0, 0.64444, 0, 0], 55: [0, 0.64444, 0, 0], 56: [0, 0.64444, 0, 0], 57: [0, 0.64444, 0, 0], 58: [0, 0.43056, 0, 0], 59: [0.19444, 0.43056, 0, 0], 60: [0.0391, 0.5391, 0, 0], 61: [-0.13313, 0.36687, 0, 0], 62: [0.0391, 0.5391, 0, 0], 63: [0, 0.69444, 0, 0], 64: [0, 0.69444, 0, 0], 65: [0, 0.68333, 0, 0], 66: [0, 0.68333, 0, 0], 67: [0, 0.68333, 0, 0], 68: [0, 0.68333, 0, 0], 69: [0, 0.68333, 0, 0], 70: [0, 0.68333, 0, 0], 71: [0, 0.68333, 0, 0], 72: [0, 0.68333, 0, 0], 73: [0, 0.68333, 0, 0], 74: [0, 0.68333, 0, 0], 75: [0, 0.68333, 0, 0], 76: [0, 0.68333, 0, 0], 77: [0, 0.68333, 0, 0], 78: [0, 0.68333, 0, 0], 79: [0, 0.68333, 0, 0], 80: [0, 0.68333, 0, 0], 81: [0.19444, 0.68333, 0, 0], 82: [0, 0.68333, 0, 0], 83: [0, 0.68333, 0, 0], 84: [0, 0.68333, 0, 0], 85: [0, 0.68333, 0, 0], 86: [0, 0.68333, 0.01389, 0], 87: [0, 0.68333, 0.01389, 0], 88: [0, 0.68333, 0, 0], 89: [0, 0.68333, 0.025, 0], 90: [0, 0.68333, 0, 0], 91: [0.25, 0.75, 0, 0], 92: [0.25, 0.75, 0, 0], 93: [0.25, 0.75, 0, 0], 94: [0, 0.69444, 0, 0], 95: [0.31, 0.12056, 0.02778, 0], 96: [0, 0.69444, 0, 0], 97: [0, 0.43056, 0, 0], 98: [0, 0.69444, 0, 0], 99: [0, 0.43056, 0, 0], 100: [0, 0.69444, 0, 0], 101: [0, 0.43056, 0, 0], 102: [0, 0.69444, 0.07778, 0], 103: [0.19444, 0.43056, 0.01389, 0], 104: [0, 0.69444, 0, 0], 105: [0, 0.66786, 0, 0], 106: [0.19444, 0.66786, 0, 0], 107: [0, 0.69444, 0, 0], 108: [0, 0.69444, 0, 0], 109: [0, 0.43056, 0, 0], 110: [0, 0.43056, 0, 0], 111: [0, 0.43056, 0, 0], 112: [0.19444, 0.43056, 0, 0], 113: [0.19444, 0.43056, 0, 0], 114: [0, 0.43056, 0, 0], 115: [0, 0.43056, 0, 0], 116: [0, 0.61508, 0, 0], 117: [0, 0.43056, 0, 0], 118: [0, 0.43056, 0.01389, 0], 119: [0, 0.43056, 0.01389, 0], 120: [0, 0.43056, 0, 0], 121: [0.19444, 0.43056, 0.01389, 0], 122: [0, 0.43056, 0, 0], 123: [0.25, 0.75, 0, 0], 124: [0.25, 0.75, 0, 0], 125: [0.25, 0.75, 0, 0], 126: [0.35, 0.31786, 0, 0], 160: [0, 0, 0, 0], 168: [0, 0.66786, 0, 0], 172: [0, 0.43056, 0, 0], 175: [0, 0.56778, 0, 0], 176: [0, 0.69444, 0, 0], 177: [0.08333, 0.58333, 0, 0], 180: [0, 0.69444, 0, 0], 215: [0.08333, 0.58333, 0, 0], 247: [0.08333, 0.58333, 0, 0], 305: [0, 0.43056, 0, 0], 567: [0.19444, 0.43056, 0, 0], 710: [0, 0.69444, 0, 0], 711: [0, 0.62847, 0, 0], 713: [0, 0.56778, 0, 0], 714: [0, 0.69444, 0, 0], 715: [0, 0.69444, 0, 0], 728: [0, 0.69444, 0, 0], 729: [0, 0.66786, 0, 0], 730: [0, 0.69444, 0, 0], 732: [0, 0.66786, 0, 0], 768: [0, 0.69444, 0, 0], 769: [0, 0.69444, 0, 0], 770: [0, 0.69444, 0, 0], 771: [0, 0.66786, 0, 0], 772: [0, 0.56778, 0, 0], 774: [0, 0.69444, 0, 0], 775: [0, 0.66786, 0, 0], 776: [0, 0.66786, 0, 0], 778: [0, 0.69444, 0, 0], 779: [0, 0.69444, 0, 0], 780: [0, 0.62847, 0, 0], 824: [0.19444, 0.69444, 0, 0], 915: [0, 0.68333, 0, 0], 916: [0, 0.68333, 0, 0], 920: [0, 0.68333, 0, 0], 923: [0, 0.68333, 0, 0], 926: [0, 0.68333, 0, 0], 928: [0, 0.68333, 0, 0], 931: [0, 0.68333, 0, 0], 933: [0, 0.68333, 0, 0], 934: [0, 0.68333, 0, 0], 936: [0, 0.68333, 0, 0], 937: [0, 0.68333, 0, 0], 8211: [0, 0.43056, 0.02778, 0], 8212: [0, 0.43056, 0.02778, 0], 8216: [0, 0.69444, 0, 0], 8217: [0, 0.69444, 0, 0], 8220: [0, 0.69444, 0, 0], 8221: [0, 0.69444, 0, 0], 8224: [0.19444, 0.69444, 0, 0], 8225: [0.19444, 0.69444, 0, 0], 8230: [0, 0.12, 0, 0], 8242: [0, 0.55556, 0, 0], 8407: [0, 0.71444, 0.15382, 0], 8463: [0, 0.68889, 0, 0], 8465: [0, 0.69444, 0, 0], 8467: [0, 0.69444, 0, 0.11111], 8472: [0.19444, 0.43056, 0, 0.11111], 8476: [0, 0.69444, 0, 0], 8501: [0, 0.69444, 0, 0], 8592: [-0.13313, 0.36687, 0, 0], 8593: [0.19444, 0.69444, 0, 0], 8594: [-0.13313, 0.36687, 0, 0], 8595: [0.19444, 0.69444, 0, 0], 8596: [-0.13313, 0.36687, 0, 0], 8597: [0.25, 0.75, 0, 0], 8598: [0.19444, 0.69444, 0, 0], 8599: [0.19444, 0.69444, 0, 0], 8600: [0.19444, 0.69444, 0, 0], 8601: [0.19444, 0.69444, 0, 0], 8614: [0.011, 0.511, 0, 0], 8617: [0.011, 0.511, 0, 0], 8618: [0.011, 0.511, 0, 0], 8636: [-0.13313, 0.36687, 0, 0], 8637: [-0.13313, 0.36687, 0, 0], 8640: [-0.13313, 0.36687, 0, 0], 8641: [-0.13313, 0.36687, 0, 0], 8652: [0.011, 0.671, 0, 0], 8656: [-0.13313, 0.36687, 0, 0], 8657: [0.19444, 0.69444, 0, 0], 8658: [-0.13313, 0.36687, 0, 0], 8659: [0.19444, 0.69444, 0, 0], 8660: [-0.13313, 0.36687, 0, 0], 8661: [0.25, 0.75, 0, 0], 8704: [0, 0.69444, 0, 0], 8706: [0, 0.69444, 0.05556, 0.08334], 8707: [0, 0.69444, 0, 0], 8709: [0.05556, 0.75, 0, 0], 8711: [0, 0.68333, 0, 0], 8712: [0.0391, 0.5391, 0, 0], 8715: [0.0391, 0.5391, 0, 0], 8722: [0.08333, 0.58333, 0, 0], 8723: [0.08333, 0.58333, 0, 0], 8725: [0.25, 0.75, 0, 0], 8726: [0.25, 0.75, 0, 0], 8727: [-0.03472, 0.46528, 0, 0], 8728: [-0.05555, 0.44445, 0, 0], 8729: [-0.05555, 0.44445, 0, 0], 8730: [0.2, 0.8, 0, 0], 8733: [0, 0.43056, 0, 0], 8734: [0, 0.43056, 0, 0], 8736: [0, 0.69224, 0, 0], 8739: [0.25, 0.75, 0, 0], 8741: [0.25, 0.75, 0, 0], 8743: [0, 0.55556, 0, 0], 8744: [0, 0.55556, 0, 0], 8745: [0, 0.55556, 0, 0], 8746: [0, 0.55556, 0, 0], 8747: [0.19444, 0.69444, 0.11111, 0], 8764: [-0.13313, 0.36687, 0, 0], 8768: [0.19444, 0.69444, 0, 0], 8771: [-0.03625, 0.46375, 0, 0], 8773: [-0.022, 0.589, 0, 0], 8776: [-0.01688, 0.48312, 0, 0], 8781: [-0.03625, 0.46375, 0, 0], 8784: [-0.133, 0.67, 0, 0], 8800: [0.215, 0.716, 0, 0], 8801: [-0.03625, 0.46375, 0, 0], 8804: [0.13597, 0.63597, 0, 0], 8805: [0.13597, 0.63597, 0, 0], 8810: [0.0391, 0.5391, 0, 0], 8811: [0.0391, 0.5391, 0, 0], 8826: [0.0391, 0.5391, 0, 0], 8827: [0.0391, 0.5391, 0, 0], 8834: [0.0391, 0.5391, 0, 0], 8835: [0.0391, 0.5391, 0, 0], 8838: [0.13597, 0.63597, 0, 0], 8839: [0.13597, 0.63597, 0, 0], 8846: [0, 0.55556, 0, 0], 8849: [0.13597, 0.63597, 0, 0], 8850: [0.13597, 0.63597, 0, 0], 8851: [0, 0.55556, 0, 0], 8852: [0, 0.55556, 0, 0], 8853: [0.08333, 0.58333, 0, 0], 8854: [0.08333, 0.58333, 0, 0], 8855: [0.08333, 0.58333, 0, 0], 8856: [0.08333, 0.58333, 0, 0], 8857: [0.08333, 0.58333, 0, 0], 8866: [0, 0.69444, 0, 0], 8867: [0, 0.69444, 0, 0], 8868: [0, 0.69444, 0, 0], 8869: [0, 0.69444, 0, 0], 8872: [0.249, 0.75, 0, 0], 8900: [-0.05555, 0.44445, 0, 0], 8901: [-0.05555, 0.44445, 0, 0], 8902: [-0.03472, 0.46528, 0, 0], 8904: [5e-3, 0.505, 0, 0], 8942: [0.03, 0.9, 0, 0], 8943: [-0.19, 0.31, 0, 0], 8945: [-0.1, 0.82, 0, 0], 8968: [0.25, 0.75, 0, 0], 8969: [0.25, 0.75, 0, 0], 8970: [0.25, 0.75, 0, 0], 8971: [0.25, 0.75, 0, 0], 8994: [-0.14236, 0.35764, 0, 0], 8995: [-0.14236, 0.35764, 0, 0], 9136: [0.244, 0.744, 0, 0], 9137: [0.244, 0.744, 0, 0], 9651: [0.19444, 0.69444, 0, 0], 9657: [-0.03472, 0.46528, 0, 0], 9661: [0.19444, 0.69444, 0, 0], 9667: [-0.03472, 0.46528, 0, 0], 9711: [0.19444, 0.69444, 0, 0], 9824: [0.12963, 0.69444, 0, 0], 9825: [0.12963, 0.69444, 0, 0], 9826: [0.12963, 0.69444, 0, 0], 9827: [0.12963, 0.69444, 0, 0], 9837: [0, 0.75, 0, 0], 9838: [0.19444, 0.69444, 0, 0], 9839: [0.19444, 0.69444, 0, 0], 10216: [0.25, 0.75, 0, 0], 10217: [0.25, 0.75, 0, 0], 10222: [0.244, 0.744, 0, 0], 10223: [0.244, 0.744, 0, 0], 10229: [0.011, 0.511, 0, 0], 10230: [0.011, 0.511, 0, 0], 10231: [0.011, 0.511, 0, 0], 10232: [0.024, 0.525, 0, 0], 10233: [0.024, 0.525, 0, 0], 10234: [0.024, 0.525, 0, 0], 10236: [0.011, 0.511, 0, 0], 10815: [0, 0.68333, 0, 0], 10927: [0.13597, 0.63597, 0, 0], 10928: [0.13597, 0.63597, 0, 0] }, "Math-BoldItalic": { 47: [0.19444, 0.69444, 0, 0], 65: [0, 0.68611, 0, 0], 66: [0, 0.68611, 0.04835, 0], 67: [0, 0.68611, 0.06979, 0], 68: [0, 0.68611, 0.03194, 0], 69: [0, 0.68611, 0.05451, 0], 70: [0, 0.68611, 0.15972, 0], 71: [0, 0.68611, 0, 0], 72: [0, 0.68611, 0.08229, 0], 73: [0, 0.68611, 0.07778, 0], 74: [0, 0.68611, 0.10069, 0], 75: [0, 0.68611, 0.06979, 0], 76: [0, 0.68611, 0, 0], 77: [0, 0.68611, 0.11424, 0], 78: [0, 0.68611, 0.11424, 0], 79: [0, 0.68611, 0.03194, 0], 80: [0, 0.68611, 0.15972, 0], 81: [0.19444, 0.68611, 0, 0], 82: [0, 0.68611, 421e-5, 0], 83: [0, 0.68611, 0.05382, 0], 84: [0, 0.68611, 0.15972, 0], 85: [0, 0.68611, 0.11424, 0], 86: [0, 0.68611, 0.25555, 0], 87: [0, 0.68611, 0.15972, 0], 88: [0, 0.68611, 0.07778, 0], 89: [0, 0.68611, 0.25555, 0], 90: [0, 0.68611, 0.06979, 0], 97: [0, 0.44444, 0, 0], 98: [0, 0.69444, 0, 0], 99: [0, 0.44444, 0, 0], 100: [0, 0.69444, 0, 0], 101: [0, 0.44444, 0, 0], 102: [0.19444, 0.69444, 0.11042, 0], 103: [0.19444, 0.44444, 0.03704, 0], 104: [0, 0.69444, 0, 0], 105: [0, 0.69326, 0, 0], 106: [0.19444, 0.69326, 0.0622, 0], 107: [0, 0.69444, 0.01852, 0], 108: [0, 0.69444, 88e-4, 0], 109: [0, 0.44444, 0, 0], 110: [0, 0.44444, 0, 0], 111: [0, 0.44444, 0, 0], 112: [0.19444, 0.44444, 0, 0], 113: [0.19444, 0.44444, 0.03704, 0], 114: [0, 0.44444, 0.03194, 0], 115: [0, 0.44444, 0, 0], 116: [0, 0.63492, 0, 0], 117: [0, 0.44444, 0, 0], 118: [0, 0.44444, 0.03704, 0], 119: [0, 0.44444, 0.02778, 0], 120: [0, 0.44444, 0, 0], 121: [0.19444, 0.44444, 0.03704, 0], 122: [0, 0.44444, 0.04213, 0], 915: [0, 0.68611, 0.15972, 0], 916: [0, 0.68611, 0, 0], 920: [0, 0.68611, 0.03194, 0], 923: [0, 0.68611, 0, 0], 926: [0, 0.68611, 0.07458, 0], 928: [0, 0.68611, 0.08229, 0], 931: [0, 0.68611, 0.05451, 0], 933: [0, 0.68611, 0.15972, 0], 934: [0, 0.68611, 0, 0], 936: [0, 0.68611, 0.11653, 0], 937: [0, 0.68611, 0.04835, 0], 945: [0, 0.44444, 0, 0], 946: [0.19444, 0.69444, 0.03403, 0], 947: [0.19444, 0.44444, 0.06389, 0], 948: [0, 0.69444, 0.03819, 0], 949: [0, 0.44444, 0, 0], 950: [0.19444, 0.69444, 0.06215, 0], 951: [0.19444, 0.44444, 0.03704, 0], 952: [0, 0.69444, 0.03194, 0], 953: [0, 0.44444, 0, 0], 954: [0, 0.44444, 0, 0], 955: [0, 0.69444, 0, 0], 956: [0.19444, 0.44444, 0, 0], 957: [0, 0.44444, 0.06898, 0], 958: [0.19444, 0.69444, 0.03021, 0], 959: [0, 0.44444, 0, 0], 960: [0, 0.44444, 0.03704, 0], 961: [0.19444, 0.44444, 0, 0], 962: [0.09722, 0.44444, 0.07917, 0], 963: [0, 0.44444, 0.03704, 0], 964: [0, 0.44444, 0.13472, 0], 965: [0, 0.44444, 0.03704, 0], 966: [0.19444, 0.44444, 0, 0], 967: [0.19444, 0.44444, 0, 0], 968: [0.19444, 0.69444, 0.03704, 0], 969: [0, 0.44444, 0.03704, 0], 977: [0, 0.69444, 0, 0], 981: [0.19444, 0.69444, 0, 0], 982: [0, 0.44444, 0.03194, 0], 1009: [0.19444, 0.44444, 0, 0], 1013: [0, 0.44444, 0, 0] }, "Math-Italic": { 47: [0.19444, 0.69444, 0, 0], 65: [0, 0.68333, 0, 0.13889], 66: [0, 0.68333, 0.05017, 0.08334], 67: [0, 0.68333, 0.07153, 0.08334], 68: [0, 0.68333, 0.02778, 0.05556], 69: [0, 0.68333, 0.05764, 0.08334], 70: [0, 0.68333, 0.13889, 0.08334], 71: [0, 0.68333, 0, 0.08334], 72: [0, 0.68333, 0.08125, 0.05556], 73: [0, 0.68333, 0.07847, 0.11111], 74: [0, 0.68333, 0.09618, 0.16667], 75: [0, 0.68333, 0.07153, 0.05556], 76: [0, 0.68333, 0, 0.02778], 77: [0, 0.68333, 0.10903, 0.08334], 78: [0, 0.68333, 0.10903, 0.08334], 79: [0, 0.68333, 0.02778, 0.08334], 80: [0, 0.68333, 0.13889, 0.08334], 81: [0.19444, 0.68333, 0, 0.08334], 82: [0, 0.68333, 773e-5, 0.08334], 83: [0, 0.68333, 0.05764, 0.08334], 84: [0, 0.68333, 0.13889, 0.08334], 85: [0, 0.68333, 0.10903, 0.02778], 86: [0, 0.68333, 0.22222, 0], 87: [0, 0.68333, 0.13889, 0], 88: [0, 0.68333, 0.07847, 0.08334], 89: [0, 0.68333, 0.22222, 0], 90: [0, 0.68333, 0.07153, 0.08334], 97: [0, 0.43056, 0, 0], 98: [0, 0.69444, 0, 0], 99: [0, 0.43056, 0, 0.05556], 100: [0, 0.69444, 0, 0.16667], 101: [0, 0.43056, 0, 0.05556], 102: [0.19444, 0.69444, 0.10764, 0.16667], 103: [0.19444, 0.43056, 0.03588, 0.02778], 104: [0, 0.69444, 0, 0], 105: [0, 0.65952, 0, 0], 106: [0.19444, 0.65952, 0.05724, 0], 107: [0, 0.69444, 0.03148, 0], 108: [0, 0.69444, 0.01968, 0.08334], 109: [0, 0.43056, 0, 0], 110: [0, 0.43056, 0, 0], 111: [0, 0.43056, 0, 0.05556], 112: [0.19444, 0.43056, 0, 0.08334], 113: [0.19444, 0.43056, 0.03588, 0.08334], 114: [0, 0.43056, 0.02778, 0.05556], 115: [0, 0.43056, 0, 0.05556], 116: [0, 0.61508, 0, 0.08334], 117: [0, 0.43056, 0, 0.02778], 118: [0, 0.43056, 0.03588, 0.02778], 119: [0, 0.43056, 0.02691, 0.08334], 120: [0, 0.43056, 0, 0.02778], 121: [0.19444, 0.43056, 0.03588, 0.05556], 122: [0, 0.43056, 0.04398, 0.05556], 915: [0, 0.68333, 0.13889, 0.08334], 916: [0, 0.68333, 0, 0.16667], 920: [0, 0.68333, 0.02778, 0.08334], 923: [0, 0.68333, 0, 0.16667], 926: [0, 0.68333, 0.07569, 0.08334], 928: [0, 0.68333, 0.08125, 0.05556], 931: [0, 0.68333, 0.05764, 0.08334], 933: [0, 0.68333, 0.13889, 0.05556], 934: [0, 0.68333, 0, 0.08334], 936: [0, 0.68333, 0.11, 0.05556], 937: [0, 0.68333, 0.05017, 0.08334], 945: [0, 0.43056, 37e-4, 0.02778], 946: [0.19444, 0.69444, 0.05278, 0.08334], 947: [0.19444, 0.43056, 0.05556, 0], 948: [0, 0.69444, 0.03785, 0.05556], 949: [0, 0.43056, 0, 0.08334], 950: [0.19444, 0.69444, 0.07378, 0.08334], 951: [0.19444, 0.43056, 0.03588, 0.05556], 952: [0, 0.69444, 0.02778, 0.08334], 953: [0, 0.43056, 0, 0.05556], 954: [0, 0.43056, 0, 0], 955: [0, 0.69444, 0, 0], 956: [0.19444, 0.43056, 0, 0.02778], 957: [0, 0.43056, 0.06366, 0.02778], 958: [0.19444, 0.69444, 0.04601, 0.11111], 959: [0, 0.43056, 0, 0.05556], 960: [0, 0.43056, 0.03588, 0], 961: [0.19444, 0.43056, 0, 0.08334], 962: [0.09722, 0.43056, 0.07986, 0.08334], 963: [0, 0.43056, 0.03588, 0], 964: [0, 0.43056, 0.1132, 0.02778], 965: [0, 0.43056, 0.03588, 0.02778], 966: [0.19444, 0.43056, 0, 0.08334], 967: [0.19444, 0.43056, 0, 0.05556], 968: [0.19444, 0.69444, 0.03588, 0.11111], 969: [0, 0.43056, 0.03588, 0], 977: [0, 0.69444, 0, 0.08334], 981: [0.19444, 0.69444, 0, 0.08334], 982: [0, 0.43056, 0.02778, 0], 1009: [0.19444, 0.43056, 0, 0.08334], 1013: [0, 0.43056, 0, 0.05556] }, "Math-Regular": { 65: [0, 0.68333, 0, 0.13889], 66: [0, 0.68333, 0.05017, 0.08334], 67: [0, 0.68333, 0.07153, 0.08334], 68: [0, 0.68333, 0.02778, 0.05556], 69: [0, 0.68333, 0.05764, 0.08334], 70: [0, 0.68333, 0.13889, 0.08334], 71: [0, 0.68333, 0, 0.08334], 72: [0, 0.68333, 0.08125, 0.05556], 73: [0, 0.68333, 0.07847, 0.11111], 74: [0, 0.68333, 0.09618, 0.16667], 75: [0, 0.68333, 0.07153, 0.05556], 76: [0, 0.68333, 0, 0.02778], 77: [0, 0.68333, 0.10903, 0.08334], 78: [0, 0.68333, 0.10903, 0.08334], 79: [0, 0.68333, 0.02778, 0.08334], 80: [0, 0.68333, 0.13889, 0.08334], 81: [0.19444, 0.68333, 0, 0.08334], 82: [0, 0.68333, 773e-5, 0.08334], 83: [0, 0.68333, 0.05764, 0.08334], 84: [0, 0.68333, 0.13889, 0.08334], 85: [0, 0.68333, 0.10903, 0.02778], 86: [0, 0.68333, 0.22222, 0], 87: [0, 0.68333, 0.13889, 0], 88: [0, 0.68333, 0.07847, 0.08334], 89: [0, 0.68333, 0.22222, 0], 90: [0, 0.68333, 0.07153, 0.08334], 97: [0, 0.43056, 0, 0], 98: [0, 0.69444, 0, 0], 99: [0, 0.43056, 0, 0.05556], 100: [0, 0.69444, 0, 0.16667], 101: [0, 0.43056, 0, 0.05556], 102: [0.19444, 0.69444, 0.10764, 0.16667], 103: [0.19444, 0.43056, 0.03588, 0.02778], 104: [0, 0.69444, 0, 0], 105: [0, 0.65952, 0, 0], 106: [0.19444, 0.65952, 0.05724, 0], 107: [0, 0.69444, 0.03148, 0], 108: [0, 0.69444, 0.01968, 0.08334], 109: [0, 0.43056, 0, 0], 110: [0, 0.43056, 0, 0], 111: [0, 0.43056, 0, 0.05556], 112: [0.19444, 0.43056, 0, 0.08334], 113: [0.19444, 0.43056, 0.03588, 0.08334], 114: [0, 0.43056, 0.02778, 0.05556], 115: [0, 0.43056, 0, 0.05556], 116: [0, 0.61508, 0, 0.08334], 117: [0, 0.43056, 0, 0.02778], 118: [0, 0.43056, 0.03588, 0.02778], 119: [0, 0.43056, 0.02691, 0.08334], 120: [0, 0.43056, 0, 0.02778], 121: [0.19444, 0.43056, 0.03588, 0.05556], 122: [0, 0.43056, 0.04398, 0.05556], 915: [0, 0.68333, 0.13889, 0.08334], 916: [0, 0.68333, 0, 0.16667], 920: [0, 0.68333, 0.02778, 0.08334], 923: [0, 0.68333, 0, 0.16667], 926: [0, 0.68333, 0.07569, 0.08334], 928: [0, 0.68333, 0.08125, 0.05556], 931: [0, 0.68333, 0.05764, 0.08334], 933: [0, 0.68333, 0.13889, 0.05556], 934: [0, 0.68333, 0, 0.08334], 936: [0, 0.68333, 0.11, 0.05556], 937: [0, 0.68333, 0.05017, 0.08334], 945: [0, 0.43056, 37e-4, 0.02778], 946: [0.19444, 0.69444, 0.05278, 0.08334], 947: [0.19444, 0.43056, 0.05556, 0], 948: [0, 0.69444, 0.03785, 0.05556], 949: [0, 0.43056, 0, 0.08334], 950: [0.19444, 0.69444, 0.07378, 0.08334], 951: [0.19444, 0.43056, 0.03588, 0.05556], 952: [0, 0.69444, 0.02778, 0.08334], 953: [0, 0.43056, 0, 0.05556], 954: [0, 0.43056, 0, 0], 955: [0, 0.69444, 0, 0], 956: [0.19444, 0.43056, 0, 0.02778], 957: [0, 0.43056, 0.06366, 0.02778], 958: [0.19444, 0.69444, 0.04601, 0.11111], 959: [0, 0.43056, 0, 0.05556], 960: [0, 0.43056, 0.03588, 0], 961: [0.19444, 0.43056, 0, 0.08334], 962: [0.09722, 0.43056, 0.07986, 0.08334], 963: [0, 0.43056, 0.03588, 0], 964: [0, 0.43056, 0.1132, 0.02778], 965: [0, 0.43056, 0.03588, 0.02778], 966: [0.19444, 0.43056, 0, 0.08334], 967: [0.19444, 0.43056, 0, 0.05556], 968: [0.19444, 0.69444, 0.03588, 0.11111], 969: [0, 0.43056, 0.03588, 0], 977: [0, 0.69444, 0, 0.08334], 981: [0.19444, 0.69444, 0, 0.08334], 982: [0, 0.43056, 0.02778, 0], 1009: [0.19444, 0.43056, 0, 0.08334], 1013: [0, 0.43056, 0, 0.05556] }, "SansSerif-Regular": { 33: [0, 0.69444, 0, 0], 34: [0, 0.69444, 0, 0], 35: [0.19444, 0.69444, 0, 0], 36: [0.05556, 0.75, 0, 0], 37: [0.05556, 0.75, 0, 0], 38: [0, 0.69444, 0, 0], 39: [0, 0.69444, 0, 0], 40: [0.25, 0.75, 0, 0], 41: [0.25, 0.75, 0, 0], 42: [0, 0.75, 0, 0], 43: [0.08333, 0.58333, 0, 0], 44: [0.125, 0.08333, 0, 0], 45: [0, 0.44444, 0, 0], 46: [0, 0.08333, 0, 0], 47: [0.25, 0.75, 0, 0], 48: [0, 0.65556, 0, 0], 49: [0, 0.65556, 0, 0], 50: [0, 0.65556, 0, 0], 51: [0, 0.65556, 0, 0], 52: [0, 0.65556, 0, 0], 53: [0, 0.65556, 0, 0], 54: [0, 0.65556, 0, 0], 55: [0, 0.65556, 0, 0], 56: [0, 0.65556, 0, 0], 57: [0, 0.65556, 0, 0], 58: [0, 0.44444, 0, 0], 59: [0.125, 0.44444, 0, 0], 61: [-0.13, 0.37, 0, 0], 63: [0, 0.69444, 0, 0], 64: [0, 0.69444, 0, 0], 65: [0, 0.69444, 0, 0], 66: [0, 0.69444, 0, 0], 67: [0, 0.69444, 0, 0], 68: [0, 0.69444, 0, 0], 69: [0, 0.69444, 0, 0], 70: [0, 0.69444, 0, 0], 71: [0, 0.69444, 0, 0], 72: [0, 0.69444, 0, 0], 73: [0, 0.69444, 0, 0], 74: [0, 0.69444, 0, 0], 75: [0, 0.69444, 0, 0], 76: [0, 0.69444, 0, 0], 77: [0, 0.69444, 0, 0], 78: [0, 0.69444, 0, 0], 79: [0, 0.69444, 0, 0], 80: [0, 0.69444, 0, 0], 81: [0.125, 0.69444, 0, 0], 82: [0, 0.69444, 0, 0], 83: [0, 0.69444, 0, 0], 84: [0, 0.69444, 0, 0], 85: [0, 0.69444, 0, 0], 86: [0, 0.69444, 0.01389, 0], 87: [0, 0.69444, 0.01389, 0], 88: [0, 0.69444, 0, 0], 89: [0, 0.69444, 0.025, 0], 90: [0, 0.69444, 0, 0], 91: [0.25, 0.75, 0, 0], 93: [0.25, 0.75, 0, 0], 94: [0, 0.69444, 0, 0], 95: [0.35, 0.09444, 0.02778, 0], 97: [0, 0.44444, 0, 0], 98: [0, 0.69444, 0, 0], 99: [0, 0.44444, 0, 0], 100: [0, 0.69444, 0, 0], 101: [0, 0.44444, 0, 0], 102: [0, 0.69444, 0.06944, 0], 103: [0.19444, 0.44444, 0.01389, 0], 104: [0, 0.69444, 0, 0], 105: [0, 0.67937, 0, 0], 106: [0.19444, 0.67937, 0, 0], 107: [0, 0.69444, 0, 0], 108: [0, 0.69444, 0, 0], 109: [0, 0.44444, 0, 0], 110: [0, 0.44444, 0, 0], 111: [0, 0.44444, 0, 0], 112: [0.19444, 0.44444, 0, 0], 113: [0.19444, 0.44444, 0, 0], 114: [0, 0.44444, 0.01389, 0], 115: [0, 0.44444, 0, 0], 116: [0, 0.57143, 0, 0], 117: [0, 0.44444, 0, 0], 118: [0, 0.44444, 0.01389, 0], 119: [0, 0.44444, 0.01389, 0], 120: [0, 0.44444, 0, 0], 121: [0.19444, 0.44444, 0.01389, 0], 122: [0, 0.44444, 0, 0], 126: [0.35, 0.32659, 0, 0], 305: [0, 0.44444, 0, 0], 567: [0.19444, 0.44444, 0, 0], 768: [0, 0.69444, 0, 0], 769: [0, 0.69444, 0, 0], 770: [0, 0.69444, 0, 0], 771: [0, 0.67659, 0, 0], 772: [0, 0.60889, 0, 0], 774: [0, 0.69444, 0, 0], 775: [0, 0.67937, 0, 0], 776: [0, 0.67937, 0, 0], 778: [0, 0.69444, 0, 0], 779: [0, 0.69444, 0, 0], 780: [0, 0.63194, 0, 0], 915: [0, 0.69444, 0, 0], 916: [0, 0.69444, 0, 0], 920: [0, 0.69444, 0, 0], 923: [0, 0.69444, 0, 0], 926: [0, 0.69444, 0, 0], 928: [0, 0.69444, 0, 0], 931: [0, 0.69444, 0, 0], 933: [0, 0.69444, 0, 0], 934: [0, 0.69444, 0, 0], 936: [0, 0.69444, 0, 0], 937: [0, 0.69444, 0, 0], 8211: [0, 0.44444, 0.02778, 0], 8212: [0, 0.44444, 0.02778, 0], 8216: [0, 0.69444, 0, 0], 8217: [0, 0.69444, 0, 0], 8220: [0, 0.69444, 0, 0], 8221: [0, 0.69444, 0, 0] }, "Script-Regular": { 65: [0, 0.7, 0.22925, 0], 66: [0, 0.7, 0.04087, 0], 67: [0, 0.7, 0.1689, 0], 68: [0, 0.7, 0.09371, 0], 69: [0, 0.7, 0.18583, 0], 70: [0, 0.7, 0.13634, 0], 71: [0, 0.7, 0.17322, 0], 72: [0, 0.7, 0.29694, 0], 73: [0, 0.7, 0.19189, 0], 74: [0.27778, 0.7, 0.19189, 0], 75: [0, 0.7, 0.31259, 0], 76: [0, 0.7, 0.19189, 0], 77: [0, 0.7, 0.15981, 0], 78: [0, 0.7, 0.3525, 0], 79: [0, 0.7, 0.08078, 0], 80: [0, 0.7, 0.08078, 0], 81: [0, 0.7, 0.03305, 0], 82: [0, 0.7, 0.06259, 0], 83: [0, 0.7, 0.19189, 0], 84: [0, 0.7, 0.29087, 0], 85: [0, 0.7, 0.25815, 0], 86: [0, 0.7, 0.27523, 0], 87: [0, 0.7, 0.27523, 0], 88: [0, 0.7, 0.26006, 0], 89: [0, 0.7, 0.2939, 0], 90: [0, 0.7, 0.24037, 0] }, "Size1-Regular": { 40: [0.35001, 0.85, 0, 0], 41: [0.35001, 0.85, 0, 0], 47: [0.35001, 0.85, 0, 0], 91: [0.35001, 0.85, 0, 0], 92: [0.35001, 0.85, 0, 0], 93: [0.35001, 0.85, 0, 0], 123: [0.35001, 0.85, 0, 0], 125: [0.35001, 0.85, 0, 0], 710: [0, 0.72222, 0, 0], 732: [0, 0.72222, 0, 0], 770: [0, 0.72222, 0, 0], 771: [0, 0.72222, 0, 0], 8214: [-99e-5, 0.601, 0, 0], 8593: [1e-5, 0.6, 0, 0], 8595: [1e-5, 0.6, 0, 0], 8657: [1e-5, 0.6, 0, 0], 8659: [1e-5, 0.6, 0, 0], 8719: [0.25001, 0.75, 0, 0], 8720: [0.25001, 0.75, 0, 0], 8721: [0.25001, 0.75, 0, 0], 8730: [0.35001, 0.85, 0, 0], 8739: [-599e-5, 0.606, 0, 0], 8741: [-599e-5, 0.606, 0, 0], 8747: [0.30612, 0.805, 0.19445, 0], 8748: [0.306, 0.805, 0.19445, 0], 8749: [0.306, 0.805, 0.19445, 0], 8750: [0.30612, 0.805, 0.19445, 0], 8896: [0.25001, 0.75, 0, 0], 8897: [0.25001, 0.75, 0, 0], 8898: [0.25001, 0.75, 0, 0], 8899: [0.25001, 0.75, 0, 0], 8968: [0.35001, 0.85, 0, 0], 8969: [0.35001, 0.85, 0, 0], 8970: [0.35001, 0.85, 0, 0], 8971: [0.35001, 0.85, 0, 0], 9168: [-99e-5, 0.601, 0, 0], 10216: [0.35001, 0.85, 0, 0], 10217: [0.35001, 0.85, 0, 0], 10752: [0.25001, 0.75, 0, 0], 10753: [0.25001, 0.75, 0, 0], 10754: [0.25001, 0.75, 0, 0], 10756: [0.25001, 0.75, 0, 0], 10758: [0.25001, 0.75, 0, 0] }, "Size2-Regular": { 40: [0.65002, 1.15, 0, 0], 41: [0.65002, 1.15, 0, 0], 47: [0.65002, 1.15, 0, 0], 91: [0.65002, 1.15, 0, 0], 92: [0.65002, 1.15, 0, 0], 93: [0.65002, 1.15, 0, 0], 123: [0.65002, 1.15, 0, 0], 125: [0.65002, 1.15, 0, 0], 710: [0, 0.75, 0, 0], 732: [0, 0.75, 0, 0], 770: [0, 0.75, 0, 0], 771: [0, 0.75, 0, 0], 8719: [0.55001, 1.05, 0, 0], 8720: [0.55001, 1.05, 0, 0], 8721: [0.55001, 1.05, 0, 0], 8730: [0.65002, 1.15, 0, 0], 8747: [0.86225, 1.36, 0.44445, 0], 8748: [0.862, 1.36, 0.44445, 0], 8749: [0.862, 1.36, 0.44445, 0], 8750: [0.86225, 1.36, 0.44445, 0], 8896: [0.55001, 1.05, 0, 0], 8897: [0.55001, 1.05, 0, 0], 8898: [0.55001, 1.05, 0, 0], 8899: [0.55001, 1.05, 0, 0], 8968: [0.65002, 1.15, 0, 0], 8969: [0.65002, 1.15, 0, 0], 8970: [0.65002, 1.15, 0, 0], 8971: [0.65002, 1.15, 0, 0], 10216: [0.65002, 1.15, 0, 0], 10217: [0.65002, 1.15, 0, 0], 10752: [0.55001, 1.05, 0, 0], 10753: [0.55001, 1.05, 0, 0], 10754: [0.55001, 1.05, 0, 0], 10756: [0.55001, 1.05, 0, 0], 10758: [0.55001, 1.05, 0, 0] }, "Size3-Regular": { 40: [0.95003, 1.45, 0, 0], 41: [0.95003, 1.45, 0, 0], 47: [0.95003, 1.45, 0, 0], 91: [0.95003, 1.45, 0, 0], 92: [0.95003, 1.45, 0, 0], 93: [0.95003, 1.45, 0, 0], 123: [0.95003, 1.45, 0, 0], 125: [0.95003, 1.45, 0, 0], 710: [0, 0.75, 0, 0], 732: [0, 0.75, 0, 0], 770: [0, 0.75, 0, 0], 771: [0, 0.75, 0, 0], 8730: [0.95003, 1.45, 0, 0], 8968: [0.95003, 1.45, 0, 0], 8969: [0.95003, 1.45, 0, 0], 8970: [0.95003, 1.45, 0, 0], 8971: [0.95003, 1.45, 0, 0], 10216: [0.95003, 1.45, 0, 0], 10217: [0.95003, 1.45, 0, 0] }, "Size4-Regular": { 40: [1.25003, 1.75, 0, 0], 41: [1.25003, 1.75, 0, 0], 47: [1.25003, 1.75, 0, 0], 91: [1.25003, 1.75, 0, 0], 92: [1.25003, 1.75, 0, 0], 93: [1.25003, 1.75, 0, 0], 123: [1.25003, 1.75, 0, 0], 125: [1.25003, 1.75, 0, 0], 710: [0, 0.825, 0, 0], 732: [0, 0.825, 0, 0], 770: [0, 0.825, 0, 0], 771: [0, 0.825, 0, 0], 8730: [1.25003, 1.75, 0, 0], 8968: [1.25003, 1.75, 0, 0], 8969: [1.25003, 1.75, 0, 0], 8970: [1.25003, 1.75, 0, 0], 8971: [1.25003, 1.75, 0, 0], 9115: [0.64502, 1.155, 0, 0], 9116: [1e-5, 0.6, 0, 0], 9117: [0.64502, 1.155, 0, 0], 9118: [0.64502, 1.155, 0, 0], 9119: [1e-5, 0.6, 0, 0], 9120: [0.64502, 1.155, 0, 0], 9121: [0.64502, 1.155, 0, 0], 9122: [-99e-5, 0.601, 0, 0], 9123: [0.64502, 1.155, 0, 0], 9124: [0.64502, 1.155, 0, 0], 9125: [-99e-5, 0.601, 0, 0], 9126: [0.64502, 1.155, 0, 0], 9127: [1e-5, 0.9, 0, 0], 9128: [0.65002, 1.15, 0, 0], 9129: [0.90001, 0, 0, 0], 9130: [0, 0.3, 0, 0], 9131: [1e-5, 0.9, 0, 0], 9132: [0.65002, 1.15, 0, 0], 9133: [0.90001, 0, 0, 0], 9143: [0.88502, 0.915, 0, 0], 10216: [1.25003, 1.75, 0, 0], 10217: [1.25003, 1.75, 0, 0], 57344: [-499e-5, 0.605, 0, 0], 57345: [-499e-5, 0.605, 0, 0], 57680: [0, 0.12, 0, 0], 57681: [0, 0.12, 0, 0], 57682: [0, 0.12, 0, 0], 57683: [0, 0.12, 0, 0] }, "Typewriter-Regular": { 33: [0, 0.61111, 0, 0], 34: [0, 0.61111, 0, 0], 35: [0, 0.61111, 0, 0], 36: [0.08333, 0.69444, 0, 0], 37: [0.08333, 0.69444, 0, 0], 38: [0, 0.61111, 0, 0], 39: [0, 0.61111, 0, 0], 40: [0.08333, 0.69444, 0, 0], 41: [0.08333, 0.69444, 0, 0], 42: [0, 0.52083, 0, 0], 43: [-0.08056, 0.53055, 0, 0], 44: [0.13889, 0.125, 0, 0], 45: [-0.08056, 0.53055, 0, 0], 46: [0, 0.125, 0, 0], 47: [0.08333, 0.69444, 0, 0], 48: [0, 0.61111, 0, 0], 49: [0, 0.61111, 0, 0], 50: [0, 0.61111, 0, 0], 51: [0, 0.61111, 0, 0], 52: [0, 0.61111, 0, 0], 53: [0, 0.61111, 0, 0], 54: [0, 0.61111, 0, 0], 55: [0, 0.61111, 0, 0], 56: [0, 0.61111, 0, 0], 57: [0, 0.61111, 0, 0], 58: [0, 0.43056, 0, 0], 59: [0.13889, 0.43056, 0, 0], 60: [-0.05556, 0.55556, 0, 0], 61: [-0.19549, 0.41562, 0, 0], 62: [-0.05556, 0.55556, 0, 0], 63: [0, 0.61111, 0, 0], 64: [0, 0.61111, 0, 0], 65: [0, 0.61111, 0, 0], 66: [0, 0.61111, 0, 0], 67: [0, 0.61111, 0, 0], 68: [0, 0.61111, 0, 0], 69: [0, 0.61111, 0, 0], 70: [0, 0.61111, 0, 0], 71: [0, 0.61111, 0, 0], 72: [0, 0.61111, 0, 0], 73: [0, 0.61111, 0, 0], 74: [0, 0.61111, 0, 0], 75: [0, 0.61111, 0, 0], 76: [0, 0.61111, 0, 0], 77: [0, 0.61111, 0, 0], 78: [0, 0.61111, 0, 0], 79: [0, 0.61111, 0, 0], 80: [0, 0.61111, 0, 0], 81: [0.13889, 0.61111, 0, 0], 82: [0, 0.61111, 0, 0], 83: [0, 0.61111, 0, 0], 84: [0, 0.61111, 0, 0], 85: [0, 0.61111, 0, 0], 86: [0, 0.61111, 0, 0], 87: [0, 0.61111, 0, 0], 88: [0, 0.61111, 0, 0], 89: [0, 0.61111, 0, 0], 90: [0, 0.61111, 0, 0], 91: [0.08333, 0.69444, 0, 0], 92: [0.08333, 0.69444, 0, 0], 93: [0.08333, 0.69444, 0, 0], 94: [0, 0.61111, 0, 0], 95: [0.09514, 0, 0, 0], 96: [0, 0.61111, 0, 0], 97: [0, 0.43056, 0, 0], 98: [0, 0.61111, 0, 0], 99: [0, 0.43056, 0, 0], 100: [0, 0.61111, 0, 0], 101: [0, 0.43056, 0, 0], 102: [0, 0.61111, 0, 0], 103: [0.22222, 0.43056, 0, 0], 104: [0, 0.61111, 0, 0], 105: [0, 0.61111, 0, 0], 106: [0.22222, 0.61111, 0, 0], 107: [0, 0.61111, 0, 0], 108: [0, 0.61111, 0, 0], 109: [0, 0.43056, 0, 0], 110: [0, 0.43056, 0, 0], 111: [0, 0.43056, 0, 0], 112: [0.22222, 0.43056, 0, 0], 113: [0.22222, 0.43056, 0, 0], 114: [0, 0.43056, 0, 0], 115: [0, 0.43056, 0, 0], 116: [0, 0.55358, 0, 0], 117: [0, 0.43056, 0, 0], 118: [0, 0.43056, 0, 0], 119: [0, 0.43056, 0, 0], 120: [0, 0.43056, 0, 0], 121: [0.22222, 0.43056, 0, 0], 122: [0, 0.43056, 0, 0], 123: [0.08333, 0.69444, 0, 0], 124: [0.08333, 0.69444, 0, 0], 125: [0.08333, 0.69444, 0, 0], 126: [0, 0.61111, 0, 0], 127: [0, 0.61111, 0, 0], 305: [0, 0.43056, 0, 0], 567: [0.22222, 0.43056, 0, 0], 768: [0, 0.61111, 0, 0], 769: [0, 0.61111, 0, 0], 770: [0, 0.61111, 0, 0], 771: [0, 0.61111, 0, 0], 772: [0, 0.56555, 0, 0], 774: [0, 0.61111, 0, 0], 776: [0, 0.61111, 0, 0], 778: [0, 0.61111, 0, 0], 780: [0, 0.56597, 0, 0], 915: [0, 0.61111, 0, 0], 916: [0, 0.61111, 0, 0], 920: [0, 0.61111, 0, 0], 923: [0, 0.61111, 0, 0], 926: [0, 0.61111, 0, 0], 928: [0, 0.61111, 0, 0], 931: [0, 0.61111, 0, 0], 933: [0, 0.61111, 0, 0], 934: [0, 0.61111, 0, 0], 936: [0, 0.61111, 0, 0], 937: [0, 0.61111, 0, 0], 2018: [0, 0.61111, 0, 0], 2019: [0, 0.61111, 0, 0], 8242: [0, 0.61111, 0, 0] } }, I0 = C0, re = 0.431, ae = 1, lt = 0.677, ut = 0.394, ot = 0.444, ct = 0.686, ht = 0.345, vt = 0.413, mt = 0.363, ft = 0.289, pt = 0.15, dt = 0.247, gt = 0.386, yt = 0.05, bt = 2.39, xt = 1.01, wt = 0.81, kt = 0.71, zt = 0.25, St = 0.04, Mt = 0.111, Tt = 0.166, At = 0.2, Nt = 0.6, qt = 0.1, ye = 10, Ct = 2 / ye, Et = { xHeight: re, quad: ae, num1: lt, num2: ut, num3: ot, denom1: ct, denom2: ht, sup1: vt, sup2: mt, sup3: ft, sub1: pt, sub2: dt, supDrop: gt, subDrop: yt, axisHeight: zt, defaultRuleThickness: St, bigOpSpacing1: Mt, bigOpSpacing2: Tt, bigOpSpacing3: At, bigOpSpacing4: Nt, bigOpSpacing5: qt, ptPerEm: ye, emPerEx: re / ae, doubleRuleSep: Ct, delim1: bt, getDelim2: function(r) {
  if (r.size === I0.TEXT.size)
    return xt;
  if (r.size === I0.SCRIPT.size)
    return wt;
  if (r.size === I0.SCRIPTSCRIPT.size)
    return kt;
  throw new Error("Unexpected style size: " + r.size);
} }, Rt = st, Dt = function(r, e) {
  var t = Rt[e][r.charCodeAt(0)];
  if (t)
    return { depth: t[0], height: t[1], italic: t[2], skew: t[3], width: t[4] };
}, w0 = { metrics: Et, getCharacterMetrics: Dt }, be = { exports: {} };
(function(r) {
  r.exports = { math: {}, text: {} };
  function e(O, J, D, N, H) {
    r.exports[O][H] = { font: J, group: D, replace: N };
  }
  var t = "math", n = "text", a = "main", i = "ams", o = "accent", l = "bin", u = "close", c = "inner", h = "mathord", m = "op", d = "open", f = "punct", s = "rel", y = "spacing", v = "textord";
  e(t, a, s, "\u2261", "\\equiv"), e(t, a, s, "\u227A", "\\prec"), e(t, a, s, "\u227B", "\\succ"), e(t, a, s, "\u223C", "\\sim"), e(t, a, s, "\u22A5", "\\perp"), e(t, a, s, "\u2AAF", "\\preceq"), e(t, a, s, "\u2AB0", "\\succeq"), e(t, a, s, "\u2243", "\\simeq"), e(t, a, s, "\u2223", "\\mid"), e(t, a, s, "\u226A", "\\ll"), e(t, a, s, "\u226B", "\\gg"), e(t, a, s, "\u224D", "\\asymp"), e(t, a, s, "\u2225", "\\parallel"), e(t, a, s, "\u22C8", "\\bowtie"), e(t, a, s, "\u2323", "\\smile"), e(t, a, s, "\u2291", "\\sqsubseteq"), e(t, a, s, "\u2292", "\\sqsupseteq"), e(t, a, s, "\u2250", "\\doteq"), e(t, a, s, "\u2322", "\\frown"), e(t, a, s, "\u220B", "\\ni"), e(t, a, s, "\u221D", "\\propto"), e(t, a, s, "\u22A2", "\\vdash"), e(t, a, s, "\u22A3", "\\dashv"), e(t, a, s, "\u220B", "\\owns"), e(t, a, f, ".", "\\ldotp"), e(t, a, f, "\u22C5", "\\cdotp"), e(t, a, v, "#", "\\#"), e(t, a, v, "&", "\\&"), e(t, a, v, "\u2135", "\\aleph"), e(t, a, v, "\u2200", "\\forall"), e(t, a, v, "\u210F", "\\hbar"), e(t, a, v, "\u2203", "\\exists"), e(t, a, v, "\u2207", "\\nabla"), e(t, a, v, "\u266D", "\\flat"), e(t, a, v, "\u2113", "\\ell"), e(t, a, v, "\u266E", "\\natural"), e(t, a, v, "\u2663", "\\clubsuit"), e(t, a, v, "\u2118", "\\wp"), e(t, a, v, "\u266F", "\\sharp"), e(t, a, v, "\u2662", "\\diamondsuit"), e(t, a, v, "\u211C", "\\Re"), e(t, a, v, "\u2661", "\\heartsuit"), e(t, a, v, "\u2111", "\\Im"), e(t, a, v, "\u2660", "\\spadesuit"), e(t, a, v, "\u2020", "\\dag"), e(t, a, v, "\u2021", "\\ddag"), e(t, a, u, "\u23B1", "\\rmoustache"), e(t, a, d, "\u23B0", "\\lmoustache"), e(t, a, u, "\u27EF", "\\rgroup"), e(t, a, d, "\u27EE", "\\lgroup"), e(t, a, l, "\u2213", "\\mp"), e(t, a, l, "\u2296", "\\ominus"), e(t, a, l, "\u228E", "\\uplus"), e(t, a, l, "\u2293", "\\sqcap"), e(t, a, l, "\u2217", "\\ast"), e(t, a, l, "\u2294", "\\sqcup"), e(t, a, l, "\u25EF", "\\bigcirc"), e(t, a, l, "\u2219", "\\bullet"), e(t, a, l, "\u2021", "\\ddagger"), e(t, a, l, "\u2240", "\\wr"), e(t, a, l, "\u2A3F", "\\amalg"), e(t, a, s, "\u27F5", "\\longleftarrow"), e(t, a, s, "\u21D0", "\\Leftarrow"), e(t, a, s, "\u27F8", "\\Longleftarrow"), e(t, a, s, "\u27F6", "\\longrightarrow"), e(t, a, s, "\u21D2", "\\Rightarrow"), e(t, a, s, "\u27F9", "\\Longrightarrow"), e(t, a, s, "\u2194", "\\leftrightarrow"), e(t, a, s, "\u27F7", "\\longleftrightarrow"), e(t, a, s, "\u21D4", "\\Leftrightarrow"), e(t, a, s, "\u27FA", "\\Longleftrightarrow"), e(t, a, s, "\u21A6", "\\mapsto"), e(t, a, s, "\u27FC", "\\longmapsto"), e(t, a, s, "\u2197", "\\nearrow"), e(t, a, s, "\u21A9", "\\hookleftarrow"), e(t, a, s, "\u21AA", "\\hookrightarrow"), e(t, a, s, "\u2198", "\\searrow"), e(t, a, s, "\u21BC", "\\leftharpoonup"), e(t, a, s, "\u21C0", "\\rightharpoonup"), e(t, a, s, "\u2199", "\\swarrow"), e(t, a, s, "\u21BD", "\\leftharpoondown"), e(t, a, s, "\u21C1", "\\rightharpoondown"), e(t, a, s, "\u2196", "\\nwarrow"), e(t, a, s, "\u21CC", "\\rightleftharpoons"), e(t, i, s, "\u226E", "\\nless"), e(t, i, s, "\uE010", "\\nleqslant"), e(t, i, s, "\uE011", "\\nleqq"), e(t, i, s, "\u2A87", "\\lneq"), e(t, i, s, "\u2268", "\\lneqq"), e(t, i, s, "\uE00C", "\\lvertneqq"), e(t, i, s, "\u22E6", "\\lnsim"), e(t, i, s, "\u2A89", "\\lnapprox"), e(t, i, s, "\u2280", "\\nprec"), e(t, i, s, "\u22E0", "\\npreceq"), e(t, i, s, "\u22E8", "\\precnsim"), e(t, i, s, "\u2AB9", "\\precnapprox"), e(t, i, s, "\u2241", "\\nsim"), e(t, i, s, "\uE006", "\\nshortmid"), e(t, i, s, "\u2224", "\\nmid"), e(t, i, s, "\u22AC", "\\nvdash"), e(t, i, s, "\u22AD", "\\nvDash"), e(t, i, s, "\u22EA", "\\ntriangleleft"), e(t, i, s, "\u22EC", "\\ntrianglelefteq"), e(t, i, s, "\u228A", "\\subsetneq"), e(t, i, s, "\uE01A", "\\varsubsetneq"), e(t, i, s, "\u2ACB", "\\subsetneqq"), e(t, i, s, "\uE017", "\\varsubsetneqq"), e(t, i, s, "\u226F", "\\ngtr"), e(t, i, s, "\uE00F", "\\ngeqslant"), e(t, i, s, "\uE00E", "\\ngeqq"), e(t, i, s, "\u2A88", "\\gneq"), e(t, i, s, "\u2269", "\\gneqq"), e(t, i, s, "\uE00D", "\\gvertneqq"), e(t, i, s, "\u22E7", "\\gnsim"), e(t, i, s, "\u2A8A", "\\gnapprox"), e(t, i, s, "\u2281", "\\nsucc"), e(t, i, s, "\u22E1", "\\nsucceq"), e(t, i, s, "\u22E9", "\\succnsim"), e(t, i, s, "\u2ABA", "\\succnapprox"), e(t, i, s, "\u2246", "\\ncong"), e(t, i, s, "\uE007", "\\nshortparallel"), e(t, i, s, "\u2226", "\\nparallel"), e(t, i, s, "\u22AF", "\\nVDash"), e(t, i, s, "\u22EB", "\\ntriangleright"), e(t, i, s, "\u22ED", "\\ntrianglerighteq"), e(t, i, s, "\uE018", "\\nsupseteqq"), e(t, i, s, "\u228B", "\\supsetneq"), e(t, i, s, "\uE01B", "\\varsupsetneq"), e(t, i, s, "\u2ACC", "\\supsetneqq"), e(t, i, s, "\uE019", "\\varsupsetneqq"), e(t, i, s, "\u22AE", "\\nVdash"), e(t, i, s, "\u2AB5", "\\precneqq"), e(t, i, s, "\u2AB6", "\\succneqq"), e(t, i, s, "\uE016", "\\nsubseteqq"), e(t, i, l, "\u22B4", "\\unlhd"), e(t, i, l, "\u22B5", "\\unrhd"), e(t, i, s, "\u219A", "\\nleftarrow"), e(t, i, s, "\u219B", "\\nrightarrow"), e(t, i, s, "\u21CD", "\\nLeftarrow"), e(t, i, s, "\u21CF", "\\nRightarrow"), e(t, i, s, "\u21AE", "\\nleftrightarrow"), e(t, i, s, "\u21CE", "\\nLeftrightarrow"), e(t, i, s, "\u25B3", "\\vartriangle"), e(t, i, v, "\u210F", "\\hslash"), e(t, i, v, "\u25BD", "\\triangledown"), e(t, i, v, "\u25CA", "\\lozenge"), e(t, i, v, "\u24C8", "\\circledS"), e(t, i, v, "\xAE", "\\circledR"), e(t, i, v, "\u2221", "\\measuredangle"), e(t, i, v, "\u2204", "\\nexists"), e(t, i, v, "\u2127", "\\mho"), e(t, i, v, "\u2132", "\\Finv"), e(t, i, v, "\u2141", "\\Game"), e(t, i, v, "k", "\\Bbbk"), e(t, i, v, "\u2035", "\\backprime"), e(t, i, v, "\u25B2", "\\blacktriangle"), e(t, i, v, "\u25BC", "\\blacktriangledown"), e(t, i, v, "\u25A0", "\\blacksquare"), e(t, i, v, "\u29EB", "\\blacklozenge"), e(t, i, v, "\u2605", "\\bigstar"), e(t, i, v, "\u2222", "\\sphericalangle"), e(t, i, v, "\u2201", "\\complement"), e(t, i, v, "\xF0", "\\eth"), e(t, i, v, "\u2571", "\\diagup"), e(t, i, v, "\u2572", "\\diagdown"), e(t, i, v, "\u25A1", "\\square"), e(t, i, v, "\u25A1", "\\Box"), e(t, i, v, "\u25CA", "\\Diamond"), e(t, i, v, "\xA5", "\\yen"), e(t, i, v, "\u2713", "\\checkmark"), e(t, i, v, "\u2136", "\\beth"), e(t, i, v, "\u2138", "\\daleth"), e(t, i, v, "\u2137", "\\gimel"), e(t, i, v, "\u03DD", "\\digamma"), e(t, i, v, "\u03F0", "\\varkappa"), e(t, i, d, "\u250C", "\\ulcorner"), e(t, i, u, "\u2510", "\\urcorner"), e(t, i, d, "\u2514", "\\llcorner"), e(t, i, u, "\u2518", "\\lrcorner"), e(t, i, s, "\u2266", "\\leqq"), e(t, i, s, "\u2A7D", "\\leqslant"), e(t, i, s, "\u2A95", "\\eqslantless"), e(t, i, s, "\u2272", "\\lesssim"), e(t, i, s, "\u2A85", "\\lessapprox"), e(t, i, s, "\u224A", "\\approxeq"), e(t, i, l, "\u22D6", "\\lessdot"), e(t, i, s, "\u22D8", "\\lll"), e(t, i, s, "\u2276", "\\lessgtr"), e(t, i, s, "\u22DA", "\\lesseqgtr"), e(t, i, s, "\u2A8B", "\\lesseqqgtr"), e(t, i, s, "\u2251", "\\doteqdot"), e(t, i, s, "\u2253", "\\risingdotseq"), e(t, i, s, "\u2252", "\\fallingdotseq"), e(t, i, s, "\u223D", "\\backsim"), e(t, i, s, "\u22CD", "\\backsimeq"), e(t, i, s, "\u2AC5", "\\subseteqq"), e(t, i, s, "\u22D0", "\\Subset"), e(t, i, s, "\u228F", "\\sqsubset"), e(t, i, s, "\u227C", "\\preccurlyeq"), e(t, i, s, "\u22DE", "\\curlyeqprec"), e(t, i, s, "\u227E", "\\precsim"), e(t, i, s, "\u2AB7", "\\precapprox"), e(t, i, s, "\u22B2", "\\vartriangleleft"), e(t, i, s, "\u22B4", "\\trianglelefteq"), e(t, i, s, "\u22A8", "\\vDash"), e(t, i, s, "\u22AA", "\\Vvdash"), e(t, i, s, "\u2323", "\\smallsmile"), e(t, i, s, "\u2322", "\\smallfrown"), e(t, i, s, "\u224F", "\\bumpeq"), e(t, i, s, "\u224E", "\\Bumpeq"), e(t, i, s, "\u2267", "\\geqq"), e(t, i, s, "\u2A7E", "\\geqslant"), e(t, i, s, "\u2A96", "\\eqslantgtr"), e(t, i, s, "\u2273", "\\gtrsim"), e(t, i, s, "\u2A86", "\\gtrapprox"), e(t, i, l, "\u22D7", "\\gtrdot"), e(t, i, s, "\u22D9", "\\ggg"), e(t, i, s, "\u2277", "\\gtrless"), e(t, i, s, "\u22DB", "\\gtreqless"), e(t, i, s, "\u2A8C", "\\gtreqqless"), e(t, i, s, "\u2256", "\\eqcirc"), e(t, i, s, "\u2257", "\\circeq"), e(t, i, s, "\u225C", "\\triangleq"), e(t, i, s, "\u223C", "\\thicksim"), e(t, i, s, "\u2248", "\\thickapprox"), e(t, i, s, "\u2AC6", "\\supseteqq"), e(t, i, s, "\u22D1", "\\Supset"), e(t, i, s, "\u2290", "\\sqsupset"), e(t, i, s, "\u227D", "\\succcurlyeq"), e(t, i, s, "\u22DF", "\\curlyeqsucc"), e(t, i, s, "\u227F", "\\succsim"), e(t, i, s, "\u2AB8", "\\succapprox"), e(t, i, s, "\u22B3", "\\vartriangleright"), e(t, i, s, "\u22B5", "\\trianglerighteq"), e(t, i, s, "\u22A9", "\\Vdash"), e(t, i, s, "\u2223", "\\shortmid"), e(t, i, s, "\u2225", "\\shortparallel"), e(t, i, s, "\u226C", "\\between"), e(t, i, s, "\u22D4", "\\pitchfork"), e(t, i, s, "\u221D", "\\varpropto"), e(t, i, s, "\u25C0", "\\blacktriangleleft"), e(t, i, s, "\u2234", "\\therefore"), e(t, i, s, "\u220D", "\\backepsilon"), e(t, i, s, "\u25B6", "\\blacktriangleright"), e(t, i, s, "\u2235", "\\because"), e(t, i, s, "\u22D8", "\\llless"), e(t, i, s, "\u22D9", "\\gggtr"), e(t, i, l, "\u22B2", "\\lhd"), e(t, i, l, "\u22B3", "\\rhd"), e(t, i, s, "\u2242", "\\eqsim"), e(t, a, s, "\u22C8", "\\Join"), e(t, i, s, "\u2251", "\\Doteq"), e(t, i, l, "\u2214", "\\dotplus"), e(t, i, l, "\u2216", "\\smallsetminus"), e(t, i, l, "\u22D2", "\\Cap"), e(t, i, l, "\u22D3", "\\Cup"), e(t, i, l, "\u2A5E", "\\doublebarwedge"), e(t, i, l, "\u229F", "\\boxminus"), e(t, i, l, "\u229E", "\\boxplus"), e(t, i, l, "\u22C7", "\\divideontimes"), e(t, i, l, "\u22C9", "\\ltimes"), e(t, i, l, "\u22CA", "\\rtimes"), e(t, i, l, "\u22CB", "\\leftthreetimes"), e(t, i, l, "\u22CC", "\\rightthreetimes"), e(t, i, l, "\u22CF", "\\curlywedge"), e(t, i, l, "\u22CE", "\\curlyvee"), e(t, i, l, "\u229D", "\\circleddash"), e(t, i, l, "\u229B", "\\circledast"), e(t, i, l, "\u22C5", "\\centerdot"), e(t, i, l, "\u22BA", "\\intercal"), e(t, i, l, "\u22D2", "\\doublecap"), e(t, i, l, "\u22D3", "\\doublecup"), e(t, i, l, "\u22A0", "\\boxtimes"), e(t, i, s, "\u21E2", "\\dashrightarrow"), e(t, i, s, "\u21E0", "\\dashleftarrow"), e(t, i, s, "\u21C7", "\\leftleftarrows"), e(t, i, s, "\u21C6", "\\leftrightarrows"), e(t, i, s, "\u21DA", "\\Lleftarrow"), e(t, i, s, "\u219E", "\\twoheadleftarrow"), e(t, i, s, "\u21A2", "\\leftarrowtail"), e(t, i, s, "\u21AB", "\\looparrowleft"), e(t, i, s, "\u21CB", "\\leftrightharpoons"), e(t, i, s, "\u21B6", "\\curvearrowleft"), e(t, i, s, "\u21BA", "\\circlearrowleft"), e(t, i, s, "\u21B0", "\\Lsh"), e(t, i, s, "\u21C8", "\\upuparrows"), e(t, i, s, "\u21BF", "\\upharpoonleft"), e(t, i, s, "\u21C3", "\\downharpoonleft"), e(t, i, s, "\u22B8", "\\multimap"), e(t, i, s, "\u21AD", "\\leftrightsquigarrow"), e(t, i, s, "\u21C9", "\\rightrightarrows"), e(t, i, s, "\u21C4", "\\rightleftarrows"), e(t, i, s, "\u21A0", "\\twoheadrightarrow"), e(t, i, s, "\u21A3", "\\rightarrowtail"), e(t, i, s, "\u21AC", "\\looparrowright"), e(t, i, s, "\u21B7", "\\curvearrowright"), e(t, i, s, "\u21BB", "\\circlearrowright"), e(t, i, s, "\u21B1", "\\Rsh"), e(t, i, s, "\u21CA", "\\downdownarrows"), e(t, i, s, "\u21BE", "\\upharpoonright"), e(t, i, s, "\u21C2", "\\downharpoonright"), e(t, i, s, "\u21DD", "\\rightsquigarrow"), e(t, i, s, "\u21DD", "\\leadsto"), e(t, i, s, "\u21DB", "\\Rrightarrow"), e(t, i, s, "\u21BE", "\\restriction"), e(t, a, v, "\u2018", "`"), e(t, a, v, "$", "\\$"), e(t, a, v, "%", "\\%"), e(t, a, v, "_", "\\_"), e(t, a, v, "\u2220", "\\angle"), e(t, a, v, "\u221E", "\\infty"), e(t, a, v, "\u2032", "\\prime"), e(t, a, v, "\u25B3", "\\triangle"), e(t, a, v, "\u0393", "\\Gamma"), e(t, a, v, "\u0394", "\\Delta"), e(t, a, v, "\u0398", "\\Theta"), e(t, a, v, "\u039B", "\\Lambda"), e(t, a, v, "\u039E", "\\Xi"), e(t, a, v, "\u03A0", "\\Pi"), e(t, a, v, "\u03A3", "\\Sigma"), e(t, a, v, "\u03A5", "\\Upsilon"), e(t, a, v, "\u03A6", "\\Phi"), e(t, a, v, "\u03A8", "\\Psi"), e(t, a, v, "\u03A9", "\\Omega"), e(t, a, v, "\xAC", "\\neg"), e(t, a, v, "\xAC", "\\lnot"), e(t, a, v, "\u22A4", "\\top"), e(t, a, v, "\u22A5", "\\bot"), e(t, a, v, "\u2205", "\\emptyset"), e(t, i, v, "\u2205", "\\varnothing"), e(t, a, h, "\u03B1", "\\alpha"), e(t, a, h, "\u03B2", "\\beta"), e(t, a, h, "\u03B3", "\\gamma"), e(t, a, h, "\u03B4", "\\delta"), e(t, a, h, "\u03F5", "\\epsilon"), e(t, a, h, "\u03B6", "\\zeta"), e(t, a, h, "\u03B7", "\\eta"), e(t, a, h, "\u03B8", "\\theta"), e(t, a, h, "\u03B9", "\\iota"), e(t, a, h, "\u03BA", "\\kappa"), e(t, a, h, "\u03BB", "\\lambda"), e(t, a, h, "\u03BC", "\\mu"), e(t, a, h, "\u03BD", "\\nu"), e(t, a, h, "\u03BE", "\\xi"), e(t, a, h, "o", "\\omicron"), e(t, a, h, "\u03C0", "\\pi"), e(t, a, h, "\u03C1", "\\rho"), e(t, a, h, "\u03C3", "\\sigma"), e(t, a, h, "\u03C4", "\\tau"), e(t, a, h, "\u03C5", "\\upsilon"), e(t, a, h, "\u03D5", "\\phi"), e(t, a, h, "\u03C7", "\\chi"), e(t, a, h, "\u03C8", "\\psi"), e(t, a, h, "\u03C9", "\\omega"), e(t, a, h, "\u03B5", "\\varepsilon"), e(t, a, h, "\u03D1", "\\vartheta"), e(t, a, h, "\u03D6", "\\varpi"), e(t, a, h, "\u03F1", "\\varrho"), e(t, a, h, "\u03C2", "\\varsigma"), e(t, a, h, "\u03C6", "\\varphi"), e(t, a, l, "\u2217", "*"), e(t, a, l, "+", "+"), e(t, a, l, "\u2212", "-"), e(t, a, l, "\u22C5", "\\cdot"), e(t, a, l, "\u2218", "\\circ"), e(t, a, l, "\xF7", "\\div"), e(t, a, l, "\xB1", "\\pm"), e(t, a, l, "\xD7", "\\times"), e(t, a, l, "\u2229", "\\cap"), e(t, a, l, "\u222A", "\\cup"), e(t, a, l, "\u2216", "\\setminus"), e(t, a, l, "\u2227", "\\land"), e(t, a, l, "\u2228", "\\lor"), e(t, a, l, "\u2227", "\\wedge"), e(t, a, l, "\u2228", "\\vee"), e(t, a, v, "\u221A", "\\surd"), e(t, a, d, "(", "("), e(t, a, d, "[", "["), e(t, a, d, "\u27E8", "\\langle"), e(t, a, d, "\u2223", "\\lvert"), e(t, a, d, "\u2225", "\\lVert"), e(t, a, u, ")", ")"), e(t, a, u, "]", "]"), e(t, a, u, "?", "?"), e(t, a, u, "!", "!"), e(t, a, u, "\u27E9", "\\rangle"), e(t, a, u, "\u2223", "\\rvert"), e(t, a, u, "\u2225", "\\rVert"), e(t, a, s, "=", "="), e(t, a, s, "<", "<"), e(t, a, s, ">", ">"), e(t, a, s, ":", ":"), e(t, a, s, "\u2248", "\\approx"), e(t, a, s, "\u2245", "\\cong"), e(t, a, s, "\u2265", "\\ge"), e(t, a, s, "\u2265", "\\geq"), e(t, a, s, "\u2190", "\\gets"), e(t, a, s, ">", "\\gt"), e(t, a, s, "\u2208", "\\in"), e(t, a, s, "\u2209", "\\notin"), e(t, a, s, "\u2282", "\\subset"), e(t, a, s, "\u2283", "\\supset"), e(t, a, s, "\u2286", "\\subseteq"), e(t, a, s, "\u2287", "\\supseteq"), e(t, i, s, "\u2288", "\\nsubseteq"), e(t, i, s, "\u2289", "\\nsupseteq"), e(t, a, s, "\u22A8", "\\models"), e(t, a, s, "\u2190", "\\leftarrow"), e(t, a, s, "\u2264", "\\le"), e(t, a, s, "\u2264", "\\leq"), e(t, a, s, "<", "\\lt"), e(t, a, s, "\u2260", "\\ne"), e(t, a, s, "\u2260", "\\neq"), e(t, a, s, "\u2192", "\\rightarrow"), e(t, a, s, "\u2192", "\\to"), e(t, i, s, "\u2271", "\\ngeq"), e(t, i, s, "\u2270", "\\nleq"), e(t, a, y, null, "\\!"), e(t, a, y, "\xA0", "\\ "), e(t, a, y, "\xA0", "~"), e(t, a, y, null, "\\,"), e(t, a, y, null, "\\:"), e(t, a, y, null, "\\;"), e(t, a, y, null, "\\enspace"), e(t, a, y, null, "\\qquad"), e(t, a, y, null, "\\quad"), e(t, a, y, "\xA0", "\\space"), e(t, a, f, ",", ","), e(t, a, f, ";", ";"), e(t, a, f, ":", "\\colon"), e(t, i, l, "\u22BC", "\\barwedge"), e(t, i, l, "\u22BB", "\\veebar"), e(t, a, l, "\u2299", "\\odot"), e(t, a, l, "\u2295", "\\oplus"), e(t, a, l, "\u2297", "\\otimes"), e(t, a, v, "\u2202", "\\partial"), e(t, a, l, "\u2298", "\\oslash"), e(t, i, l, "\u229A", "\\circledcirc"), e(t, i, l, "\u22A1", "\\boxdot"), e(t, a, l, "\u25B3", "\\bigtriangleup"), e(t, a, l, "\u25BD", "\\bigtriangledown"), e(t, a, l, "\u2020", "\\dagger"), e(t, a, l, "\u22C4", "\\diamond"), e(t, a, l, "\u22C6", "\\star"), e(t, a, l, "\u25C3", "\\triangleleft"), e(t, a, l, "\u25B9", "\\triangleright"), e(t, a, d, "{", "\\{"), e(t, a, u, "}", "\\}"), e(t, a, d, "{", "\\lbrace"), e(t, a, u, "}", "\\rbrace"), e(t, a, d, "[", "\\lbrack"), e(t, a, u, "]", "\\rbrack"), e(t, a, d, "\u230A", "\\lfloor"), e(t, a, u, "\u230B", "\\rfloor"), e(t, a, d, "\u2308", "\\lceil"), e(t, a, u, "\u2309", "\\rceil"), e(t, a, v, "\\", "\\backslash"), e(t, a, v, "\u2223", "|"), e(t, a, v, "\u2223", "\\vert"), e(t, a, v, "\u2225", "\\|"), e(t, a, v, "\u2225", "\\Vert"), e(t, a, s, "\u2191", "\\uparrow"), e(t, a, s, "\u21D1", "\\Uparrow"), e(t, a, s, "\u2193", "\\downarrow"), e(t, a, s, "\u21D3", "\\Downarrow"), e(t, a, s, "\u2195", "\\updownarrow"), e(t, a, s, "\u21D5", "\\Updownarrow"), e(t, t, m, "\u2210", "\\coprod"), e(t, t, m, "\u22C1", "\\bigvee"), e(t, t, m, "\u22C0", "\\bigwedge"), e(t, t, m, "\u2A04", "\\biguplus"), e(t, t, m, "\u22C2", "\\bigcap"), e(t, t, m, "\u22C3", "\\bigcup"), e(t, t, m, "\u222B", "\\int"), e(t, t, m, "\u222B", "\\intop"), e(t, t, m, "\u222C", "\\iint"), e(t, t, m, "\u222D", "\\iiint"), e(t, t, m, "\u220F", "\\prod"), e(t, t, m, "\u2211", "\\sum"), e(t, t, m, "\u2A02", "\\bigotimes"), e(t, t, m, "\u2A01", "\\bigoplus"), e(t, t, m, "\u2A00", "\\bigodot"), e(t, t, m, "\u222E", "\\oint"), e(t, t, m, "\u2A06", "\\bigsqcup"), e(t, t, m, "\u222B", "\\smallint"), e(t, a, c, "\u2026", "\\ldots"), e(t, a, c, "\u22EF", "\\cdots"), e(t, a, c, "\u22F1", "\\ddots"), e(t, a, v, "\u22EE", "\\vdots"), e(t, a, o, "\xB4", "\\acute"), e(t, a, o, "`", "\\grave"), e(t, a, o, "\xA8", "\\ddot"), e(t, a, o, "~", "\\tilde"), e(t, a, o, "\xAF", "\\bar"), e(t, a, o, "\u02D8", "\\breve"), e(t, a, o, "\u02C7", "\\check"), e(t, a, o, "^", "\\hat"), e(t, a, o, "\u20D7", "\\vec"), e(t, a, o, "\u02D9", "\\dot"), e(t, a, h, "\u0131", "\\imath"), e(t, a, h, "\u0237", "\\jmath"), e(n, a, y, "\xA0", "\\ "), e(n, a, y, "\xA0", " "), e(n, a, y, "\xA0", "~");
  var k, w, A = '0123456789/@."';
  for (k = 0; k < A.length; k++)
    w = A.charAt(k), e(t, a, v, w, w);
  var M = "0123456789`!@*()-=+[]'\";:?/.,";
  for (k = 0; k < M.length; k++)
    w = M.charAt(k), e(n, a, v, w, w);
  var T = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
  for (k = 0; k < T.length; k++)
    w = T.charAt(k), e(t, a, h, w, w), e(n, a, v, w, w);
})(be);
var D0 = be.exports, c0 = ge, xe = w0, Q = D0, V0 = X, Pt = ["\\Gamma", "\\Delta", "\\Theta", "\\Lambda", "\\Xi", "\\Pi", "\\Sigma", "\\Upsilon", "\\Phi", "\\Psi", "\\Omega"], we = ["\u0131", "\u0237"], e0 = function(r, e, t, n, a) {
  Q[t][r] && Q[t][r].replace && (r = Q[t][r].replace);
  var i = xe.getCharacterMetrics(r, e), o;
  return i ? o = new c0.symbolNode(r, i.height, i.depth, i.italic, i.skew, a) : (typeof console < "u" && console.warn("No character metrics for '" + r + "' in style '" + e + "'"), o = new c0.symbolNode(r, 0, 0, 0, 0, a)), n && (o.style.color = n), o;
}, Lt = function(r, e, t, n) {
  return r === "\\" || Q[e][r].font === "main" ? e0(r, "Main-Regular", e, t, n) : e0(r, "AMS-Regular", e, t, n.concat(["amsrm"]));
}, ie = function(r, e, t, n, a) {
  if (a === "mathord")
    return ke(r, e, t, n);
  if (a === "textord")
    return e0(r, "Main-Regular", e, t, n.concat(["mathrm"]));
  throw new Error("unexpected type: " + a + " in mathDefault");
}, ke = function(r, e, t, n) {
  return /[0-9]/.test(r.charAt(0)) || V0.contains(we, r) || V0.contains(Pt, r) ? e0(r, "Main-Italic", e, t, n.concat(["mainit"])) : e0(r, "Math-Italic", e, t, n.concat(["mathit"]));
}, Ft = function(r, e, t) {
  var n = r.mode, a = r.value;
  Q[n][a] && Q[n][a].replace && (a = Q[n][a].replace);
  var i = ["mord"], o = e.getColor(), l = e.font;
  if (l) {
    if (l === "mathit" || V0.contains(we, a))
      return ke(a, n, o, i);
    var u = Se[l].fontName;
    return xe.getCharacterMetrics(a, u) ? e0(a, u, n, o, i.concat([l])) : ie(a, n, o, i, t);
  } else
    return ie(a, n, o, i, t);
}, ze = function(r) {
  var e = 0, t = 0, n = 0;
  if (r.children)
    for (var a = 0; a < r.children.length; a++)
      r.children[a].height > e && (e = r.children[a].height), r.children[a].depth > t && (t = r.children[a].depth), r.children[a].maxFontSize > n && (n = r.children[a].maxFontSize);
  r.height = e, r.depth = t, r.maxFontSize = n;
}, n0 = function(r, e, t) {
  var n = new c0.span(r, e);
  return ze(n), t && (n.style.color = t), n;
}, $t = function(r) {
  var e = new c0.documentFragment(r);
  return ze(e), e;
}, Ot = function(r, e) {
  var t = n0([], [new c0.symbolNode("\u200B")]);
  t.style.fontSize = e / r.style.sizeMultiplier + "em";
  var n = n0(["fontsize-ensurer", "reset-" + r.size, "size5"], [t]);
  return n;
}, It = function(r, e, t, n) {
  var a, i, o;
  if (e === "individualShift") {
    var l = r;
    for (r = [l[0]], a = -l[0].shift - l[0].elem.depth, i = a, o = 1; o < l.length; o++) {
      var u = -l[o].shift - i - l[o].elem.depth, c = u - (l[o - 1].elem.height + l[o - 1].elem.depth);
      i = i + u, r.push({ type: "kern", size: c }), r.push(l[o]);
    }
  } else if (e === "top") {
    var h = t;
    for (o = 0; o < r.length; o++)
      r[o].type === "kern" ? h -= r[o].size : h -= r[o].elem.height + r[o].elem.depth;
    a = h;
  } else
    e === "bottom" ? a = -t : e === "shift" ? a = -r[0].elem.depth - t : e === "firstBaseline" ? a = -r[0].elem.depth : a = 0;
  var m = 0;
  for (o = 0; o < r.length; o++)
    r[o].type === "elem" && (m = Math.max(m, r[o].elem.maxFontSize));
  var d = Ot(n, m), f = [];
  for (i = a, o = 0; o < r.length; o++)
    if (r[o].type === "kern")
      i += r[o].size;
    else {
      var s = r[o].elem, y = -s.depth - i;
      i += s.height + s.depth;
      var v = n0([], [d, s]);
      v.height -= y, v.depth += y, v.style.top = y + "em", f.push(v);
    }
  var k = n0(["baseline-fix"], [d, new c0.symbolNode("\u200B")]);
  f.push(k);
  var w = n0(["vlist"], f);
  return w.height = Math.max(i, w.height), w.depth = Math.max(-a, w.depth), w;
}, Bt = { size1: 0.5, size2: 0.7, size3: 0.8, size4: 0.9, size5: 1, size6: 1.2, size7: 1.44, size8: 1.73, size9: 2.07, size10: 2.49 }, _t = { "\\qquad": { size: "2em", className: "qquad" }, "\\quad": { size: "1em", className: "quad" }, "\\enspace": { size: "0.5em", className: "enspace" }, "\\;": { size: "0.277778em", className: "thickspace" }, "\\:": { size: "0.22222em", className: "mediumspace" }, "\\,": { size: "0.16667em", className: "thinspace" }, "\\!": { size: "-0.16667em", className: "negativethinspace" } }, Se = { mathbf: { variant: "bold", fontName: "Main-Bold" }, mathrm: { variant: "normal", fontName: "Main-Regular" }, mathbb: { variant: "double-struck", fontName: "AMS-Regular" }, mathcal: { variant: "script", fontName: "Caligraphic-Regular" }, mathfrak: { variant: "fraktur", fontName: "Fraktur-Regular" }, mathscr: { variant: "script", fontName: "Script-Regular" }, mathsf: { variant: "sans-serif", fontName: "SansSerif-Regular" }, mathtt: { variant: "monospace", fontName: "Typewriter-Regular" } }, P0 = { fontMap: Se, makeSymbol: e0, mathsym: Lt, makeSpan: n0, makeFragment: $t, makeVList: It, makeOrd: Ft, sizingMultiplier: Bt, spacingFunctions: _t }, Ht = W, _ = C0, k0 = P0, t0 = w0, B0 = D0, d0 = X, x0 = k0.makeSpan, p0 = function(r, e) {
  return B0.math[r] && B0.math[r].replace ? t0.getCharacterMetrics(B0.math[r].replace, e) : t0.getCharacterMetrics(r, e);
}, Vt = function(r, e, t) {
  return k0.makeSymbol(r, "Size" + e + "-Regular", t);
}, j0 = function(r, e, t) {
  var n = x0(["style-wrap", t.style.reset(), e.cls()], [r]), a = e.sizeMultiplier / t.style.sizeMultiplier;
  return n.height *= a, n.depth *= a, n.maxFontSize = e.sizeMultiplier, n;
}, Gt = function(r, e, t, n, a) {
  var i = k0.makeSymbol(r, "Main-Regular", a), o = j0(i, e, n);
  if (t) {
    var l = (1 - n.style.sizeMultiplier / e.sizeMultiplier) * t0.metrics.axisHeight;
    o.style.top = l + "em", o.height -= l, o.depth += l;
  }
  return o;
}, Me = function(r, e, t, n, a) {
  var i = Vt(r, e, a), o = j0(x0(["delimsizing", "size" + e], [i], n.getColor()), _.TEXT, n);
  if (t) {
    var l = (1 - n.style.sizeMultiplier) * t0.metrics.axisHeight;
    o.style.top = l + "em", o.height -= l, o.depth += l;
  }
  return o;
}, i0 = function(r, e, t) {
  var n;
  e === "Size1-Regular" ? n = "delim-size1" : e === "Size4-Regular" && (n = "delim-size4");
  var a = x0(["delimsizinginner", n], [x0([], [k0.makeSymbol(r, e, t)])]);
  return { type: "elem", elem: a };
}, Te = function(r, e, t, n, a) {
  var i, o, l, u;
  i = l = u = r, o = null;
  var c = "Size1-Regular";
  r === "\\uparrow" ? l = u = "\u23D0" : r === "\\Uparrow" ? l = u = "\u2016" : r === "\\downarrow" ? i = l = "\u23D0" : r === "\\Downarrow" ? i = l = "\u2016" : r === "\\updownarrow" ? (i = "\\uparrow", l = "\u23D0", u = "\\downarrow") : r === "\\Updownarrow" ? (i = "\\Uparrow", l = "\u2016", u = "\\Downarrow") : r === "[" || r === "\\lbrack" ? (i = "\u23A1", l = "\u23A2", u = "\u23A3", c = "Size4-Regular") : r === "]" || r === "\\rbrack" ? (i = "\u23A4", l = "\u23A5", u = "\u23A6", c = "Size4-Regular") : r === "\\lfloor" ? (l = i = "\u23A2", u = "\u23A3", c = "Size4-Regular") : r === "\\lceil" ? (i = "\u23A1", l = u = "\u23A2", c = "Size4-Regular") : r === "\\rfloor" ? (l = i = "\u23A5", u = "\u23A6", c = "Size4-Regular") : r === "\\rceil" ? (i = "\u23A4", l = u = "\u23A5", c = "Size4-Regular") : r === "(" ? (i = "\u239B", l = "\u239C", u = "\u239D", c = "Size4-Regular") : r === ")" ? (i = "\u239E", l = "\u239F", u = "\u23A0", c = "Size4-Regular") : r === "\\{" || r === "\\lbrace" ? (i = "\u23A7", o = "\u23A8", u = "\u23A9", l = "\u23AA", c = "Size4-Regular") : r === "\\}" || r === "\\rbrace" ? (i = "\u23AB", o = "\u23AC", u = "\u23AD", l = "\u23AA", c = "Size4-Regular") : r === "\\lgroup" ? (i = "\u23A7", u = "\u23A9", l = "\u23AA", c = "Size4-Regular") : r === "\\rgroup" ? (i = "\u23AB", u = "\u23AD", l = "\u23AA", c = "Size4-Regular") : r === "\\lmoustache" ? (i = "\u23A7", u = "\u23AD", l = "\u23AA", c = "Size4-Regular") : r === "\\rmoustache" ? (i = "\u23AB", u = "\u23A9", l = "\u23AA", c = "Size4-Regular") : r === "\\surd" && (i = "\uE001", u = "\u23B7", l = "\uE000", c = "Size4-Regular");
  var h = p0(i, c), m = h.height + h.depth, d = p0(l, c), f = d.height + d.depth, s = p0(u, c), y = s.height + s.depth, v = 0, k = 1;
  if (o !== null) {
    var w = p0(o, c);
    v = w.height + w.depth, k = 2;
  }
  var A = m + y + v, M = Math.ceil((e - A) / (k * f)), T = A + M * k * f, O = t0.metrics.axisHeight;
  t && (O *= n.style.sizeMultiplier);
  var J = T / 2 - O, D = [];
  D.push(i0(u, c, a));
  var N;
  if (o === null)
    for (N = 0; N < M; N++)
      D.push(i0(l, c, a));
  else {
    for (N = 0; N < M; N++)
      D.push(i0(l, c, a));
    for (D.push(i0(o, c, a)), N = 0; N < M; N++)
      D.push(i0(l, c, a));
  }
  D.push(i0(i, c, a));
  var H = k0.makeVList(D, "bottom", J, n);
  return j0(x0(["delimsizing", "mult"], [H], n.getColor()), _.TEXT, n);
}, Ae = ["(", ")", "[", "\\lbrack", "]", "\\rbrack", "\\{", "\\lbrace", "\\}", "\\rbrace", "\\lfloor", "\\rfloor", "\\lceil", "\\rceil", "\\surd"], Xt = ["\\uparrow", "\\downarrow", "\\updownarrow", "\\Uparrow", "\\Downarrow", "\\Updownarrow", "|", "\\|", "\\vert", "\\Vert", "\\lvert", "\\rvert", "\\lVert", "\\rVert", "\\lgroup", "\\rgroup", "\\lmoustache", "\\rmoustache"], Ne = ["<", ">", "\\langle", "\\rangle", "/", "\\backslash", "\\lt", "\\gt"], Ut = [0, 1.2, 1.8, 2.4, 3], Wt = function(r, e, t, n) {
  if (r === "<" || r === "\\lt" ? r = "\\langle" : (r === ">" || r === "\\gt") && (r = "\\rangle"), d0.contains(Ae, r) || d0.contains(Ne, r))
    return Me(r, e, false, t, n);
  if (d0.contains(Xt, r))
    return Te(r, Ut[e], false, t, n);
  throw new Ht("Illegal delimiter: '" + r + "'");
}, jt = [{ type: "small", style: _.SCRIPTSCRIPT }, { type: "small", style: _.SCRIPT }, { type: "small", style: _.TEXT }, { type: "large", size: 1 }, { type: "large", size: 2 }, { type: "large", size: 3 }, { type: "large", size: 4 }], Yt = [{ type: "small", style: _.SCRIPTSCRIPT }, { type: "small", style: _.SCRIPT }, { type: "small", style: _.TEXT }, { type: "stack" }], Jt = [{ type: "small", style: _.SCRIPTSCRIPT }, { type: "small", style: _.SCRIPT }, { type: "small", style: _.TEXT }, { type: "large", size: 1 }, { type: "large", size: 2 }, { type: "large", size: 3 }, { type: "large", size: 4 }, { type: "stack" }], Kt = function(r) {
  if (r.type === "small")
    return "Main-Regular";
  if (r.type === "large")
    return "Size" + r.size + "-Regular";
  if (r.type === "stack")
    return "Size4-Regular";
}, Zt = function(r, e, t, n) {
  for (var a = Math.min(2, 3 - n.style.size), i = a; i < t.length && t[i].type !== "stack"; i++) {
    var o = p0(r, Kt(t[i])), l = o.height + o.depth;
    if (t[i].type === "small" && (l *= t[i].style.sizeMultiplier), l > e)
      return t[i];
  }
  return t[t.length - 1];
}, qe = function(r, e, t, n, a) {
  r === "<" || r === "\\lt" ? r = "\\langle" : (r === ">" || r === "\\gt") && (r = "\\rangle");
  var i;
  d0.contains(Ne, r) ? i = jt : d0.contains(Ae, r) ? i = Jt : i = Yt;
  var o = Zt(r, e, i, n);
  if (o.type === "small")
    return Gt(r, o.style, t, n, a);
  if (o.type === "large")
    return Me(r, o.size, t, n, a);
  if (o.type === "stack")
    return Te(r, e, t, n, a);
}, Qt = function(r, e, t, n, a) {
  var i = t0.metrics.axisHeight * n.style.sizeMultiplier, o = 901, l = 5 / t0.metrics.ptPerEm, u = Math.max(e - i, t + i), c = Math.max(u / 500 * o, 2 * u - l);
  return qe(r, c, true, n, a);
}, er = { sizedDelim: Wt, customSizedDelim: qe, leftRightDelim: Qt }, Ce = W, q = C0, x = P0, h0 = er, ne = ge, b = w0, g0 = X, p = x.makeSpan, j = function(r, e, t) {
  for (var n = [], a = 0; a < r.length; a++) {
    var i = r[a];
    n.push(C(i, e, t)), t = i;
  }
  return n;
}, y0 = { mathord: "mord", textord: "mord", bin: "mbin", rel: "mrel", text: "mord", open: "mopen", close: "mclose", inner: "minner", genfrac: "mord", array: "mord", spacing: "mord", punct: "mpunct", ordgroup: "mord", op: "mop", katex: "mord", overline: "mord", underline: "mord", rule: "mord", leftright: "minner", sqrt: "mord", accent: "mord" }, Z = function(r) {
  return r == null ? y0.mathord : r.type === "supsub" ? Z(r.value.base) : r.type === "llap" || r.type === "rlap" ? Z(r.value) : r.type === "color" || r.type === "sizing" || r.type === "styling" ? Z(r.value.value) : r.type === "delimsizing" ? y0[r.value.delimType] : y0[r.type];
}, tr = function(r, e) {
  return r ? r.type === "op" ? r.value.limits && (e.style.size === q.DISPLAY.size || r.value.alwaysHandleSupSub) : r.type === "accent" ? Y0(r.value.base) : null : false;
}, A0 = function(r) {
  return r ? r.type === "ordgroup" ? r.value.length === 1 ? A0(r.value[0]) : r : r.type === "color" && r.value.value.length === 1 ? A0(r.value.value[0]) : r : false;
}, Y0 = function(r) {
  var e = A0(r);
  return e.type === "mathord" || e.type === "textord" || e.type === "bin" || e.type === "rel" || e.type === "inner" || e.type === "open" || e.type === "close" || e.type === "punct";
}, N0 = function(r) {
  return p(["sizing", "reset-" + r.size, "size5", r.style.reset(), q.TEXT.cls(), "nulldelimiter"]);
}, z = {};
z.mathord = function(r, e, t) {
  return x.makeOrd(r, e, "mathord");
};
z.textord = function(r, e, t) {
  return x.makeOrd(r, e, "textord");
};
z.bin = function(r, e, t) {
  for (var n = "mbin", a = t; a && a.type === "color"; ) {
    var i = a.value.value;
    a = i[i.length - 1];
  }
  return (!t || g0.contains(["mbin", "mopen", "mrel", "mop", "mpunct"], Z(a))) && (r.type = "textord", n = "mord"), x.mathsym(r.value, r.mode, e.getColor(), [n]);
};
z.rel = function(r, e, t) {
  return x.mathsym(r.value, r.mode, e.getColor(), ["mrel"]);
};
z.open = function(r, e, t) {
  return x.mathsym(r.value, r.mode, e.getColor(), ["mopen"]);
};
z.close = function(r, e, t) {
  return x.mathsym(r.value, r.mode, e.getColor(), ["mclose"]);
};
z.inner = function(r, e, t) {
  return x.mathsym(r.value, r.mode, e.getColor(), ["minner"]);
};
z.punct = function(r, e, t) {
  return x.mathsym(r.value, r.mode, e.getColor(), ["mpunct"]);
};
z.ordgroup = function(r, e, t) {
  return p(["mord", e.style.cls()], j(r.value, e.reset()));
};
z.text = function(r, e, t) {
  return p(["text", "mord", e.style.cls()], j(r.value.body, e.reset()));
};
z.color = function(r, e, t) {
  var n = j(r.value.value, e.withColor(r.value.color), t);
  return new x.makeFragment(n);
};
z.supsub = function(r, e, t) {
  if (tr(r.value.base, e))
    return z[r.value.base.type](r, e, t);
  var n = C(r.value.base, e.reset()), a, i, o, l;
  r.value.sup && (o = C(r.value.sup, e.withStyle(e.style.sup())), a = p([e.style.reset(), e.style.sup().cls()], [o])), r.value.sub && (l = C(r.value.sub, e.withStyle(e.style.sub())), i = p([e.style.reset(), e.style.sub().cls()], [l]));
  var u, c;
  Y0(r.value.base) ? (u = 0, c = 0) : (u = n.height - b.metrics.supDrop, c = n.depth + b.metrics.subDrop);
  var h;
  e.style === q.DISPLAY ? h = b.metrics.sup1 : e.style.cramped ? h = b.metrics.sup3 : h = b.metrics.sup2;
  var m = q.TEXT.sizeMultiplier * e.style.sizeMultiplier, d = 0.5 / b.metrics.ptPerEm / m + "em", f;
  if (!r.value.sup)
    c = Math.max(c, b.metrics.sub1, l.height - 0.8 * b.metrics.xHeight), f = x.makeVList([{ type: "elem", elem: i }], "shift", c, e), f.children[0].style.marginRight = d, n instanceof ne.symbolNode && (f.children[0].style.marginLeft = -n.italic + "em");
  else if (!r.value.sub)
    u = Math.max(u, h, o.depth + 0.25 * b.metrics.xHeight), f = x.makeVList([{ type: "elem", elem: a }], "shift", -u, e), f.children[0].style.marginRight = d;
  else {
    u = Math.max(u, h, o.depth + 0.25 * b.metrics.xHeight), c = Math.max(c, b.metrics.sub2);
    var s = b.metrics.defaultRuleThickness;
    if (u - o.depth - (l.height - c) < 4 * s) {
      c = 4 * s - (u - o.depth) + l.height;
      var y = 0.8 * b.metrics.xHeight - (u - o.depth);
      y > 0 && (u += y, c -= y);
    }
    f = x.makeVList([{ type: "elem", elem: i, shift: c }, { type: "elem", elem: a, shift: -u }], "individualShift", null, e), n instanceof ne.symbolNode && (f.children[0].style.marginLeft = -n.italic + "em"), f.children[0].style.marginRight = d, f.children[1].style.marginRight = d;
  }
  return p([Z(r.value.base)], [n, f]);
};
z.genfrac = function(r, e, t) {
  var n = e.style;
  r.value.size === "display" ? n = q.DISPLAY : r.value.size === "text" && (n = q.TEXT);
  var a = n.fracNum(), i = n.fracDen(), o = C(r.value.numer, e.withStyle(a)), l = p([n.reset(), a.cls()], [o]), u = C(r.value.denom, e.withStyle(i)), c = p([n.reset(), i.cls()], [u]), h;
  r.value.hasBarLine ? h = b.metrics.defaultRuleThickness / e.style.sizeMultiplier : h = 0;
  var m, d, f;
  n.size === q.DISPLAY.size ? (m = b.metrics.num1, h > 0 ? d = 3 * h : d = 7 * b.metrics.defaultRuleThickness, f = b.metrics.denom1) : (h > 0 ? (m = b.metrics.num2, d = h) : (m = b.metrics.num3, d = 3 * b.metrics.defaultRuleThickness), f = b.metrics.denom2);
  var s;
  if (h === 0) {
    var y = m - o.depth - (u.height - f);
    y < d && (m += 0.5 * (d - y), f += 0.5 * (d - y)), s = x.makeVList([{ type: "elem", elem: c, shift: f }, { type: "elem", elem: l, shift: -m }], "individualShift", null, e);
  } else {
    var v = b.metrics.axisHeight;
    m - o.depth - (v + 0.5 * h) < d && (m += d - (m - o.depth - (v + 0.5 * h))), v - 0.5 * h - (u.height - f) < d && (f += d - (v - 0.5 * h - (u.height - f)));
    var k = p([e.style.reset(), q.TEXT.cls(), "frac-line"]);
    k.height = h;
    var w = -(v - 0.5 * h);
    s = x.makeVList([{ type: "elem", elem: c, shift: f }, { type: "elem", elem: k, shift: w }, { type: "elem", elem: l, shift: -m }], "individualShift", null, e);
  }
  s.height *= n.sizeMultiplier / e.style.sizeMultiplier, s.depth *= n.sizeMultiplier / e.style.sizeMultiplier;
  var A;
  n.size === q.DISPLAY.size ? A = b.metrics.delim1 : A = b.metrics.getDelim2(n);
  var M, T;
  return r.value.leftDelim == null ? M = N0(e) : M = h0.customSizedDelim(r.value.leftDelim, A, true, e.withStyle(n), r.mode), r.value.rightDelim == null ? T = N0(e) : T = h0.customSizedDelim(r.value.rightDelim, A, true, e.withStyle(n), r.mode), p(["mord", e.style.reset(), n.cls()], [M, p(["mfrac"], [s]), T], e.getColor());
};
z.array = function(r, e, t) {
  var n, a, i = r.value.body.length, o = 0, l = new Array(i), u = 1 / b.metrics.ptPerEm, c = 5 * u, h = 12 * u, m = g0.deflt(r.value.arraystretch, 1), d = m * h, f = 0.7 * d, s = 0.3 * d, y = 0;
  for (n = 0; n < r.value.body.length; ++n) {
    var v = r.value.body[n], k = f, w = s;
    o < v.length && (o = v.length);
    var A = new Array(v.length);
    for (a = 0; a < v.length; ++a) {
      var M = C(v[a], e);
      w < M.depth && (w = M.depth), k < M.height && (k = M.height), A[a] = M;
    }
    var T = 0;
    if (r.value.rowGaps[n]) {
      switch (T = r.value.rowGaps[n].value, T.unit) {
        case "em":
          T = T.number;
          break;
        case "ex":
          T = T.number * b.metrics.emPerEx;
          break;
        default:
          console.error("Can't handle unit " + T.unit), T = 0;
      }
      T > 0 && (T += s, w < T && (w = T), T = 0);
    }
    A.height = k, A.depth = w, y += k, A.pos = y, y += w + T, l[n] = A;
  }
  var O = y / 2 + b.metrics.axisHeight, J = r.value.cols || [], D = [], N, H;
  for (a = 0, H = 0; a < o || H < J.length; ++a, ++H) {
    for (var K = J[H] || {}, ee = true; K.type === "separator"; ) {
      if (ee || (N = p(["arraycolsep"], []), N.style.width = b.metrics.doubleRuleSep + "em", D.push(N)), K.separator === "|") {
        var $0 = p(["vertical-separator"], []);
        $0.style.height = y + "em", $0.style.verticalAlign = -(y - O) + "em", D.push($0);
      } else
        throw new Ce("Invalid separator type: " + K.separator);
      H++, K = J[H] || {}, ee = false;
    }
    if (!(a >= o)) {
      var r0;
      (a > 0 || r.value.hskipBeforeAndAfter) && (r0 = g0.deflt(K.pregap, c), r0 !== 0 && (N = p(["arraycolsep"], []), N.style.width = r0 + "em", D.push(N)));
      var a0 = [];
      for (n = 0; n < i; ++n) {
        var S0 = l[n], M0 = S0[a];
        if (M0) {
          var Ie = S0.pos - O;
          M0.depth = S0.depth, M0.height = S0.height, a0.push({ type: "elem", elem: M0, shift: Ie });
        }
      }
      a0 = x.makeVList(a0, "individualShift", null, e), a0 = p(["col-align-" + (K.align || "c")], [a0]), D.push(a0), (a < o - 1 || r.value.hskipBeforeAndAfter) && (r0 = g0.deflt(K.postgap, c), r0 !== 0 && (N = p(["arraycolsep"], []), N.style.width = r0 + "em", D.push(N)));
    }
  }
  return l = p(["mtable"], D), p(["mord"], [l], e.getColor());
};
z.spacing = function(r, e, t) {
  return r.value === "\\ " || r.value === "\\space" || r.value === " " || r.value === "~" ? p(["mord", "mspace"], [x.mathsym(r.value, r.mode)]) : p(["mord", "mspace", x.spacingFunctions[r.value].className]);
};
z.llap = function(r, e, t) {
  var n = p(["inner"], [C(r.value.body, e.reset())]), a = p(["fix"], []);
  return p(["llap", e.style.cls()], [n, a]);
};
z.rlap = function(r, e, t) {
  var n = p(["inner"], [C(r.value.body, e.reset())]), a = p(["fix"], []);
  return p(["rlap", e.style.cls()], [n, a]);
};
z.op = function(r, e, t) {
  var n, a, i = false;
  r.type === "supsub" && (n = r.value.sup, a = r.value.sub, r = r.value.base, i = true);
  var o = ["\\smallint"], l = false;
  e.style.size === q.DISPLAY.size && r.value.symbol && !g0.contains(o, r.value.body) && (l = true);
  var u, c = 0, h = 0;
  if (r.value.symbol) {
    var m = l ? "Size2-Regular" : "Size1-Regular";
    u = x.makeSymbol(r.value.body, m, "math", e.getColor(), ["op-symbol", l ? "large-op" : "small-op", "mop"]), c = (u.height - u.depth) / 2 - b.metrics.axisHeight * e.style.sizeMultiplier, h = u.italic;
  } else {
    for (var d = [], f = 1; f < r.value.body.length; f++)
      d.push(x.mathsym(r.value.body[f], r.mode));
    u = p(["mop"], d, e.getColor());
  }
  if (i) {
    u = p([], [u]);
    var s, y, v, k;
    if (n) {
      var w = C(n, e.withStyle(e.style.sup()));
      s = p([e.style.reset(), e.style.sup().cls()], [w]), y = Math.max(b.metrics.bigOpSpacing1, b.metrics.bigOpSpacing3 - w.depth);
    }
    if (a) {
      var A = C(a, e.withStyle(e.style.sub()));
      v = p([e.style.reset(), e.style.sub().cls()], [A]), k = Math.max(b.metrics.bigOpSpacing2, b.metrics.bigOpSpacing4 - A.height);
    }
    var M, T, O;
    if (!n)
      T = u.height - c, M = x.makeVList([{ type: "kern", size: b.metrics.bigOpSpacing5 }, { type: "elem", elem: v }, { type: "kern", size: k }, { type: "elem", elem: u }], "top", T, e), M.children[0].style.marginLeft = -h + "em";
    else if (!a)
      O = u.depth + c, M = x.makeVList([{ type: "elem", elem: u }, { type: "kern", size: y }, { type: "elem", elem: s }, { type: "kern", size: b.metrics.bigOpSpacing5 }], "bottom", O, e), M.children[1].style.marginLeft = h + "em";
    else {
      if (!n && !a)
        return u;
      O = b.metrics.bigOpSpacing5 + v.height + v.depth + k + u.depth + c, M = x.makeVList([{ type: "kern", size: b.metrics.bigOpSpacing5 }, { type: "elem", elem: v }, { type: "kern", size: k }, { type: "elem", elem: u }, { type: "kern", size: y }, { type: "elem", elem: s }, { type: "kern", size: b.metrics.bigOpSpacing5 }], "bottom", O, e), M.children[0].style.marginLeft = -h + "em", M.children[2].style.marginLeft = h + "em";
    }
    return p(["mop", "op-limits"], [M]);
  } else
    return r.value.symbol && (u.style.top = c + "em"), u;
};
z.katex = function(r, e, t) {
  var n = p(["k"], [x.mathsym("K", r.mode)]), a = p(["a"], [x.mathsym("A", r.mode)]);
  a.height = (a.height + 0.2) * 0.75, a.depth = (a.height - 0.2) * 0.75;
  var i = p(["t"], [x.mathsym("T", r.mode)]), o = p(["e"], [x.mathsym("E", r.mode)]);
  o.height = o.height - 0.2155, o.depth = o.depth + 0.2155;
  var l = p(["x"], [x.mathsym("X", r.mode)]);
  return p(["katex-logo", "mord"], [n, a, i, o, l], e.getColor());
};
z.overline = function(r, e, t) {
  var n = C(r.value.body, e.withStyle(e.style.cramp())), a = b.metrics.defaultRuleThickness / e.style.sizeMultiplier, i = p([e.style.reset(), q.TEXT.cls(), "overline-line"]);
  i.height = a, i.maxFontSize = 1;
  var o = x.makeVList([{ type: "elem", elem: n }, { type: "kern", size: 3 * a }, { type: "elem", elem: i }, { type: "kern", size: a }], "firstBaseline", null, e);
  return p(["overline", "mord"], [o], e.getColor());
};
z.underline = function(r, e, t) {
  var n = C(r.value.body, e), a = b.metrics.defaultRuleThickness / e.style.sizeMultiplier, i = p([e.style.reset(), q.TEXT.cls(), "underline-line"]);
  i.height = a, i.maxFontSize = 1;
  var o = x.makeVList([{ type: "kern", size: a }, { type: "elem", elem: i }, { type: "kern", size: 3 * a }, { type: "elem", elem: n }], "top", n.height, e);
  return p(["underline", "mord"], [o], e.getColor());
};
z.sqrt = function(r, e, t) {
  var n = C(r.value.body, e.withStyle(e.style.cramp())), a = b.metrics.defaultRuleThickness / e.style.sizeMultiplier, i = p([e.style.reset(), q.TEXT.cls(), "sqrt-line"], [], e.getColor());
  i.height = a, i.maxFontSize = 1;
  var o = a;
  e.style.id < q.TEXT.id && (o = b.metrics.xHeight);
  var l = a + o / 4, u = (n.height + n.depth) * e.style.sizeMultiplier, c = u + l + a, h = p(["sqrt-sign"], [h0.customSizedDelim("\\surd", c, false, e, r.mode)], e.getColor()), m = h.height + h.depth - a;
  m > n.height + n.depth + l && (l = (l + m - n.height - n.depth) / 2);
  var d = -(n.height + l + a) + h.height;
  h.style.top = d + "em", h.height -= d, h.depth += d;
  var f;
  if (n.height === 0 && n.depth === 0 ? f = p() : f = x.makeVList([{ type: "elem", elem: n }, { type: "kern", size: l }, { type: "elem", elem: i }, { type: "kern", size: a }], "firstBaseline", null, e), r.value.index) {
    var s = C(r.value.index, e.withStyle(q.SCRIPTSCRIPT)), y = p([e.style.reset(), q.SCRIPTSCRIPT.cls()], [s]), v = Math.max(h.height, f.height), k = Math.max(h.depth, f.depth), w = 0.6 * (v - k), A = x.makeVList([{ type: "elem", elem: y }], "shift", -w, e), M = p(["root"], [A]);
    return p(["sqrt", "mord"], [M, h, f]);
  } else
    return p(["sqrt", "mord"], [h, f]);
};
z.sizing = function(r, e, t) {
  var n = j(r.value.value, e.withSize(r.value.size), t), a = p(["mord"], [p(["sizing", "reset-" + e.size, r.value.size, e.style.cls()], n)]), i = x.sizingMultiplier[r.value.size];
  return a.maxFontSize = i * e.style.sizeMultiplier, a;
};
z.styling = function(r, e, t) {
  var n = { display: q.DISPLAY, text: q.TEXT, script: q.SCRIPT, scriptscript: q.SCRIPTSCRIPT }, a = n[r.value.style], i = j(r.value.value, e.withStyle(a), t);
  return p([e.style.reset(), a.cls()], i);
};
z.font = function(r, e, t) {
  var n = r.value.font;
  return C(r.value.body, e.withFont(n), t);
};
z.delimsizing = function(r, e, t) {
  var n = r.value.value;
  return n === "." ? p([y0[r.value.delimType]]) : p([y0[r.value.delimType]], [h0.sizedDelim(n, r.value.size, e, r.mode)]);
};
z.leftright = function(r, e, t) {
  for (var n = j(r.value.body, e.reset()), a = 0, i = 0, o = 0; o < n.length; o++)
    a = Math.max(n[o].height, a), i = Math.max(n[o].depth, i);
  a *= e.style.sizeMultiplier, i *= e.style.sizeMultiplier;
  var l;
  r.value.left === "." ? l = N0(e) : l = h0.leftRightDelim(r.value.left, a, i, e, r.mode), n.unshift(l);
  var u;
  return r.value.right === "." ? u = N0(e) : u = h0.leftRightDelim(r.value.right, a, i, e, r.mode), n.push(u), p(["minner", e.style.cls()], n, e.getColor());
};
z.rule = function(r, e, t) {
  var n = p(["mord", "rule"], [], e.getColor()), a = 0;
  r.value.shift && (a = r.value.shift.number, r.value.shift.unit === "ex" && (a *= b.metrics.xHeight));
  var i = r.value.width.number;
  r.value.width.unit === "ex" && (i *= b.metrics.xHeight);
  var o = r.value.height.number;
  return r.value.height.unit === "ex" && (o *= b.metrics.xHeight), a /= e.style.sizeMultiplier, i /= e.style.sizeMultiplier, o /= e.style.sizeMultiplier, n.style.borderRightWidth = i + "em", n.style.borderTopWidth = o + "em", n.style.bottom = a + "em", n.width = i, n.height = o + a, n.depth = -a, n;
};
z.accent = function(r, e, t) {
  var n = r.value.base, a;
  if (r.type === "supsub") {
    var i = r;
    r = i.value.base, n = r.value.base, i.value.base = n, a = C(i, e.reset(), t);
  }
  var o = C(n, e.withStyle(e.style.cramp())), l;
  if (Y0(n)) {
    var u = A0(n), c = C(u, e.withStyle(e.style.cramp()));
    l = c.skew;
  } else
    l = 0;
  var h = Math.min(o.height, b.metrics.xHeight), m = x.makeSymbol(r.value.accent, "Main-Regular", "math", e.getColor());
  m.italic = 0;
  var d = r.value.accent === "\\vec" ? "accent-vec" : null, f = p(["accent-body", d], [p([], [m])]);
  f = x.makeVList([{ type: "elem", elem: o }, { type: "kern", size: -h }, { type: "elem", elem: f }], "firstBaseline", null, e), f.children[1].style.marginLeft = 2 * l + "em";
  var s = p(["mord", "accent"], [f]);
  return a ? (a.children[0] = s, a.height = Math.max(s.height, a.height), a.classes[0] = "mord", a) : s;
};
z.phantom = function(r, e, t) {
  var n = j(r.value.value, e.withPhantom(), t);
  return new x.makeFragment(n);
};
var C = function(r, e, t) {
  if (!r)
    return p();
  if (z[r.type]) {
    var n = z[r.type](r, e, t), a;
    return e.style !== e.parentStyle && (a = e.style.sizeMultiplier / e.parentStyle.sizeMultiplier, n.height *= a, n.depth *= a), e.size !== e.parentSize && (a = x.sizingMultiplier[e.size] / x.sizingMultiplier[e.parentSize], n.height *= a, n.depth *= a), n;
  } else
    throw new Ce("Got group of unknown type: '" + r.type + "'");
}, rr = function(r, e) {
  r = JSON.parse(JSON.stringify(r));
  var t = j(r, e), n = p(["base", e.style.cls()], t), a = p(["strut"]), i = p(["strut", "bottom"]);
  a.style.height = n.height + "em", i.style.height = n.height + n.depth + "em", i.style.verticalAlign = -n.depth + "em";
  var o = p(["katex-html"], [a, i, n]);
  return o.setAttribute("aria-hidden", "true"), o;
}, ar = rr, Ee = X;
function L0(r, e) {
  this.type = r, this.attributes = {}, this.children = e || [];
}
L0.prototype.setAttribute = function(r, e) {
  this.attributes[r] = e;
};
L0.prototype.toNode = function() {
  var r = document.createElementNS("http://www.w3.org/1998/Math/MathML", this.type);
  for (var e in this.attributes)
    Object.prototype.hasOwnProperty.call(this.attributes, e) && r.setAttribute(e, this.attributes[e]);
  for (var t = 0; t < this.children.length; t++)
    r.appendChild(this.children[t].toNode());
  return r;
};
L0.prototype.toMarkup = function() {
  var r = "<" + this.type;
  for (var e in this.attributes)
    Object.prototype.hasOwnProperty.call(this.attributes, e) && (r += " " + e + '="', r += Ee.escape(this.attributes[e]), r += '"');
  r += ">";
  for (var t = 0; t < this.children.length; t++)
    r += this.children[t].toMarkup();
  return r += "</" + this.type + ">", r;
};
function J0(r) {
  this.text = r;
}
J0.prototype.toNode = function() {
  return document.createTextNode(this.text);
};
J0.prototype.toMarkup = function() {
  return Ee.escape(this.text);
};
var ir = { MathNode: L0, TextNode: J0 }, F0 = P0, nr = w0, g = ir, sr = W, s0 = D0, lr = X, ur = F0.makeSpan, se = F0.fontMap, $ = function(r, e) {
  return s0[e][r] && s0[e][r].replace && (r = s0[e][r].replace), new g.TextNode(r);
}, Re = function(r, e) {
  var t = e.font;
  if (!t)
    return null;
  var n = r.mode;
  if (t === "mathit")
    return "italic";
  var a = r.value;
  if (lr.contains(["\\imath", "\\jmath"], a))
    return null;
  s0[n][a] && s0[n][a].replace && (a = s0[n][a].replace);
  var i = se[t].fontName;
  return nr.getCharacterMetrics(a, i) ? se[e.font].variant : null;
}, S = {};
S.mathord = function(r, e) {
  var t = new g.MathNode("mi", [$(r.value, r.mode)]), n = Re(r, e);
  return n && t.setAttribute("mathvariant", n), t;
};
S.textord = function(r, e) {
  var t = $(r.value, r.mode), n = Re(r, e) || "normal", a;
  return /[0-9]/.test(r.value) ? (a = new g.MathNode("mn", [t]), e.font && a.setAttribute("mathvariant", n)) : (a = new g.MathNode("mi", [t]), a.setAttribute("mathvariant", n)), a;
};
S.bin = function(r) {
  var e = new g.MathNode("mo", [$(r.value, r.mode)]);
  return e;
};
S.rel = function(r) {
  var e = new g.MathNode("mo", [$(r.value, r.mode)]);
  return e;
};
S.open = function(r) {
  var e = new g.MathNode("mo", [$(r.value, r.mode)]);
  return e;
};
S.close = function(r) {
  var e = new g.MathNode("mo", [$(r.value, r.mode)]);
  return e;
};
S.inner = function(r) {
  var e = new g.MathNode("mo", [$(r.value, r.mode)]);
  return e;
};
S.punct = function(r) {
  var e = new g.MathNode("mo", [$(r.value, r.mode)]);
  return e.setAttribute("separator", "true"), e;
};
S.ordgroup = function(r, e) {
  var t = Y(r.value, e), n = new g.MathNode("mrow", t);
  return n;
};
S.text = function(r, e) {
  var t = Y(r.value.body, e), n = new g.MathNode("mtext", t);
  return n;
};
S.color = function(r, e) {
  var t = Y(r.value.value, e), n = new g.MathNode("mstyle", t);
  return n.setAttribute("mathcolor", r.value.color), n;
};
S.supsub = function(r, e) {
  var t = [P(r.value.base, e)];
  r.value.sub && t.push(P(r.value.sub, e)), r.value.sup && t.push(P(r.value.sup, e));
  var n;
  r.value.sub ? r.value.sup ? n = "msubsup" : n = "msub" : n = "msup";
  var a = new g.MathNode(n, t);
  return a;
};
S.genfrac = function(r, e) {
  var t = new g.MathNode("mfrac", [P(r.value.numer, e), P(r.value.denom, e)]);
  if (r.value.hasBarLine || t.setAttribute("linethickness", "0px"), r.value.leftDelim != null || r.value.rightDelim != null) {
    var n = [];
    if (r.value.leftDelim != null) {
      var a = new g.MathNode("mo", [new g.TextNode(r.value.leftDelim)]);
      a.setAttribute("fence", "true"), n.push(a);
    }
    if (n.push(t), r.value.rightDelim != null) {
      var i = new g.MathNode("mo", [new g.TextNode(r.value.rightDelim)]);
      i.setAttribute("fence", "true"), n.push(i);
    }
    var o = new g.MathNode("mrow", n);
    return o;
  }
  return t;
};
S.array = function(r, e) {
  return new g.MathNode("mtable", r.value.body.map(function(t) {
    return new g.MathNode("mtr", t.map(function(n) {
      return new g.MathNode("mtd", [P(n, e)]);
    }));
  }));
};
S.sqrt = function(r, e) {
  var t;
  return r.value.index ? t = new g.MathNode("mroot", [P(r.value.body, e), P(r.value.index, e)]) : t = new g.MathNode("msqrt", [P(r.value.body, e)]), t;
};
S.leftright = function(r, e) {
  var t = Y(r.value.body, e);
  if (r.value.left !== ".") {
    var n = new g.MathNode("mo", [$(r.value.left, r.mode)]);
    n.setAttribute("fence", "true"), t.unshift(n);
  }
  if (r.value.right !== ".") {
    var a = new g.MathNode("mo", [$(r.value.right, r.mode)]);
    a.setAttribute("fence", "true"), t.push(a);
  }
  var i = new g.MathNode("mrow", t);
  return i;
};
S.accent = function(r, e) {
  var t = new g.MathNode("mo", [$(r.value.accent, r.mode)]), n = new g.MathNode("mover", [P(r.value.base, e), t]);
  return n.setAttribute("accent", "true"), n;
};
S.spacing = function(r) {
  var e;
  return r.value === "\\ " || r.value === "\\space" || r.value === " " || r.value === "~" ? e = new g.MathNode("mtext", [new g.TextNode("\xA0")]) : (e = new g.MathNode("mspace"), e.setAttribute("width", F0.spacingFunctions[r.value].size)), e;
};
S.op = function(r) {
  var e;
  return r.value.symbol ? e = new g.MathNode("mo", [$(r.value.body, r.mode)]) : e = new g.MathNode("mi", [new g.TextNode(r.value.body.slice(1))]), e;
};
S.katex = function(r) {
  var e = new g.MathNode("mtext", [new g.TextNode("KaTeX")]);
  return e;
};
S.font = function(r, e) {
  var t = r.value.font;
  return P(r.value.body, e.withFont(t));
};
S.delimsizing = function(r) {
  var e = [];
  r.value.value !== "." && e.push($(r.value.value, r.mode));
  var t = new g.MathNode("mo", e);
  return r.value.delimType === "open" || r.value.delimType === "close" ? t.setAttribute("fence", "true") : t.setAttribute("fence", "false"), t;
};
S.styling = function(r, e) {
  var t = Y(r.value.value, e), n = new g.MathNode("mstyle", t), a = { display: ["0", "true"], text: ["0", "false"], script: ["1", "false"], scriptscript: ["2", "false"] }, i = a[r.value.style];
  return n.setAttribute("scriptlevel", i[0]), n.setAttribute("displaystyle", i[1]), n;
};
S.sizing = function(r, e) {
  var t = Y(r.value.value, e), n = new g.MathNode("mstyle", t);
  return n.setAttribute("mathsize", F0.sizingMultiplier[r.value.size] + "em"), n;
};
S.overline = function(r, e) {
  var t = new g.MathNode("mo", [new g.TextNode("\u203E")]);
  t.setAttribute("stretchy", "true");
  var n = new g.MathNode("mover", [P(r.value.body, e), t]);
  return n.setAttribute("accent", "true"), n;
};
S.underline = function(r, e) {
  var t = new g.MathNode("mo", [new g.TextNode("\u203E")]);
  t.setAttribute("stretchy", "true");
  var n = new g.MathNode("munder", [P(r.value.body, e), t]);
  return n.setAttribute("accentunder", "true"), n;
};
S.rule = function(r) {
  var e = new g.MathNode("mrow");
  return e;
};
S.llap = function(r, e) {
  var t = new g.MathNode("mpadded", [P(r.value.body, e)]);
  return t.setAttribute("lspace", "-1width"), t.setAttribute("width", "0px"), t;
};
S.rlap = function(r, e) {
  var t = new g.MathNode("mpadded", [P(r.value.body, e)]);
  return t.setAttribute("width", "0px"), t;
};
S.phantom = function(r, e, t) {
  var n = Y(r.value.value, e);
  return new g.MathNode("mphantom", n);
};
var Y = function(r, e) {
  for (var t = [], n = 0; n < r.length; n++) {
    var a = r[n];
    t.push(P(a, e));
  }
  return t;
}, P = function(r, e) {
  if (!r)
    return new g.MathNode("mrow");
  if (S[r.type])
    return S[r.type](r, e);
  throw new sr("Got group of unknown type: '" + r.type + "'");
}, or = function(r, e, t) {
  var n = Y(r, t), a = new g.MathNode("mrow", n), i = new g.MathNode("annotation", [new g.TextNode(e)]);
  i.setAttribute("encoding", "application/x-tex");
  var o = new g.MathNode("semantics", [a, i]), l = new g.MathNode("math", [o]);
  return ur(["katex-mathml"], [l]);
}, cr = or;
function V(r) {
  this.style = r.style, this.color = r.color, this.size = r.size, this.phantom = r.phantom, this.font = r.font, r.parentStyle === void 0 ? this.parentStyle = r.style : this.parentStyle = r.parentStyle, r.parentSize === void 0 ? this.parentSize = r.size : this.parentSize = r.parentSize;
}
V.prototype.extend = function(r) {
  var e = { style: this.style, size: this.size, color: this.color, parentStyle: this.style, parentSize: this.size, phantom: this.phantom, font: this.font };
  for (var t in r)
    r.hasOwnProperty(t) && (e[t] = r[t]);
  return new V(e);
};
V.prototype.withStyle = function(r) {
  return this.extend({ style: r });
};
V.prototype.withSize = function(r) {
  return this.extend({ size: r });
};
V.prototype.withColor = function(r) {
  return this.extend({ color: r });
};
V.prototype.withPhantom = function() {
  return this.extend({ phantom: true });
};
V.prototype.withFont = function(r) {
  return this.extend({ font: r });
};
V.prototype.reset = function() {
  return this.extend({});
};
var hr = { "katex-blue": "#6495ed", "katex-orange": "#ffa500", "katex-pink": "#ff00af", "katex-red": "#df0030", "katex-green": "#28ae7b", "katex-gray": "gray", "katex-purple": "#9d38bd", "katex-blueA": "#c7e9f1", "katex-blueB": "#9cdceb", "katex-blueC": "#58c4dd", "katex-blueD": "#29abca", "katex-blueE": "#1c758a", "katex-tealA": "#acead7", "katex-tealB": "#76ddc0", "katex-tealC": "#5cd0b3", "katex-tealD": "#55c1a7", "katex-tealE": "#49a88f", "katex-greenA": "#c9e2ae", "katex-greenB": "#a6cf8c", "katex-greenC": "#83c167", "katex-greenD": "#77b05d", "katex-greenE": "#699c52", "katex-goldA": "#f7c797", "katex-goldB": "#f9b775", "katex-goldC": "#f0ac5f", "katex-goldD": "#e1a158", "katex-goldE": "#c78d46", "katex-redA": "#f7a1a3", "katex-redB": "#ff8080", "katex-redC": "#fc6255", "katex-redD": "#e65a4c", "katex-redE": "#cf5044", "katex-maroonA": "#ecabc1", "katex-maroonB": "#ec92ab", "katex-maroonC": "#c55f73", "katex-maroonD": "#a24d61", "katex-maroonE": "#94424f", "katex-purpleA": "#caa3e8", "katex-purpleB": "#b189c6", "katex-purpleC": "#9a72ac", "katex-purpleD": "#715582", "katex-purpleE": "#644172", "katex-mintA": "#f5f9e8", "katex-mintB": "#edf2df", "katex-mintC": "#e0e5cc", "katex-grayA": "#fdfdfd", "katex-grayB": "#f7f7f7", "katex-grayC": "#eeeeee", "katex-grayD": "#dddddd", "katex-grayE": "#cccccc", "katex-grayF": "#aaaaaa", "katex-grayG": "#999999", "katex-grayH": "#555555", "katex-grayI": "#333333", "katex-kaBlue": "#314453", "katex-kaGreen": "#639b24" };
V.prototype.getColor = function() {
  return this.phantom ? "transparent" : hr[this.color] || this.color;
};
var vr = V, mr = ar, fr = cr, pr = P0, dr = vr, gr = fe, le = C0, ue = pr.makeSpan, yr = function(r, e, t) {
  t = t || new gr({});
  var n = le.TEXT;
  t.displayMode && (n = le.DISPLAY);
  var a = new dr({ style: n, size: "size5" }), i = fr(r, e, a), o = mr(r, a), l = ue(["katex"], [i, o]);
  return t.displayMode ? ue(["katex-display"], [l]) : l;
}, br = yr, De = { exports: {} };
(function(r) {
  var e = X, t = W;
  function n(l, u, c) {
    typeof l == "string" && (l = [l]), typeof u == "number" && (u = { numArgs: u });
    for (var h = { numArgs: u.numArgs, argTypes: u.argTypes, greediness: u.greediness === void 0 ? 1 : u.greediness, allowedInText: !!u.allowedInText, numOptionalArgs: u.numOptionalArgs || 0, handler: c }, m = 0; m < l.length; ++m)
      r.exports[l[m]] = h;
  }
  n("\\sqrt", { numArgs: 1, numOptionalArgs: 1 }, function(l, u) {
    var c = u[0], h = u[1];
    return { type: "sqrt", body: h, index: c };
  }), n("\\text", { numArgs: 1, argTypes: ["text"], greediness: 2 }, function(l, u) {
    var c = u[0], h;
    return c.type === "ordgroup" ? h = c.value : h = [c], { type: "text", body: h };
  }), n("\\color", { numArgs: 2, allowedInText: true, greediness: 3, argTypes: ["color", "original"] }, function(l, u) {
    var c = u[0], h = u[1], m;
    return h.type === "ordgroup" ? m = h.value : m = [h], { type: "color", color: c.value, value: m };
  }), n("\\overline", { numArgs: 1 }, function(l, u) {
    var c = u[0];
    return { type: "overline", body: c };
  }), n("\\underline", { numArgs: 1 }, function(l, u) {
    var c = u[0];
    return { type: "underline", body: c };
  }), n("\\rule", { numArgs: 2, numOptionalArgs: 1, argTypes: ["size", "size", "size"] }, function(l, u) {
    var c = u[0], h = u[1], m = u[2];
    return { type: "rule", shift: c && c.value, width: h.value, height: m.value };
  }), n("\\KaTeX", { numArgs: 0 }, function(l) {
    return { type: "katex" };
  }), n("\\phantom", { numArgs: 1 }, function(l, u) {
    var c = u[0], h;
    return c.type === "ordgroup" ? h = c.value : h = [c], { type: "phantom", value: h };
  });
  var a = { "\\bigl": { type: "open", size: 1 }, "\\Bigl": { type: "open", size: 2 }, "\\biggl": { type: "open", size: 3 }, "\\Biggl": { type: "open", size: 4 }, "\\bigr": { type: "close", size: 1 }, "\\Bigr": { type: "close", size: 2 }, "\\biggr": { type: "close", size: 3 }, "\\Biggr": { type: "close", size: 4 }, "\\bigm": { type: "rel", size: 1 }, "\\Bigm": { type: "rel", size: 2 }, "\\biggm": { type: "rel", size: 3 }, "\\Biggm": { type: "rel", size: 4 }, "\\big": { type: "textord", size: 1 }, "\\Big": { type: "textord", size: 2 }, "\\bigg": { type: "textord", size: 3 }, "\\Bigg": { type: "textord", size: 4 } }, i = ["(", ")", "[", "\\lbrack", "]", "\\rbrack", "\\{", "\\lbrace", "\\}", "\\rbrace", "\\lfloor", "\\rfloor", "\\lceil", "\\rceil", "<", ">", "\\langle", "\\rangle", "\\lt", "\\gt", "\\lvert", "\\rvert", "\\lVert", "\\rVert", "\\lgroup", "\\rgroup", "\\lmoustache", "\\rmoustache", "/", "\\backslash", "|", "\\vert", "\\|", "\\Vert", "\\uparrow", "\\Uparrow", "\\downarrow", "\\Downarrow", "\\updownarrow", "\\Updownarrow", "."], o = { "\\Bbb": "\\mathbb", "\\bold": "\\mathbf", "\\frak": "\\mathfrak" };
  n(["\\blue", "\\orange", "\\pink", "\\red", "\\green", "\\gray", "\\purple", "\\blueA", "\\blueB", "\\blueC", "\\blueD", "\\blueE", "\\tealA", "\\tealB", "\\tealC", "\\tealD", "\\tealE", "\\greenA", "\\greenB", "\\greenC", "\\greenD", "\\greenE", "\\goldA", "\\goldB", "\\goldC", "\\goldD", "\\goldE", "\\redA", "\\redB", "\\redC", "\\redD", "\\redE", "\\maroonA", "\\maroonB", "\\maroonC", "\\maroonD", "\\maroonE", "\\purpleA", "\\purpleB", "\\purpleC", "\\purpleD", "\\purpleE", "\\mintA", "\\mintB", "\\mintC", "\\grayA", "\\grayB", "\\grayC", "\\grayD", "\\grayE", "\\grayF", "\\grayG", "\\grayH", "\\grayI", "\\kaBlue", "\\kaGreen"], { numArgs: 1, allowedInText: true, greediness: 3 }, function(l, u) {
    var c = u[0], h;
    return c.type === "ordgroup" ? h = c.value : h = [c], { type: "color", color: "katex-" + l.funcName.slice(1), value: h };
  }), n(["\\arcsin", "\\arccos", "\\arctan", "\\arg", "\\cos", "\\cosh", "\\cot", "\\coth", "\\csc", "\\deg", "\\dim", "\\exp", "\\hom", "\\ker", "\\lg", "\\ln", "\\log", "\\sec", "\\sin", "\\sinh", "\\tan", "\\tanh"], { numArgs: 0 }, function(l) {
    return { type: "op", limits: false, symbol: false, body: l.funcName };
  }), n(["\\det", "\\gcd", "\\inf", "\\lim", "\\liminf", "\\limsup", "\\max", "\\min", "\\Pr", "\\sup"], { numArgs: 0 }, function(l) {
    return { type: "op", limits: true, symbol: false, body: l.funcName };
  }), n(["\\int", "\\iint", "\\iiint", "\\oint"], { numArgs: 0 }, function(l) {
    return { type: "op", limits: false, symbol: true, body: l.funcName };
  }), n(["\\coprod", "\\bigvee", "\\bigwedge", "\\biguplus", "\\bigcap", "\\bigcup", "\\intop", "\\prod", "\\sum", "\\bigotimes", "\\bigoplus", "\\bigodot", "\\bigsqcup", "\\smallint"], { numArgs: 0 }, function(l) {
    return { type: "op", limits: true, symbol: true, body: l.funcName };
  }), n(["\\dfrac", "\\frac", "\\tfrac", "\\dbinom", "\\binom", "\\tbinom"], { numArgs: 2, greediness: 2 }, function(l, u) {
    var c = u[0], h = u[1], m, d = null, f = null, s = "auto";
    switch (l.funcName) {
      case "\\dfrac":
      case "\\frac":
      case "\\tfrac":
        m = true;
        break;
      case "\\dbinom":
      case "\\binom":
      case "\\tbinom":
        m = false, d = "(", f = ")";
        break;
      default:
        throw new Error("Unrecognized genfrac command");
    }
    switch (l.funcName) {
      case "\\dfrac":
      case "\\dbinom":
        s = "display";
        break;
      case "\\tfrac":
      case "\\tbinom":
        s = "text";
        break;
    }
    return { type: "genfrac", numer: c, denom: h, hasBarLine: m, leftDelim: d, rightDelim: f, size: s };
  }), n(["\\llap", "\\rlap"], { numArgs: 1, allowedInText: true }, function(l, u) {
    var c = u[0];
    return { type: l.funcName.slice(1), body: c };
  }), n(["\\bigl", "\\Bigl", "\\biggl", "\\Biggl", "\\bigr", "\\Bigr", "\\biggr", "\\Biggr", "\\bigm", "\\Bigm", "\\biggm", "\\Biggm", "\\big", "\\Big", "\\bigg", "\\Bigg", "\\left", "\\right"], { numArgs: 1 }, function(l, u) {
    var c = u[0];
    if (!e.contains(i, c.value))
      throw new t("Invalid delimiter: '" + c.value + "' after '" + l.funcName + "'", l.lexer, l.positions[1]);
    return l.funcName === "\\left" || l.funcName === "\\right" ? { type: "leftright", value: c.value } : { type: "delimsizing", size: a[l.funcName].size, delimType: a[l.funcName].type, value: c.value };
  }), n(["\\tiny", "\\scriptsize", "\\footnotesize", "\\small", "\\normalsize", "\\large", "\\Large", "\\LARGE", "\\huge", "\\Huge"], 0, null), n(["\\displaystyle", "\\textstyle", "\\scriptstyle", "\\scriptscriptstyle"], 0, null), n(["\\mathrm", "\\mathit", "\\mathbf", "\\mathbb", "\\mathcal", "\\mathfrak", "\\mathscr", "\\mathsf", "\\mathtt", "\\Bbb", "\\bold", "\\frak"], { numArgs: 1, greediness: 2 }, function(l, u) {
    var c = u[0], h = l.funcName;
    return h in o && (h = o[h]), { type: "font", font: h.slice(1), body: c };
  }), n(["\\acute", "\\grave", "\\ddot", "\\tilde", "\\bar", "\\breve", "\\check", "\\hat", "\\vec", "\\dot"], { numArgs: 1 }, function(l, u) {
    var c = u[0];
    return { type: "accent", accent: l.funcName, base: c };
  }), n(["\\over", "\\choose"], { numArgs: 0 }, function(l) {
    var u;
    switch (l.funcName) {
      case "\\over":
        u = "\\frac";
        break;
      case "\\choose":
        u = "\\binom";
        break;
      default:
        throw new Error("Unrecognized infix genfrac command");
    }
    return { type: "infix", replaceWith: u };
  }), n(["\\\\", "\\cr"], { numArgs: 0, numOptionalArgs: 1, argTypes: ["size"] }, function(l, u) {
    var c = u[0];
    return { type: "cr", size: c };
  }), n(["\\begin", "\\end"], { numArgs: 1, argTypes: ["text"] }, function(l, u) {
    var c = u[0];
    if (c.type !== "ordgroup")
      throw new t("Invalid environment name", l.lexer, l.positions[1]);
    for (var h = "", m = 0; m < c.value.length; ++m)
      h += c.value[m].value;
    return { type: "environment", name: h, namepos: l.positions[1] };
  });
})(De);
var xr = De.exports, Pe = { exports: {} };
function wr(r, e, t) {
  this.type = r, this.value = e, this.mode = t;
}
var Le = { ParseNode: wr };
(function(r) {
  var e = w0, t = Le, n = W, a = t.ParseNode;
  function i(l, u) {
    for (var c = [], h = [c], m = []; ; ) {
      var d = l.parseExpression(false, null);
      c.push(new a("ordgroup", d, l.mode));
      var f = l.nextToken.text;
      if (f === "&")
        l.consume();
      else {
        if (f === "\\end")
          break;
        if (f === "\\\\" || f === "\\cr") {
          var s = l.parseFunction();
          m.push(s.value.size), c = [], h.push(c);
        } else {
          var y = Math.min(l.pos + 1, l.lexer._input.length);
          throw new n("Expected & or \\\\ or \\end", l.lexer, y);
        }
      }
    }
    return u.body = h, u.rowGaps = m, new a(u.type, u, l.mode);
  }
  function o(l, u, c) {
    typeof l == "string" && (l = [l]), typeof u == "number" && (u = { numArgs: u });
    for (var h = { numArgs: u.numArgs || 0, argTypes: u.argTypes, greediness: 1, allowedInText: !!u.allowedInText, numOptionalArgs: u.numOptionalArgs || 0, handler: c }, m = 0; m < l.length; ++m)
      r.exports[l[m]] = h;
  }
  o("array", { numArgs: 1 }, function(l, u) {
    var c = u[0];
    c = c.value.map ? c.value : [c];
    var h = c.map(function(d) {
      var f = d.value;
      if ("lcr".indexOf(f) !== -1)
        return { type: "align", align: f };
      if (f === "|")
        return { type: "separator", separator: "|" };
      throw new n("Unknown column alignment: " + d.value, l.lexer, l.positions[1]);
    }), m = { type: "array", cols: h, hskipBeforeAndAfter: true };
    return m = i(l.parser, m), m;
  }), o(["matrix", "pmatrix", "bmatrix", "Bmatrix", "vmatrix", "Vmatrix"], {}, function(l) {
    var u = { matrix: null, pmatrix: ["(", ")"], bmatrix: ["[", "]"], Bmatrix: ["\\{", "\\}"], vmatrix: ["|", "|"], Vmatrix: ["\\Vert", "\\Vert"] }[l.envName], c = { type: "array", hskipBeforeAndAfter: false };
    return c = i(l.parser, c), u && (c = new a("leftright", { body: [c], left: u[0], right: u[1] }, l.mode)), c;
  }), o("cases", {}, function(l) {
    var u = { type: "array", arraystretch: 1.2, cols: [{ type: "align", align: "l", pregap: 0, postgap: e.metrics.quad }, { type: "align", align: "l", pregap: 0, postgap: 0 }] };
    return u = i(l.parser, u), u = new a("leftright", { body: [u], left: "\\{", right: "." }, l.mode), u;
  }), o("aligned", {}, function(l) {
    var u = { type: "array", cols: [] };
    u = i(l.parser, u);
    var c = new a("ordgroup", [], l.mode), h = 0;
    u.value.body.forEach(function(s) {
      var y;
      for (y = 1; y < s.length; y += 2)
        s[y].value.unshift(c);
      h < s.length && (h = s.length);
    });
    for (var m = 0; m < h; ++m) {
      var d = "r", f = 0;
      m % 2 === 1 ? d = "l" : m > 0 && (f = 2), u.value.cols[m] = { type: "align", align: d, pregap: f, postgap: 0 };
    }
    return u;
  });
})(Pe);
var kr = Pe.exports, v0 = _e, q0 = W;
function f0(r) {
  this._input = r;
}
function l0(r, e, t) {
  this.text = r, this.data = e, this.position = t;
}
var zr = new RegExp(`([ \r
	]+)|(---?|[!-\\[\\]-\u2027\u202A-\uD7FF\uF900-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|\\\\(?:[a-zA-Z]+|[^\uD800-\uDFFF]))`), K0 = /\s*/;
f0.prototype._innerLex = function(r, e) {
  var t = this._input;
  if (r === t.length)
    return new l0("EOF", null, r);
  var n = v0(zr, t, r);
  if (n === null)
    throw new q0("Unexpected character: '" + t[r] + "'", this, r);
  return n[2] ? new l0(n[2], null, r + n[2].length) : e ? this._innerLex(r + n[1].length, true) : new l0(" ", null, r + n[1].length);
};
var Sr = /#[a-z0-9]+|[a-z]+/i;
f0.prototype._innerLexColor = function(r) {
  var e = this._input, t = v0(K0, e, r)[0];
  r += t.length;
  var n;
  if (n = v0(Sr, e, r))
    return new l0(n[0], null, r + n[0].length);
  throw new q0("Invalid color", this, r);
};
var Mr = /(-?)\s*(\d+(?:\.\d*)?|\.\d+)\s*([a-z]{2})/;
f0.prototype._innerLexSize = function(r) {
  var e = this._input, t = v0(K0, e, r)[0];
  r += t.length;
  var n;
  if (n = v0(Mr, e, r)) {
    var a = n[3];
    if (a !== "em" && a !== "ex")
      throw new q0("Invalid unit: '" + a + "'", this, r);
    return new l0(n[0], { number: +(n[1] + n[2]), unit: a }, r + n[0].length);
  }
  throw new q0("Invalid size", this, r);
};
f0.prototype._innerLexWhitespace = function(r) {
  var e = this._input, t = v0(K0, e, r)[0];
  return r += t.length, new l0(t[0], null, r);
};
f0.prototype.lex = function(r, e) {
  if (e === "math")
    return this._innerLex(r, true);
  if (e === "text")
    return this._innerLex(r, false);
  if (e === "color")
    return this._innerLexColor(r);
  if (e === "size")
    return this._innerLexSize(r);
  if (e === "whitespace")
    return this._innerLexWhitespace(r);
};
var Tr = f0, z0 = xr, oe = kr, Ar = Tr, ce = D0, _0 = X, Nr = Le, B = W;
function E(r, e) {
  this.lexer = new Ar(r), this.settings = e;
}
var R = Nr.ParseNode;
function m0(r, e) {
  this.result = r, this.isFunction = e;
}
E.prototype.expect = function(r, e) {
  if (this.nextToken.text !== r)
    throw new B("Expected '" + r + "', got '" + this.nextToken.text + "'", this.lexer, this.nextToken.position);
  e !== false && this.consume();
};
E.prototype.consume = function() {
  this.pos = this.nextToken.position, this.nextToken = this.lexer.lex(this.pos, this.mode);
};
E.prototype.parse = function() {
  this.mode = "math", this.pos = 0, this.nextToken = this.lexer.lex(this.pos, this.mode);
  var r = this.parseInput();
  return r;
};
E.prototype.parseInput = function() {
  var r = this.parseExpression(false);
  return this.expect("EOF", false), r;
};
var qr = ["}", "\\end", "\\right", "&", "\\\\", "\\cr"];
E.prototype.parseExpression = function(r, e) {
  for (var t = []; ; ) {
    var n = this.nextToken, a = this.pos;
    if (qr.indexOf(n.text) !== -1 || e && n.text === e)
      break;
    var i = this.parseAtom();
    if (!i) {
      if (!this.settings.throwOnError && n.text[0] === "\\") {
        var o = this.handleUnsupportedCmd();
        t.push(o), a = n.position;
        continue;
      }
      break;
    }
    if (r && i.type === "infix") {
      this.pos = a, this.nextToken = n;
      break;
    }
    t.push(i);
  }
  return this.handleInfixNodes(t);
};
E.prototype.handleInfixNodes = function(r) {
  for (var e = -1, t, n = 0; n < r.length; n++) {
    var a = r[n];
    if (a.type === "infix") {
      if (e !== -1)
        throw new B("only one infix operator per group", this.lexer, -1);
      e = n, t = a.value.replaceWith;
    }
  }
  if (e !== -1) {
    var i, o, l = r.slice(0, e), u = r.slice(e + 1);
    l.length === 1 && l[0].type === "ordgroup" ? i = l[0] : i = new R("ordgroup", l, this.mode), u.length === 1 && u[0].type === "ordgroup" ? o = u[0] : o = new R("ordgroup", u, this.mode);
    var c = this.callFunction(t, [i, o], null);
    return [new R(c.type, c, this.mode)];
  } else
    return r;
};
var Cr = 1;
E.prototype.handleSupSubscript = function(r) {
  var e = this.nextToken.text, t = this.pos;
  this.consume();
  var n = this.parseGroup();
  if (n)
    if (n.isFunction) {
      var a = z0[n.result].greediness;
      if (a > Cr)
        return this.parseFunction(n);
      throw new B("Got function '" + n.result + "' with no arguments as " + r, this.lexer, t + 1);
    } else
      return n.result;
  else {
    if (!this.settings.throwOnError && this.nextToken.text[0] === "\\")
      return this.handleUnsupportedCmd();
    throw new B("Expected group after '" + e + "'", this.lexer, t + 1);
  }
};
E.prototype.handleUnsupportedCmd = function() {
  for (var r = this.nextToken.text, e = [], t = 0; t < r.length; t++)
    e.push(new R("textord", r[t], "text"));
  var n = new R("text", { body: e, type: "text" }, this.mode), a = new R("color", { color: this.settings.errorColor, value: [n], type: "color" }, this.mode);
  return this.consume(), a;
};
E.prototype.parseAtom = function() {
  var r = this.parseImplicitGroup();
  if (this.mode === "text")
    return r;
  for (var e, t; ; ) {
    var n = this.nextToken;
    if (n.text === "\\limits" || n.text === "\\nolimits") {
      if (!r || r.type !== "op")
        throw new B("Limit controls must follow a math operator", this.lexer, this.pos);
      var a = n.text === "\\limits";
      r.value.limits = a, r.value.alwaysHandleSupSub = true, this.consume();
    } else if (n.text === "^") {
      if (e)
        throw new B("Double superscript", this.lexer, this.pos);
      e = this.handleSupSubscript("superscript");
    } else if (n.text === "_") {
      if (t)
        throw new B("Double subscript", this.lexer, this.pos);
      t = this.handleSupSubscript("subscript");
    } else if (n.text === "'") {
      var i = new R("textord", "\\prime", this.mode), o = [i];
      for (this.consume(); this.nextToken.text === "'"; )
        o.push(i), this.consume();
      e = new R("ordgroup", o, this.mode);
    } else
      break;
  }
  return e || t ? new R("supsub", { base: r, sup: e, sub: t }, this.mode) : r;
};
var he = ["\\tiny", "\\scriptsize", "\\footnotesize", "\\small", "\\normalsize", "\\large", "\\Large", "\\LARGE", "\\huge", "\\Huge"], Er = ["\\displaystyle", "\\textstyle", "\\scriptstyle", "\\scriptscriptstyle"];
E.prototype.parseImplicitGroup = function() {
  var r = this.parseSymbol();
  if (r == null)
    return this.parseFunction();
  var e = r.result, t;
  if (e === "\\left") {
    var n = this.parseFunction(r);
    t = this.parseExpression(false), this.expect("\\right", false);
    var a = this.parseFunction();
    return new R("leftright", { body: t, left: n.value.value, right: a.value.value }, this.mode);
  } else if (e === "\\begin") {
    var i = this.parseFunction(r), o = i.value.name;
    if (!oe.hasOwnProperty(o))
      throw new B("No such environment: " + o, this.lexer, i.value.namepos);
    var l = oe[o], u = this.parseArguments("\\begin{" + o + "}", l), c = { mode: this.mode, envName: o, parser: this, lexer: this.lexer, positions: u.pop() }, h = l.handler(c, u);
    this.expect("\\end", false);
    var m = this.parseFunction();
    if (m.value.name !== o)
      throw new B("Mismatch: \\begin{" + o + "} matched by \\end{" + m.value.name + "}", this.lexer);
    return h.position = m.position, h;
  } else
    return _0.contains(he, e) ? (t = this.parseExpression(false), new R("sizing", { size: "size" + (_0.indexOf(he, e) + 1), value: t }, this.mode)) : _0.contains(Er, e) ? (t = this.parseExpression(true), new R("styling", { style: e.slice(1, e.length - 5), value: t }, this.mode)) : this.parseFunction(r);
};
E.prototype.parseFunction = function(r) {
  if (r || (r = this.parseGroup()), r)
    if (r.isFunction) {
      var e = r.result, t = z0[e];
      if (this.mode === "text" && !t.allowedInText)
        throw new B("Can't use function '" + e + "' in text mode", this.lexer, r.position);
      var n = this.parseArguments(e, t), a = this.callFunction(e, n, n.pop());
      return new R(a.type, a, this.mode);
    } else
      return r.result;
  else
    return null;
};
E.prototype.callFunction = function(r, e, t) {
  var n = { funcName: r, parser: this, lexer: this.lexer, positions: t };
  return z0[r].handler(n, e);
};
E.prototype.parseArguments = function(r, e) {
  var t = e.numArgs + e.numOptionalArgs;
  if (t === 0)
    return [[this.pos]];
  for (var n = e.greediness, a = [this.pos], i = [], o = 0; o < t; o++) {
    var l = e.argTypes && e.argTypes[o], u;
    if (o < e.numOptionalArgs) {
      if (l ? u = this.parseSpecialGroup(l, true) : u = this.parseOptionalGroup(), !u) {
        i.push(null), a.push(this.pos);
        continue;
      }
    } else if (l ? u = this.parseSpecialGroup(l) : u = this.parseGroup(), !u)
      if (!this.settings.throwOnError && this.nextToken.text[0] === "\\")
        u = new m0(this.handleUnsupportedCmd(this.nextToken.text), false);
      else
        throw new B("Expected group after '" + r + "'", this.lexer, this.pos);
    var c;
    if (u.isFunction) {
      var h = z0[u.result].greediness;
      if (h > n)
        c = this.parseFunction(u);
      else
        throw new B("Got function '" + u.result + "' as argument to '" + r + "'", this.lexer, this.pos - 1);
    } else
      c = u.result;
    i.push(c), a.push(this.pos);
  }
  return i.push(a), i;
};
E.prototype.parseSpecialGroup = function(r, e) {
  var t = this.mode;
  if (r === "original" && (r = t), r === "color" || r === "size") {
    var n = this.nextToken;
    if (e && n.text !== "[")
      return null;
    this.mode = r, this.expect(e ? "[" : "{");
    var a = this.nextToken;
    this.mode = t;
    var i;
    return r === "color" ? i = a.text : i = a.data, this.consume(), this.expect(e ? "]" : "}"), new m0(new R(r, i, t), false);
  } else if (r === "text") {
    var o = this.lexer.lex(this.pos, "whitespace");
    this.pos = o.position;
  }
  this.mode = r, this.nextToken = this.lexer.lex(this.pos, r);
  var l;
  return e ? l = this.parseOptionalGroup() : l = this.parseGroup(), this.mode = t, this.nextToken = this.lexer.lex(this.pos, t), l;
};
E.prototype.parseGroup = function() {
  if (this.nextToken.text === "{") {
    this.consume();
    var r = this.parseExpression(false);
    return this.expect("}"), new m0(new R("ordgroup", r, this.mode), false);
  } else
    return this.parseSymbol();
};
E.prototype.parseOptionalGroup = function() {
  if (this.nextToken.text === "[") {
    this.consume();
    var r = this.parseExpression(false, "]");
    return this.expect("]"), new m0(new R("ordgroup", r, this.mode), false);
  } else
    return null;
};
E.prototype.parseSymbol = function() {
  var r = this.nextToken;
  return z0[r.text] ? (this.consume(), new m0(r.text, true)) : ce[this.mode][r.text] ? (this.consume(), new m0(new R(ce[this.mode][r.text].group, r.text, this.mode), false)) : null;
};
E.prototype.ParseNode = R;
var Rr = E, Dr = Rr, Pr = function(r, e) {
  var t = new Dr(r, e);
  return t.parse();
}, Lr = Pr, Fe = W, Z0 = fe, $e = br, Q0 = Lr, Fr = X, Oe = function(r, e, t) {
  Fr.clearNode(e);
  var n = new Z0(t), a = Q0(r, n), i = $e(a, r, n).toNode();
  e.appendChild(i);
};
typeof document < "u" && document.compatMode !== "CSS1Compat" && (typeof console < "u" && console.warn("Warning: KaTeX doesn't work in quirks mode. Make sure your website has a suitable doctype."), Oe = function() {
  throw new Fe("KaTeX doesn't work in quirks mode.");
});
var $r = function(r, e) {
  var t = new Z0(e), n = Q0(r, t);
  return $e(n, r, t).toMarkup();
}, Or = function(r, e) {
  var t = new Z0(e);
  return Q0(r, t);
}, Ir = { render: Oe, renderToString: $r, __parse: Or, ParseError: Fe }, ve = Ir;
function me(r, e) {
  var t, n, a = r.posMax, i = true, o = true;
  return t = e > 0 ? r.src.charCodeAt(e - 1) : -1, n = e + 1 <= a ? r.src.charCodeAt(e + 1) : -1, (t === 32 || t === 9 || n >= 48 && n <= 57) && (o = false), (n === 32 || n === 9) && (i = false), { can_open: i, can_close: o };
}
function Br(r, e) {
  var t, n, a, i, o;
  if (r.src[r.pos] !== "$")
    return false;
  if (i = me(r, r.pos), !i.can_open)
    return e || (r.pending += "$"), r.pos += 1, true;
  for (t = r.pos + 1, n = t; (n = r.src.indexOf("$", n)) !== -1; ) {
    for (o = n - 1; r.src[o] === "\\"; )
      o -= 1;
    if ((n - o) % 2 == 1)
      break;
    n += 1;
  }
  return n === -1 ? (e || (r.pending += "$"), r.pos = t, true) : n - t === 0 ? (e || (r.pending += "$$"), r.pos = t + 1, true) : (i = me(r, n), i.can_close ? (e || (a = r.push("math_inline", "math", 0), a.markup = "$", a.content = r.src.slice(t, n)), r.pos = n + 1, true) : (e || (r.pending += "$"), r.pos = t, true));
}
function _r(r, e, t, n) {
  var a, i, o, l, u = false, c, h = r.bMarks[e] + r.tShift[e], m = r.eMarks[e];
  if (h + 2 > m || r.src.slice(h, h + 2) !== "$$")
    return false;
  if (h += 2, a = r.src.slice(h, m), n)
    return true;
  for (a.trim().slice(-2) === "$$" && (a = a.trim().slice(0, -2), u = true), o = e; !u && (o++, !(o >= t || (h = r.bMarks[o] + r.tShift[o], m = r.eMarks[o], h < m && r.tShift[o] < r.blkIndent))); )
    r.src.slice(h, m).trim().slice(-2) === "$$" && (l = r.src.slice(0, m).lastIndexOf("$$"), i = r.src.slice(h, l), u = true);
  return r.line = o + 1, c = r.push("math_block", "math", 0), c.block = true, c.content = (a && a.trim() ? a + `
` : "") + r.getLines(e + 1, o, r.tShift[e], true) + (i && i.trim() ? i : ""), c.map = [e, r.line], c.markup = "$$", true;
}
var Hr = function(e, t) {
  t = t || {};
  var n = function(l) {
    t.displayMode = false;
    try {
      return ve.renderToString(l, t);
    } catch (u) {
      return t.throwOnError && console.log(u), l;
    }
  }, a = function(l, u) {
    return n(l[u].content);
  }, i = function(l) {
    t.displayMode = true;
    try {
      return "<p>" + ve.renderToString(l, t) + "</p>";
    } catch (u) {
      return t.throwOnError && console.log(u), l;
    }
  }, o = function(l, u) {
    return i(l[u].content) + `
`;
  };
  e.inline.ruler.after("escape", "math_inline", Br), e.block.ruler.after("blockquote", "math_block", _r, { alt: ["paragraph", "reference", "blockquote", "list"] }), e.renderer.rules.math_inline = a, e.renderer.rules.math_block = o;
};
const Xr = Be(Hr);
export {
  Xr as m
};
