import{C as r,F as o,p as m,S as c}from"./main-B8r1lKmx.js";const d={list(){return r.get("/api/conversations").catch(o)},create(t){return r.post("/api/conversations",t).catch(o)},edit(t,e){return r.put(`/api/conversations/${t}`,e).catch(o)},del(t){return r.delete(`/api/conversations/${t}`).catch(o)},messasges(t,e={}){return r.get(`/api/conversations/${t}/messages`,{params:e}).catch(o)}},S=(t={},e="")=>{const s=window.location.href,[i,n]=s.split("#"),a=n?n.split("?"):[""],f=e||a[0],v=a[1]||"",u=new URLSearchParams(v);Object.entries(t).forEach(([_,g])=>{g!=null?u.set(_,String(g)):u.delete(_)});const l=u.toString(),p=f+(l?`?${l}`:"");window.location.hash=p},h="usual_agents",A=(t,e)=>{try{const s=localStorage.getItem(t);return s?JSON.parse(s):e}catch(s){return console.error(`Error reading localStorage key "${t}":`,s),e}},Y=m("conversation-store",{state:()=>({conversations:[],agents:[],usual_agents:A(h,[]),current_agentid:0,current_conversationid:0}),getters:{currentAgent:t=>t.usual_agents.find(e=>e.agent_id===t.current_agentid)||{name:"",logo:"",agent_id:0,configs:"{}"},currentConversation:t=>t.conversations.find(e=>e.conversation_id===t.current_conversationid)||{conversation_id:0,title:"",create_time:0,update_time:0,top:0,is_valid:0,virtual_id:Date.now().toString()}},actions:{async loadConversations(){try{const t=await d.list();return this.conversations=t.data.conversations.map(e=>(e.created_at=c({date:e.created_time,format:"YYYY.MM.DD hh:mm"}),e.updated_at=c({date:e.updated_time,format:"YYYY.MM.DD hh:mm"}),e)),this.conversations}catch(t){throw console.error("Failed to load conversations:",t),t}},saveUsualAgents(){try{localStorage.setItem(h,JSON.stringify(this.usual_agents))}catch(t){console.error("Failed to save usual agents:",t)}},async pushUsualAgent(t){const e=this.usual_agents.findIndex(a=>a.agent_id===t.agent_id),s={...t,is_fixed:e>-1?this.usual_agents[e].is_fixed:!1},i=this.usual_agents.filter(a=>a.is_fixed&&a.agent_id!==t.agent_id),n=this.usual_agents.filter(a=>!a.is_fixed&&a.agent_id!==t.agent_id);s.is_fixed?this.usual_agents=[s,...i,...n]:this.usual_agents=[...i,s,...n],this.saveUsualAgents()},toggleUsualAgentFixed(t){const e=this.usual_agents.find(s=>s.agent_id===t.agent_id);if(e){e.is_fixed=!e.is_fixed;const s=this.usual_agents.filter(n=>n.is_fixed&&n.agent_id!==t.agent_id),i=this.usual_agents.filter(n=>!n.is_fixed&&n.agent_id!==t.agent_id);this.usual_agents=e.is_fixed?[e,...s,...i]:[...s,e,...i],this.saveUsualAgents()}},updateUsualAgents(t){this.usual_agents=this.usual_agents.map(e=>e.agent_id===t.agent_id?{...e,...t}:e),this.saveUsualAgents()},deleteUsualAgent(t){this.usual_agents=this.usual_agents.filter(e=>e.agent_id!==t.agent_id),this.saveUsualAgents()},createConversation(t,e=""){return d.create({agent_id:t,title:e}).then(s=>s.data)},addConversation(t){t.created_at=c({date:t.created_time,format:"YYYY.MM.DD hh:mm"}),t.updated_at=c({date:t.updated_time,format:"YYYY.MM.DD hh:mm"}),this.conversations.unshift(t)},updateConversation(t){this.conversations=this.conversations.map(e=>e.conversation_id===t.conversation_id?{...e,...t}:e)},async editConversation(t){const e={title:t.title};await d.edit(t.conversation_id,e),this.updateConversation(t)},async delConversation(t){this.conversations=this.conversations.filter(e=>e.conversation_id!==t.conversation_id),await d.del(t.conversation_id),this.current_conversationid===t.conversation_id&&this.setCurrentState(this.current_agentid,0)},updateAgents(t){this.agents=t,this.usual_agents=this.usual_agents.filter(e=>t.some(s=>s.agent_id===e.agent_id)),this.saveUsualAgents()},setCurrentState(t,e){var s;t&&(this.agents.find(n=>n.agent_id===t)||(t=((s=this.agents[0])==null?void 0:s.agent_id)||0)),e&&(this.conversations.find(n=>n.conversation_id===e)||(e=0)),this.current_agentid=t,this.current_conversationid=e,this.setRouter({agent_id:t||null,conversation_id:e||null})},clearCurrentState(){this.current_agentid=0,this.current_conversationid=0},setRouter(t={}){S(t,"/chat")}}});export{d as c,Y as u};
